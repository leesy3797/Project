{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"machine_shape":"hm","toc_visible":true,"mount_file_id":"1MPkwcLpDnBBwS2gnzFoJqa0p60HgKsTN","authorship_tag":"ABX9TyMwAvicDAoIcwGuxtUpn276"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"249010bc075c4229bfb59299ec703016":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_6f13e83d33bb44d693f8364f9ed7d9fe","IPY_MODEL_cc48c0ed65254b67af7db8f6ecab3d67","IPY_MODEL_dbbcfdb1dc914c98891167237c5d7a6f"],"layout":"IPY_MODEL_4d2303f8653a42f4aaef6be183e45ebb"}},"6f13e83d33bb44d693f8364f9ed7d9fe":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e433b7246501437593b9a4d21f97f422","placeholder":"​","style":"IPY_MODEL_2c2f82e5f10541bdb7088bad628ea735","value":"Processing: 100%"}},"cc48c0ed65254b67af7db8f6ecab3d67":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_08089e222e494e849bb14ac24e2b40b5","max":69,"min":0,"orientation":"horizontal","style":"IPY_MODEL_52c56402aca840e6b34283efc50bec5d","value":69}},"dbbcfdb1dc914c98891167237c5d7a6f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4214f3c1ed264f50a6cca016d13157de","placeholder":"​","style":"IPY_MODEL_98a55b7cdf304ffd93805e906549349c","value":" 69/69 [11:36&lt;00:00, 16.53s/it]"}},"4d2303f8653a42f4aaef6be183e45ebb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":"hidden","width":null}},"e433b7246501437593b9a4d21f97f422":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2c2f82e5f10541bdb7088bad628ea735":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"08089e222e494e849bb14ac24e2b40b5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"52c56402aca840e6b34283efc50bec5d":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"4214f3c1ed264f50a6cca016d13157de":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"98a55b7cdf304ffd93805e906549349c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b43b258418244a0f858089dcdeb2d2c0":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_908c88bab99247dcac99b7f1a9f983fb","IPY_MODEL_2431fb5a5cec4472ae1143acdb27cd7b","IPY_MODEL_fb17da8540064f229201036e9edf1d1e"],"layout":"IPY_MODEL_2bcd7df476bf41b680ff2ab323252485"}},"908c88bab99247dcac99b7f1a9f983fb":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_127d1e6a872247ba8ff6d4c36725e917","placeholder":"​","style":"IPY_MODEL_6575e834d30e494099605b7c24b0c724","value":"Processing: 100%"}},"2431fb5a5cec4472ae1143acdb27cd7b":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_a0d1c45e077a4fd4b5f3fdcc782854bf","max":69,"min":0,"orientation":"horizontal","style":"IPY_MODEL_669d1d3d8ddd437eacdaa208ed310be2","value":69}},"fb17da8540064f229201036e9edf1d1e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b89ee132b1494ed9b4240f7a8112654b","placeholder":"​","style":"IPY_MODEL_3eb79060ab2b4ba5884b6bbd74c33ede","value":" 69/69 [14:00&lt;00:00, 27.44s/it]"}},"2bcd7df476bf41b680ff2ab323252485":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":"hidden","width":null}},"127d1e6a872247ba8ff6d4c36725e917":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6575e834d30e494099605b7c24b0c724":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a0d1c45e077a4fd4b5f3fdcc782854bf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"669d1d3d8ddd437eacdaa208ed310be2":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"b89ee132b1494ed9b4240f7a8112654b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3eb79060ab2b4ba5884b6bbd74c33ede":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"32b9c144ca0a49e9aa5516dfdac28636":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_d2ae28118bb143da8d28b46b579fa941","IPY_MODEL_9983eb168ff94ec5955b525b03722e3e","IPY_MODEL_29b8b37ab5044149998ac782e4b9391e"],"layout":"IPY_MODEL_2b171a62ffcc4523bbec44c6bb92f2e9"}},"d2ae28118bb143da8d28b46b579fa941":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d9a8c25944524df2884c6a316af214e4","placeholder":"​","style":"IPY_MODEL_6ef32a4e2b7b40b7a9a8df3ec4aa8470","value":"Processing: 100%"}},"9983eb168ff94ec5955b525b03722e3e":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_d46bfd44a18d46bb95fcaac159f3fd38","max":7,"min":0,"orientation":"horizontal","style":"IPY_MODEL_c15edc0573774f728db8758cbd9b5911","value":7}},"29b8b37ab5044149998ac782e4b9391e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3c1c6b732fce4435b5aac0150e2406e5","placeholder":"​","style":"IPY_MODEL_35c92dc51f9a46c2b9951f5f98fe6d19","value":" 7/7 [10:05&lt;00:00, 76.80s/it]"}},"2b171a62ffcc4523bbec44c6bb92f2e9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":"hidden","width":null}},"d9a8c25944524df2884c6a316af214e4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6ef32a4e2b7b40b7a9a8df3ec4aa8470":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d46bfd44a18d46bb95fcaac159f3fd38":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c15edc0573774f728db8758cbd9b5911":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"3c1c6b732fce4435b5aac0150e2406e5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"35c92dc51f9a46c2b9951f5f98fe6d19":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"86e689a0e3794ae587e7430ecbe34433":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_b29164083f87430db5daf5a78e662837","IPY_MODEL_c4b9dd11517c4757aac27b1cc9d020ef","IPY_MODEL_5908569c4eb548bcb83d6967121ab66e"],"layout":"IPY_MODEL_6160cb3392f74254ab4838ac68e773b2"}},"b29164083f87430db5daf5a78e662837":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f478ab7541334f98a039f7283600f4c6","placeholder":"​","style":"IPY_MODEL_692f5ff4de5d4742b480b68d46c6d023","value":"Processing: 100%"}},"c4b9dd11517c4757aac27b1cc9d020ef":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_11ace3cf5630483595e8501e9f5dead1","max":73,"min":0,"orientation":"horizontal","style":"IPY_MODEL_1a83b9c670284d4193f80c5112f2e285","value":73}},"5908569c4eb548bcb83d6967121ab66e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_90e95611c8494922a644cabb80374355","placeholder":"​","style":"IPY_MODEL_819007fc2515444fb981b94012ca3d3a","value":" 73/73 [21:14&lt;00:00, 19.35s/it]"}},"6160cb3392f74254ab4838ac68e773b2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":"hidden","width":null}},"f478ab7541334f98a039f7283600f4c6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"692f5ff4de5d4742b480b68d46c6d023":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"11ace3cf5630483595e8501e9f5dead1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1a83b9c670284d4193f80c5112f2e285":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"90e95611c8494922a644cabb80374355":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"819007fc2515444fb981b94012ca3d3a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e65a940ea63d45af965c10cca5994aca":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_cc5bd3de222f4362a2cc77c3a8819536","IPY_MODEL_0b802c9f2f2d451cbb404b325e7cca84","IPY_MODEL_203a707caca243be841b3a711bd1eb60"],"layout":"IPY_MODEL_e6e85cf016aa41a59623fb4b324ed62b"}},"cc5bd3de222f4362a2cc77c3a8819536":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_70fbe60827c94c4691d9cbb692209adf","placeholder":"​","style":"IPY_MODEL_edd5856a4c594cafad127e7940180264","value":"Processing: 100%"}},"0b802c9f2f2d451cbb404b325e7cca84":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_bca4b6f88a9149e185a14bb588c45167","max":4,"min":0,"orientation":"horizontal","style":"IPY_MODEL_de9ee92887dc44e5ade663ceee6cd927","value":4}},"203a707caca243be841b3a711bd1eb60":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f8a3e7fa518b4537b024e49d5bca050a","placeholder":"​","style":"IPY_MODEL_e95d6d1e35484a1cae751510be8bde9d","value":" 4/4 [00:52&lt;00:00, 13.41s/it]"}},"e6e85cf016aa41a59623fb4b324ed62b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":"hidden","width":null}},"70fbe60827c94c4691d9cbb692209adf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"edd5856a4c594cafad127e7940180264":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"bca4b6f88a9149e185a14bb588c45167":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"de9ee92887dc44e5ade663ceee6cd927":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"f8a3e7fa518b4537b024e49d5bca050a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e95d6d1e35484a1cae751510be8bde9d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a1fe285d9a314ad0b44492e9cff88cd1":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_6e7e9c34e12141d783f966ae6780eb92","IPY_MODEL_a8514ec00eea41399ec79b567aff2fe0","IPY_MODEL_95b984d1d051445a8ca6228d6157e270"],"layout":"IPY_MODEL_193a64c0538f4ed3974b0137b1c2f174"}},"6e7e9c34e12141d783f966ae6780eb92":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c58a21694cab470a996baf8d217a5454","placeholder":"​","style":"IPY_MODEL_d1727061f4844999bc715e2b39fa6c53","value":"Processing:  71%"}},"a8514ec00eea41399ec79b567aff2fe0":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_751b121397e34e4abe2be344438edcd8","max":7,"min":0,"orientation":"horizontal","style":"IPY_MODEL_3247c20f647849bf88278ef20a243044","value":5}},"95b984d1d051445a8ca6228d6157e270":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a5c5135968564bf8be5bba2e0e45f85c","placeholder":"​","style":"IPY_MODEL_1dd7b1d8544e416cb2c9552e78a5be09","value":" 5/7 [19:38&lt;06:42, 201.23s/it]"}},"193a64c0538f4ed3974b0137b1c2f174":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c58a21694cab470a996baf8d217a5454":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d1727061f4844999bc715e2b39fa6c53":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"751b121397e34e4abe2be344438edcd8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3247c20f647849bf88278ef20a243044":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"a5c5135968564bf8be5bba2e0e45f85c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1dd7b1d8544e416cb2c9552e78a5be09":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"markdown","source":["# 1.데이터 처리"],"metadata":{"id":"_4fbRCGLrKC3"}},{"cell_type":"markdown","source":["## 1) 데이터 불러오기"],"metadata":{"id":"HNwBwlPaqqEL"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"A0rjFTYKNBl0"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import seaborn as sns\n","sns.set_style(\"darkgrid\")\n","import datetime as dt\n","from sklearn.preprocessing import MinMaxScaler, StandardScaler\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import LabelEncoder, OneHotEncoder\n","from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\n","from sklearn.metrics import precision_score, recall_score"]},{"cell_type":"code","source":["org_df = pd.read_csv('/content/drive/MyDrive/ASAC_데이터분석/ASAC_최종프로젝트(예지보전)/Machine_Signal_Labeled_50')\n","org_df.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":163},"id":"Kam2AL8nNK6d","executionInfo":{"status":"ok","timestamp":1704245100360,"user_tz":-540,"elapsed":2095,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"e0f099fd-1824-489d-ac5a-0d2f364e2efd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  ckey machine_id      date  hour  connect_avg  connect_max  \\\n","0  MA1074_4_20210901_0   MA1074_4  20210901     0    17.598889         32.0   \n","1  MA1074_4_20210901_1   MA1074_4  20210901     1    13.039444         25.0   \n","2  MA1074_4_20210901_2   MA1074_4  20210901     2    10.153889         23.0   \n","\n","   in_handover_rate  out_handover_rate  inter_handover_rate  lower_prb  \\\n","0         99.763033         100.000000           100.000000  30.361451   \n","1         99.661017          99.516908            99.367089  22.009545   \n","2         99.583333          99.411765           100.000000  16.333186   \n","\n","   upper_prb  reconfig_rate  lower_bler  upper_bler       tot_et  y  \n","0  35.072902     101.157849    7.873696   11.028859  27753.51401  0  \n","1  30.845568     101.483722    6.947635   10.664447  19952.83154  0  \n","2  11.431835     101.656051    8.057850    9.488755  16330.00997  0  "],"text/html":["\n","  <div id=\"df-8963c56a-36a6-4c5a-a2d1-eae8ac9a3946\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ckey</th>\n","      <th>machine_id</th>\n","      <th>date</th>\n","      <th>hour</th>\n","      <th>connect_avg</th>\n","      <th>connect_max</th>\n","      <th>in_handover_rate</th>\n","      <th>out_handover_rate</th>\n","      <th>inter_handover_rate</th>\n","      <th>lower_prb</th>\n","      <th>upper_prb</th>\n","      <th>reconfig_rate</th>\n","      <th>lower_bler</th>\n","      <th>upper_bler</th>\n","      <th>tot_et</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>MA1074_4_20210901_0</td>\n","      <td>MA1074_4</td>\n","      <td>20210901</td>\n","      <td>0</td>\n","      <td>17.598889</td>\n","      <td>32.0</td>\n","      <td>99.763033</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>30.361451</td>\n","      <td>35.072902</td>\n","      <td>101.157849</td>\n","      <td>7.873696</td>\n","      <td>11.028859</td>\n","      <td>27753.51401</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>MA1074_4_20210901_1</td>\n","      <td>MA1074_4</td>\n","      <td>20210901</td>\n","      <td>1</td>\n","      <td>13.039444</td>\n","      <td>25.0</td>\n","      <td>99.661017</td>\n","      <td>99.516908</td>\n","      <td>99.367089</td>\n","      <td>22.009545</td>\n","      <td>30.845568</td>\n","      <td>101.483722</td>\n","      <td>6.947635</td>\n","      <td>10.664447</td>\n","      <td>19952.83154</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>MA1074_4_20210901_2</td>\n","      <td>MA1074_4</td>\n","      <td>20210901</td>\n","      <td>2</td>\n","      <td>10.153889</td>\n","      <td>23.0</td>\n","      <td>99.583333</td>\n","      <td>99.411765</td>\n","      <td>100.000000</td>\n","      <td>16.333186</td>\n","      <td>11.431835</td>\n","      <td>101.656051</td>\n","      <td>8.057850</td>\n","      <td>9.488755</td>\n","      <td>16330.00997</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8963c56a-36a6-4c5a-a2d1-eae8ac9a3946')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8963c56a-36a6-4c5a-a2d1-eae8ac9a3946 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8963c56a-36a6-4c5a-a2d1-eae8ac9a3946');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b3952329-4c1c-4bbc-8e37-6de6cdef5756\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b3952329-4c1c-4bbc-8e37-6de6cdef5756')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b3952329-4c1c-4bbc-8e37-6de6cdef5756 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["df = org_df.copy()\n","df. head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"bBWKHYM26yhH","executionInfo":{"status":"ok","timestamp":1704245100360,"user_tz":-540,"elapsed":12,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"581894fd-b428-4607-94ce-b35c36eb9a87"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  ckey machine_id      date  hour  connect_avg  connect_max  \\\n","0  MA1074_4_20210901_0   MA1074_4  20210901     0    17.598889         32.0   \n","1  MA1074_4_20210901_1   MA1074_4  20210901     1    13.039444         25.0   \n","2  MA1074_4_20210901_2   MA1074_4  20210901     2    10.153889         23.0   \n","3  MA1074_4_20210901_4   MA1074_4  20210901     4     9.346667         21.0   \n","4  MA1074_4_20210901_6   MA1074_4  20210901     6    16.607778         36.0   \n","\n","   in_handover_rate  out_handover_rate  inter_handover_rate  lower_prb  \\\n","0         99.763033         100.000000           100.000000  30.361451   \n","1         99.661017          99.516908            99.367089  22.009545   \n","2         99.583333          99.411765           100.000000  16.333186   \n","3        100.000000         100.000000           100.000000  24.041863   \n","4         99.651972         100.000000           100.000000  17.525349   \n","\n","   upper_prb  reconfig_rate  lower_bler  upper_bler       tot_et  y  \n","0  35.072902     101.157849    7.873696   11.028859  27753.51401  0  \n","1  30.845568     101.483722    6.947635   10.664447  19952.83154  0  \n","2  11.431835     101.656051    8.057850    9.488755  16330.00997  0  \n","3  16.660100     106.972789    8.878345   12.315908  15947.12178  0  \n","4  12.985036     117.309547    9.225079   16.291597  27545.00250  0  "],"text/html":["\n","  <div id=\"df-d3e3177d-0d29-4533-bbca-9791024f5146\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ckey</th>\n","      <th>machine_id</th>\n","      <th>date</th>\n","      <th>hour</th>\n","      <th>connect_avg</th>\n","      <th>connect_max</th>\n","      <th>in_handover_rate</th>\n","      <th>out_handover_rate</th>\n","      <th>inter_handover_rate</th>\n","      <th>lower_prb</th>\n","      <th>upper_prb</th>\n","      <th>reconfig_rate</th>\n","      <th>lower_bler</th>\n","      <th>upper_bler</th>\n","      <th>tot_et</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>MA1074_4_20210901_0</td>\n","      <td>MA1074_4</td>\n","      <td>20210901</td>\n","      <td>0</td>\n","      <td>17.598889</td>\n","      <td>32.0</td>\n","      <td>99.763033</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>30.361451</td>\n","      <td>35.072902</td>\n","      <td>101.157849</td>\n","      <td>7.873696</td>\n","      <td>11.028859</td>\n","      <td>27753.51401</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>MA1074_4_20210901_1</td>\n","      <td>MA1074_4</td>\n","      <td>20210901</td>\n","      <td>1</td>\n","      <td>13.039444</td>\n","      <td>25.0</td>\n","      <td>99.661017</td>\n","      <td>99.516908</td>\n","      <td>99.367089</td>\n","      <td>22.009545</td>\n","      <td>30.845568</td>\n","      <td>101.483722</td>\n","      <td>6.947635</td>\n","      <td>10.664447</td>\n","      <td>19952.83154</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>MA1074_4_20210901_2</td>\n","      <td>MA1074_4</td>\n","      <td>20210901</td>\n","      <td>2</td>\n","      <td>10.153889</td>\n","      <td>23.0</td>\n","      <td>99.583333</td>\n","      <td>99.411765</td>\n","      <td>100.000000</td>\n","      <td>16.333186</td>\n","      <td>11.431835</td>\n","      <td>101.656051</td>\n","      <td>8.057850</td>\n","      <td>9.488755</td>\n","      <td>16330.00997</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>MA1074_4_20210901_4</td>\n","      <td>MA1074_4</td>\n","      <td>20210901</td>\n","      <td>4</td>\n","      <td>9.346667</td>\n","      <td>21.0</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>24.041863</td>\n","      <td>16.660100</td>\n","      <td>106.972789</td>\n","      <td>8.878345</td>\n","      <td>12.315908</td>\n","      <td>15947.12178</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>MA1074_4_20210901_6</td>\n","      <td>MA1074_4</td>\n","      <td>20210901</td>\n","      <td>6</td>\n","      <td>16.607778</td>\n","      <td>36.0</td>\n","      <td>99.651972</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>17.525349</td>\n","      <td>12.985036</td>\n","      <td>117.309547</td>\n","      <td>9.225079</td>\n","      <td>16.291597</td>\n","      <td>27545.00250</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d3e3177d-0d29-4533-bbca-9791024f5146')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d3e3177d-0d29-4533-bbca-9791024f5146 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d3e3177d-0d29-4533-bbca-9791024f5146');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-66ac3a19-df2a-48ea-8589-2396c68f48a6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-66ac3a19-df2a-48ea-8589-2396c68f48a6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-66ac3a19-df2a-48ea-8589-2396c68f48a6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["## 2) 누락된 데이터 처리"],"metadata":{"id":"Eh-LM55g3NA4"}},{"cell_type":"code","source":["df['date_time'] = pd.to_datetime(df.date.astype('str') + '-' + df.hour.astype('str'), format='%Y%m%d-%H')"],"metadata":{"id":"4tG-g6dP3P1q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["time_index = pd.date_range(df['date_time'].min(), df['date_time'].max(), freq='H')"],"metadata":{"id":"113aTnmr3P4P"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = df.drop_duplicates(['machine_id', 'date_time'], keep=False).copy()"],"metadata":{"id":"4yqCC3GS3P6V"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_new = pd.DataFrame()\n","machine_list = df.machine_id.unique()\n","for machine in machine_list:\n","    tmp = pd.DataFrame({\n","        'machine_id':[machine]*len(time_index),\n","        'date_time':time_index})\n","    df_new = pd.concat([df_new, tmp], axis=0)"],"metadata":{"id":"yI52O2eS3P8N"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_new"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"gCPaVukR37M6","executionInfo":{"status":"ok","timestamp":1704245100361,"user_tz":-540,"elapsed":10,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"48dd1776-e343-4ac8-d8b1-f1f48067fadb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     machine_id           date_time\n","0      MA1074_4 2021-09-01 00:00:00\n","1      MA1074_4 2021-09-01 01:00:00\n","2      MA1074_4 2021-09-01 02:00:00\n","3      MA1074_4 2021-09-01 03:00:00\n","4      MA1074_4 2021-09-01 04:00:00\n","...         ...                 ...\n","1459  MA2561_18 2021-10-31 19:00:00\n","1460  MA2561_18 2021-10-31 20:00:00\n","1461  MA2561_18 2021-10-31 21:00:00\n","1462  MA2561_18 2021-10-31 22:00:00\n","1463  MA2561_18 2021-10-31 23:00:00\n","\n","[74664 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-cd78fff3-c255-426a-a9ad-7d224e5021c7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>machine_id</th>\n","      <th>date_time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>MA1074_4</td>\n","      <td>2021-09-01 00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>MA1074_4</td>\n","      <td>2021-09-01 01:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>MA1074_4</td>\n","      <td>2021-09-01 02:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>MA1074_4</td>\n","      <td>2021-09-01 03:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>MA1074_4</td>\n","      <td>2021-09-01 04:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1459</th>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31 19:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>1460</th>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31 20:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>1461</th>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31 21:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>1462</th>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31 22:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>1463</th>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31 23:00:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>74664 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cd78fff3-c255-426a-a9ad-7d224e5021c7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cd78fff3-c255-426a-a9ad-7d224e5021c7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cd78fff3-c255-426a-a9ad-7d224e5021c7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c0586b06-2d04-4a71-bca1-b6517668dd09\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c0586b06-2d04-4a71-bca1-b6517668dd09')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c0586b06-2d04-4a71-bca1-b6517668dd09 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0901674f-b81b-4e84-9f84-ead21269d445\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_new')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0901674f-b81b-4e84-9f84-ead21269d445 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_new');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df_new = df_new.merge(df, on=['machine_id', 'date_time'], how='left')"],"metadata":{"id":"bXAWh5Yy37Pv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_new['y'] = df_new['y'].fillna(0)"],"metadata":{"id":"Y_GG1D8e4AAG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.machine_id.unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vvqvfDdB4ADG","executionInfo":{"status":"ok","timestamp":1704245101458,"user_tz":-540,"elapsed":15,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"838adfa2-4252-47d6-a22e-734d9e1a11fc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['MA1074_4', 'MA1084_11', 'MA1116_1', 'MA1184_4', 'MA1229_4',\n","       'MA1236_1', 'MA1266_5', 'MA1279_1', 'MA1279_11', 'MA1310_1',\n","       'MA1312_11', 'MA1313_1', 'MA1321_2', 'MA1322_4', 'MA1340_5',\n","       'MA1341_9', 'MA1353_42', 'MA1355_0', 'MA1407_2', 'MA1460_7',\n","       'MA1550_7', 'MA1563_2', 'MA1563_7', 'MA1584_1', 'MA1651_7',\n","       'MA1704_5', 'MA1704_7', 'MA1713_31', 'MA1730_4', 'MA1738_5',\n","       'MA1797_1', 'MA1803_1', 'MA1831_4', 'MA1890_8', 'MA1891_1',\n","       'MA1908_8', 'MA1932_1', 'MA1955_5', 'MA2017_11', 'MA2030_7',\n","       'MA2052_1', 'MA2111_47', 'MA2239_3', 'MA2354_2', 'MA2443_4',\n","       'MA2467_5', 'MA2488_4', 'MA2490_7', 'MA2523_8', 'MA2559_37',\n","       'MA2561_18'], dtype=object)"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["## 3) 파생변수 만들기\n"],"metadata":{"id":"EHdKb2eiq89E"}},{"cell_type":"markdown","source":["- 년, 달, 날, 요일, 주말, 시간, 오전/오후, 출퇴근시간, 공휴일과 대체공휴일"],"metadata":{"id":"iuv1J5HtMOjm"}},{"cell_type":"code","source":["df_new['year'] = df_new['date_time'].dt.year\n","df_new['month'] = df_new['date_time'].dt.month\n","df_new['day'] = df_new['date_time'].dt.day\n","df_new['dayofweek'] = df_new['date_time'].dt.dayofweek\n","df_new['weekday'] = (df_new['dayofweek'] < 5).astype(int)\n","df_new['hour'] = (df_new['date_time']).dt.hour"],"metadata":{"id":"foBOo8N76VHr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 오전/오후 구분 파생 변수 생성\n","df_new['day_night'] = df_new['hour'].apply(lambda x: 1 if x > 7 or x < 23 else 0)"],"metadata":{"id":"Fqgwduhd6VJ7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 출퇴근 시간 구분 파생 변수 생성\n","df_new['commute_time'] = df_new['hour'].apply(lambda x: 1 if (x >= 7 and x <= 9) or (x >= 17 and x <= 19) else 0)"],"metadata":{"id":"QCc4bQ-E6VMU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 'holiday' 열 추가 및 값 설정\n","df_new['holiday'] = 0\n","\n","# 9월 20일을 휴일로 설정\n","df_new.loc[(df_new['month'] == 9) & (df_new['day'] == 20), 'holiday'] = 1\n","df_new.loc[(df_new['month'] == 9) & (df_new['day'] == 21), 'holiday'] = 1\n","df_new.loc[(df_new['month'] == 9) & (df_new['day'] == 22), 'holiday'] = 1\n","df_new.loc[(df_new['month'] == 10) & (df_new['day'] == 3), 'holiday'] = 1\n","df_new.loc[(df_new['month'] == 10) & (df_new['day'] == 4), 'holiday'] = 1\n","df_new.loc[(df_new['month'] == 10) & (df_new['day'] == 9), 'holiday'] = 1\n","df_new.loc[(df_new['month'] == 10) & (df_new['day'] == 11), 'holiday'] = 1"],"metadata":{"id":"DaRifMpm6VOq"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- 기지국과 기계"],"metadata":{"id":"ISOMvNegMVDS"}},{"cell_type":"code","source":["df_new.loc[:, 'base_station'] = df_new['machine_id'].apply(lambda x : x.split('_')[0])"],"metadata":{"id":"i9Qto9vX8LNB"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- 날, 요일, 시간 => sin, cos 변환"],"metadata":{"id":"I_MMuCwOMaTt"}},{"cell_type":"code","source":["df_new['day_sin'] = np.sin(df_new['day'] / 31 * 2 * np.pi)\n","df_new['day_cos'] = np.cos(df_new['day'] / 31 * 2 * np.pi)\n","\n","df_new['dayofweek_sin'] = np.sin(df_new['dayofweek'] / 7 * 2 * np.pi)\n","df_new['dayofweek_cos'] = np.cos(df_new['dayofweek'] / 7 * 2 * np.pi)\n","\n","df_new['hour_sin'] = np.sin(df_new['hour'] / 24 * 2 * np.pi)\n","df_new['hour_cos'] = np.cos(df_new['hour'] / 24 * 2 * np.pi)"],"metadata":{"id":"JPJCeEVc1SES"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- 컬럼 순서 정리 및 제거"],"metadata":{"id":"TnWGYN73MfxJ"}},{"cell_type":"code","source":["org_my_data = df_new[[\"ckey\",\"base_station\", \"machine_id\",\t\"date_time\", \t\"year\",\t\"month\",\t\"day\",\t\"hour\", \"dayofweek\",\t\"weekday\",\t\"day_night\",\t\"commute_time\",\t\"holiday\",\"day_sin\",\"day_cos\",\"dayofweek_sin\",\"dayofweek_cos\",\"hour_sin\",\"hour_cos\",\t\"connect_avg\",\t\"connect_max\",\n","         \"in_handover_rate\",\t\"out_handover_rate\",\t\"inter_handover_rate\",\t\"lower_prb\",\t\"upper_prb\",\t\"reconfig_rate\",\"lower_bler\",\t\"upper_bler\",\t\"tot_et\",\"y\",\"date\",\"year\"]]"],"metadata":{"id":"NCmiWHlZ8LQ5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["my_data = org_my_data.copy()"],"metadata":{"id":"Y5WD_5K09-NS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["my_data.drop(['date','year','ckey','date_time'], axis=1, inplace=True)"],"metadata":{"id":"cNHpgySB8LPP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 4) 결측값 처리하기 - 보간법 spline 3"],"metadata":{"id":"QcZxk4tGqtm_"}},{"cell_type":"markdown","source":["- 수치형 컬럼 지정"],"metadata":{"id":"r1eNxH0bODqi"}},{"cell_type":"code","source":["columns_to = [\"connect_avg\",\t\"connect_max\",\n","         \"in_handover_rate\",\t\"out_handover_rate\",\t\"inter_handover_rate\",\n","          \"lower_prb\",\t\"upper_prb\",\t\"reconfig_rate\",\"lower_bler\",\t\"upper_bler\",\t\"tot_et\"]"],"metadata":{"id":"pqEybalBWtYz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for i in my_data['machine_id'].unique():\n","      #print(i)\n","      my_data.loc[my_data['machine_id'] == i,columns_to] = my_data.loc[my_data['machine_id'] == i,columns_to].interpolate(method='spline', order=3).bfill()"],"metadata":{"id":"c0_zSYg-f9em","executionInfo":{"status":"ok","timestamp":1704245158582,"user_tz":-540,"elapsed":57133,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"73faa768-ee57-482e-d8cb-e1642628b55e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/scipy/interpolate/_fitpack2.py:313: UserWarning: \n","A theoretically impossible result was found during the iteration\n","process for finding a smoothing spline with fp = s: s too small.\n","There is an approximation returned but the corresponding weighted sum\n","of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n","  warnings.warn(message)\n","/usr/local/lib/python3.10/dist-packages/scipy/interpolate/_fitpack2.py:313: UserWarning: \n","The maximal number of iterations maxit (set to 20 by the program)\n","allowed for finding a smoothing spline with fp=s has been reached: s\n","too small.\n","There is an approximation returned but the corresponding weighted sum\n","of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n","  warnings.warn(message)\n","/usr/local/lib/python3.10/dist-packages/scipy/interpolate/_fitpack2.py:313: UserWarning: \n","The maximal number of iterations maxit (set to 20 by the program)\n","allowed for finding a smoothing spline with fp=s has been reached: s\n","too small.\n","There is an approximation returned but the corresponding weighted sum\n","of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n","  warnings.warn(message)\n","/usr/local/lib/python3.10/dist-packages/scipy/interpolate/_fitpack2.py:313: UserWarning: \n","The maximal number of iterations maxit (set to 20 by the program)\n","allowed for finding a smoothing spline with fp=s has been reached: s\n","too small.\n","There is an approximation returned but the corresponding weighted sum\n","of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n","  warnings.warn(message)\n","/usr/local/lib/python3.10/dist-packages/scipy/interpolate/_fitpack2.py:313: UserWarning: \n","The maximal number of iterations maxit (set to 20 by the program)\n","allowed for finding a smoothing spline with fp=s has been reached: s\n","too small.\n","There is an approximation returned but the corresponding weighted sum\n","of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n","  warnings.warn(message)\n"]}]},{"cell_type":"code","source":["my_data.isna().sum().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LFzi8gnmFvKC","executionInfo":{"status":"ok","timestamp":1704245158582,"user_tz":-540,"elapsed":22,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"1c082702-e0f5-4076-a20e-76b1746b2928"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":26}]},{"cell_type":"markdown","source":["## 5) 음수값 0으로 처리"],"metadata":{"id":"PhSX2SEk-87i"}},{"cell_type":"code","source":["tmp = my_data[columns_to].copy()"],"metadata":{"id":"QZr4MAr_0j6p"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tmp[tmp['lower_prb']<0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"ZPQ-Q_RZG22k","executionInfo":{"status":"ok","timestamp":1704245158583,"user_tz":-540,"elapsed":22,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"0ab59073-3148-4093-a542-624b42a4f45d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       connect_avg  connect_max  in_handover_rate  out_handover_rate  \\\n","510       6.182873     9.455208         99.510813          99.882537   \n","511       7.725437     9.840917         99.510324          99.882836   \n","512       9.836456    12.316651         99.507424          99.883135   \n","1467      3.043297     7.451142        104.593959          99.630231   \n","1899      4.855622     9.734035         17.261095          99.789933   \n","...            ...          ...               ...                ...   \n","70035     5.757630    12.281238        102.977351          99.183801   \n","70707     7.658176    17.008466         99.396759          99.827558   \n","70708     6.471661    17.144390         99.118844          99.827578   \n","72772    -9.436484   107.914238         99.860593          99.808453   \n","72773    -9.342834    94.137868         99.844800          99.808415   \n","\n","       inter_handover_rate  lower_prb  upper_prb  reconfig_rate  lower_bler  \\\n","510              99.885556  -0.444799  -1.693005     104.054332    9.024819   \n","511              99.885647  -2.400764  -3.072863     104.306019    9.034715   \n","512              99.885737  -1.367162  -2.018439     104.419201    9.049474   \n","1467             99.754550  -0.528206   6.020388     101.425877    3.405957   \n","1899            100.112161  -1.459317   2.484401     101.043966    9.537167   \n","...                    ...        ...        ...            ...         ...   \n","70035            99.996040  -5.468618   2.735378     103.018266   20.786401   \n","70707            99.709313  -8.785232  29.688030     101.944073    9.102297   \n","70708            99.708198  -0.654911  15.731683     101.943511    8.939711   \n","72772            99.948165  -2.776338  -6.299988      98.761410    8.021371   \n","72773            99.948180  -0.983489  -7.948576      98.761050    8.021041   \n","\n","       upper_bler        tot_et  \n","510      8.182411  19362.253454  \n","511     10.187861  23217.205504  \n","512     13.000135  26343.544279  \n","1467    18.943101   5963.529429  \n","1899    25.651590   1435.997151  \n","...           ...           ...  \n","70035   20.804323   8215.908410  \n","70707   15.359454  12299.915230  \n","70708   17.793010  25322.538901  \n","72772   19.698532  -5864.171813  \n","72773   20.322433 -21129.458394  \n","\n","[2501 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-5b74e862-62fc-4e55-be3b-bb2083a6b246\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>connect_avg</th>\n","      <th>connect_max</th>\n","      <th>in_handover_rate</th>\n","      <th>out_handover_rate</th>\n","      <th>inter_handover_rate</th>\n","      <th>lower_prb</th>\n","      <th>upper_prb</th>\n","      <th>reconfig_rate</th>\n","      <th>lower_bler</th>\n","      <th>upper_bler</th>\n","      <th>tot_et</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>510</th>\n","      <td>6.182873</td>\n","      <td>9.455208</td>\n","      <td>99.510813</td>\n","      <td>99.882537</td>\n","      <td>99.885556</td>\n","      <td>-0.444799</td>\n","      <td>-1.693005</td>\n","      <td>104.054332</td>\n","      <td>9.024819</td>\n","      <td>8.182411</td>\n","      <td>19362.253454</td>\n","    </tr>\n","    <tr>\n","      <th>511</th>\n","      <td>7.725437</td>\n","      <td>9.840917</td>\n","      <td>99.510324</td>\n","      <td>99.882836</td>\n","      <td>99.885647</td>\n","      <td>-2.400764</td>\n","      <td>-3.072863</td>\n","      <td>104.306019</td>\n","      <td>9.034715</td>\n","      <td>10.187861</td>\n","      <td>23217.205504</td>\n","    </tr>\n","    <tr>\n","      <th>512</th>\n","      <td>9.836456</td>\n","      <td>12.316651</td>\n","      <td>99.507424</td>\n","      <td>99.883135</td>\n","      <td>99.885737</td>\n","      <td>-1.367162</td>\n","      <td>-2.018439</td>\n","      <td>104.419201</td>\n","      <td>9.049474</td>\n","      <td>13.000135</td>\n","      <td>26343.544279</td>\n","    </tr>\n","    <tr>\n","      <th>1467</th>\n","      <td>3.043297</td>\n","      <td>7.451142</td>\n","      <td>104.593959</td>\n","      <td>99.630231</td>\n","      <td>99.754550</td>\n","      <td>-0.528206</td>\n","      <td>6.020388</td>\n","      <td>101.425877</td>\n","      <td>3.405957</td>\n","      <td>18.943101</td>\n","      <td>5963.529429</td>\n","    </tr>\n","    <tr>\n","      <th>1899</th>\n","      <td>4.855622</td>\n","      <td>9.734035</td>\n","      <td>17.261095</td>\n","      <td>99.789933</td>\n","      <td>100.112161</td>\n","      <td>-1.459317</td>\n","      <td>2.484401</td>\n","      <td>101.043966</td>\n","      <td>9.537167</td>\n","      <td>25.651590</td>\n","      <td>1435.997151</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>70035</th>\n","      <td>5.757630</td>\n","      <td>12.281238</td>\n","      <td>102.977351</td>\n","      <td>99.183801</td>\n","      <td>99.996040</td>\n","      <td>-5.468618</td>\n","      <td>2.735378</td>\n","      <td>103.018266</td>\n","      <td>20.786401</td>\n","      <td>20.804323</td>\n","      <td>8215.908410</td>\n","    </tr>\n","    <tr>\n","      <th>70707</th>\n","      <td>7.658176</td>\n","      <td>17.008466</td>\n","      <td>99.396759</td>\n","      <td>99.827558</td>\n","      <td>99.709313</td>\n","      <td>-8.785232</td>\n","      <td>29.688030</td>\n","      <td>101.944073</td>\n","      <td>9.102297</td>\n","      <td>15.359454</td>\n","      <td>12299.915230</td>\n","    </tr>\n","    <tr>\n","      <th>70708</th>\n","      <td>6.471661</td>\n","      <td>17.144390</td>\n","      <td>99.118844</td>\n","      <td>99.827578</td>\n","      <td>99.708198</td>\n","      <td>-0.654911</td>\n","      <td>15.731683</td>\n","      <td>101.943511</td>\n","      <td>8.939711</td>\n","      <td>17.793010</td>\n","      <td>25322.538901</td>\n","    </tr>\n","    <tr>\n","      <th>72772</th>\n","      <td>-9.436484</td>\n","      <td>107.914238</td>\n","      <td>99.860593</td>\n","      <td>99.808453</td>\n","      <td>99.948165</td>\n","      <td>-2.776338</td>\n","      <td>-6.299988</td>\n","      <td>98.761410</td>\n","      <td>8.021371</td>\n","      <td>19.698532</td>\n","      <td>-5864.171813</td>\n","    </tr>\n","    <tr>\n","      <th>72773</th>\n","      <td>-9.342834</td>\n","      <td>94.137868</td>\n","      <td>99.844800</td>\n","      <td>99.808415</td>\n","      <td>99.948180</td>\n","      <td>-0.983489</td>\n","      <td>-7.948576</td>\n","      <td>98.761050</td>\n","      <td>8.021041</td>\n","      <td>20.322433</td>\n","      <td>-21129.458394</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2501 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5b74e862-62fc-4e55-be3b-bb2083a6b246')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5b74e862-62fc-4e55-be3b-bb2083a6b246 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5b74e862-62fc-4e55-be3b-bb2083a6b246');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-53e0fcdd-0111-4795-84eb-3f61f96b1c37\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-53e0fcdd-0111-4795-84eb-3f61f96b1c37')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-53e0fcdd-0111-4795-84eb-3f61f96b1c37 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["tmp[tmp<0] = 0"],"metadata":{"id":"bzRKitpezko_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tmp[tmp['lower_prb']<0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"bSKMRNC9z6yz","executionInfo":{"status":"ok","timestamp":1704245158585,"user_tz":-540,"elapsed":22,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"7b012efa-ee3b-4080-9314-555f68337e83"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [connect_avg, connect_max, in_handover_rate, out_handover_rate, inter_handover_rate, lower_prb, upper_prb, reconfig_rate, lower_bler, upper_bler, tot_et]\n","Index: []"],"text/html":["\n","  <div id=\"df-10d3d9c8-5dfe-44d2-bd28-9d460148084e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>connect_avg</th>\n","      <th>connect_max</th>\n","      <th>in_handover_rate</th>\n","      <th>out_handover_rate</th>\n","      <th>inter_handover_rate</th>\n","      <th>lower_prb</th>\n","      <th>upper_prb</th>\n","      <th>reconfig_rate</th>\n","      <th>lower_bler</th>\n","      <th>upper_bler</th>\n","      <th>tot_et</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-10d3d9c8-5dfe-44d2-bd28-9d460148084e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-10d3d9c8-5dfe-44d2-bd28-9d460148084e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-10d3d9c8-5dfe-44d2-bd28-9d460148084e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["my_data[columns_to] = tmp"],"metadata":{"id":"giNDwpLj-6_s"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["my_data[my_data['lower_prb']<0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":99},"id":"2ifP2UDF_Pjc","executionInfo":{"status":"ok","timestamp":1704245158585,"user_tz":-540,"elapsed":22,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"5c770ddd-dd77-42f5-c6c5-c242f50bad92"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [base_station, machine_id, month, day, hour, dayofweek, weekday, day_night, commute_time, holiday, day_sin, day_cos, dayofweek_sin, dayofweek_cos, hour_sin, hour_cos, connect_avg, connect_max, in_handover_rate, out_handover_rate, inter_handover_rate, lower_prb, upper_prb, reconfig_rate, lower_bler, upper_bler, tot_et, y]\n","Index: []\n","\n","[0 rows x 28 columns]"],"text/html":["\n","  <div id=\"df-5a6a8fed-e41c-4014-bdd8-b70bfeab2603\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>base_station</th>\n","      <th>machine_id</th>\n","      <th>month</th>\n","      <th>day</th>\n","      <th>hour</th>\n","      <th>dayofweek</th>\n","      <th>weekday</th>\n","      <th>day_night</th>\n","      <th>commute_time</th>\n","      <th>holiday</th>\n","      <th>...</th>\n","      <th>in_handover_rate</th>\n","      <th>out_handover_rate</th>\n","      <th>inter_handover_rate</th>\n","      <th>lower_prb</th>\n","      <th>upper_prb</th>\n","      <th>reconfig_rate</th>\n","      <th>lower_bler</th>\n","      <th>upper_bler</th>\n","      <th>tot_et</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","<p>0 rows × 28 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a6a8fed-e41c-4014-bdd8-b70bfeab2603')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5a6a8fed-e41c-4014-bdd8-b70bfeab2603 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5a6a8fed-e41c-4014-bdd8-b70bfeab2603');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["## 6) 로그차분 진행 (periods = 24)"],"metadata":{"id":"XfHgC5fDrGbe"}},{"cell_type":"code","source":["test = my_data.copy()"],"metadata":{"id":"RnZ9lz1fK1o5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 차분 시도해보기\n","# data = np.log1p(test[columns_to]).diff(periods=24)\n","# data_without_nan = data.dropna()\n","# print(data_without_nan)"],"metadata":{"id":"SstnkwjMKgkL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for i in test['machine_id'].unique():\n","      #print(i)\n","      # test.loc[test['machine_id'] == i,columns_to] = test.loc[test['machine_id'] == i,columns_to].apply(lambda x: np.log(x).diff(periods=1))\n","      test.loc[test['machine_id'] == i,columns_to] = np.log1p(test.loc[test['machine_id'] == i,columns_to]).diff(periods=24)"],"metadata":{"id":"nMyj0J7josYc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test = test.dropna()\n","test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"VP5AEoBbeRN9","executionInfo":{"status":"ok","timestamp":1704245187517,"user_tz":-540,"elapsed":4,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"5d825503-91d8-4e47-bb45-fe1de241276b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      base_station machine_id  month  day  hour  dayofweek  weekday  \\\n","24          MA1074   MA1074_4      9    2     0          3        1   \n","25          MA1074   MA1074_4      9    2     1          3        1   \n","26          MA1074   MA1074_4      9    2     2          3        1   \n","27          MA1074   MA1074_4      9    2     3          3        1   \n","28          MA1074   MA1074_4      9    2     4          3        1   \n","...            ...        ...    ...  ...   ...        ...      ...   \n","74659       MA2561  MA2561_18     10   31    19          6        0   \n","74660       MA2561  MA2561_18     10   31    20          6        0   \n","74661       MA2561  MA2561_18     10   31    21          6        0   \n","74662       MA2561  MA2561_18     10   31    22          6        0   \n","74663       MA2561  MA2561_18     10   31    23          6        0   \n","\n","       day_night  commute_time  holiday  ...  in_handover_rate  \\\n","24             1             0        0  ...         -0.003187   \n","25             1             0        0  ...         -0.381298   \n","26             1             0        0  ...         -0.067532   \n","27             1             0        0  ...          0.003485   \n","28             1             0        0  ...         -0.077281   \n","...          ...           ...      ...  ...               ...   \n","74659          1             1        0  ...         -0.001250   \n","74660          1             0        0  ...          0.003230   \n","74661          1             0        0  ...          0.004017   \n","74662          1             0        0  ...          0.003581   \n","74663          1             0        0  ...         -0.000897   \n","\n","       out_handover_rate  inter_handover_rate  lower_prb  upper_prb  \\\n","24              0.000000             0.000000  -0.128298  -0.927531   \n","25              0.004795             0.006286   0.081664  -0.919199   \n","26              0.005599            -0.001361   0.266548  -0.440348   \n","27             -0.000007             0.001350   0.012500  -0.453520   \n","28             -0.000262            -0.001361  -0.366746  -1.223239   \n","...                  ...                  ...        ...        ...   \n","74659           0.006266             0.000000   0.183253   0.281329   \n","74660           0.000000             0.000000  -0.021939   0.275821   \n","74661           0.000000             0.000000   0.004103   0.385658   \n","74662          -0.004771             0.000000   0.018482  -0.257566   \n","74663           0.004490             0.000000   0.104266  -0.529039   \n","\n","       reconfig_rate  lower_bler  upper_bler    tot_et    y  \n","24          0.019080    0.055756   -0.022035  0.212200  0.0  \n","25          0.015582    0.187271    0.518314 -0.047953  0.0  \n","26          0.007307    0.115528    0.425684 -0.287069  0.0  \n","27         -0.016292    0.013146   -0.382483  0.114266  0.0  \n","28         -0.002125    0.030046   -0.720330  0.138850  0.0  \n","...              ...         ...         ...       ...  ...  \n","74659      -0.000098   -0.114350   -0.020999 -0.108241  0.0  \n","74660      -0.000393   -0.126718    0.051505 -0.015961  0.0  \n","74661       0.001281   -0.235796    0.113865  0.149389  0.0  \n","74662      -0.004550   -0.191984   -0.076920  0.143955  0.0  \n","74663      -0.000395    0.137939    0.464547 -0.037530  0.0  \n","\n","[73440 rows x 28 columns]"],"text/html":["\n","  <div id=\"df-8043bc41-9c45-4f1f-836e-d1d9fb3dc2da\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>base_station</th>\n","      <th>machine_id</th>\n","      <th>month</th>\n","      <th>day</th>\n","      <th>hour</th>\n","      <th>dayofweek</th>\n","      <th>weekday</th>\n","      <th>day_night</th>\n","      <th>commute_time</th>\n","      <th>holiday</th>\n","      <th>...</th>\n","      <th>in_handover_rate</th>\n","      <th>out_handover_rate</th>\n","      <th>inter_handover_rate</th>\n","      <th>lower_prb</th>\n","      <th>upper_prb</th>\n","      <th>reconfig_rate</th>\n","      <th>lower_bler</th>\n","      <th>upper_bler</th>\n","      <th>tot_et</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>24</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>-0.003187</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-0.128298</td>\n","      <td>-0.927531</td>\n","      <td>0.019080</td>\n","      <td>0.055756</td>\n","      <td>-0.022035</td>\n","      <td>0.212200</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>-0.381298</td>\n","      <td>0.004795</td>\n","      <td>0.006286</td>\n","      <td>0.081664</td>\n","      <td>-0.919199</td>\n","      <td>0.015582</td>\n","      <td>0.187271</td>\n","      <td>0.518314</td>\n","      <td>-0.047953</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>-0.067532</td>\n","      <td>0.005599</td>\n","      <td>-0.001361</td>\n","      <td>0.266548</td>\n","      <td>-0.440348</td>\n","      <td>0.007307</td>\n","      <td>0.115528</td>\n","      <td>0.425684</td>\n","      <td>-0.287069</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.003485</td>\n","      <td>-0.000007</td>\n","      <td>0.001350</td>\n","      <td>0.012500</td>\n","      <td>-0.453520</td>\n","      <td>-0.016292</td>\n","      <td>0.013146</td>\n","      <td>-0.382483</td>\n","      <td>0.114266</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>-0.077281</td>\n","      <td>-0.000262</td>\n","      <td>-0.001361</td>\n","      <td>-0.366746</td>\n","      <td>-1.223239</td>\n","      <td>-0.002125</td>\n","      <td>0.030046</td>\n","      <td>-0.720330</td>\n","      <td>0.138850</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>74659</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>10</td>\n","      <td>31</td>\n","      <td>19</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>-0.001250</td>\n","      <td>0.006266</td>\n","      <td>0.000000</td>\n","      <td>0.183253</td>\n","      <td>0.281329</td>\n","      <td>-0.000098</td>\n","      <td>-0.114350</td>\n","      <td>-0.020999</td>\n","      <td>-0.108241</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>74660</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>10</td>\n","      <td>31</td>\n","      <td>20</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.003230</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-0.021939</td>\n","      <td>0.275821</td>\n","      <td>-0.000393</td>\n","      <td>-0.126718</td>\n","      <td>0.051505</td>\n","      <td>-0.015961</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>74661</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>10</td>\n","      <td>31</td>\n","      <td>21</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.004017</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.004103</td>\n","      <td>0.385658</td>\n","      <td>0.001281</td>\n","      <td>-0.235796</td>\n","      <td>0.113865</td>\n","      <td>0.149389</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>74662</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>10</td>\n","      <td>31</td>\n","      <td>22</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.003581</td>\n","      <td>-0.004771</td>\n","      <td>0.000000</td>\n","      <td>0.018482</td>\n","      <td>-0.257566</td>\n","      <td>-0.004550</td>\n","      <td>-0.191984</td>\n","      <td>-0.076920</td>\n","      <td>0.143955</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>74663</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>10</td>\n","      <td>31</td>\n","      <td>23</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>-0.000897</td>\n","      <td>0.004490</td>\n","      <td>0.000000</td>\n","      <td>0.104266</td>\n","      <td>-0.529039</td>\n","      <td>-0.000395</td>\n","      <td>0.137939</td>\n","      <td>0.464547</td>\n","      <td>-0.037530</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>73440 rows × 28 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8043bc41-9c45-4f1f-836e-d1d9fb3dc2da')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8043bc41-9c45-4f1f-836e-d1d9fb3dc2da button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8043bc41-9c45-4f1f-836e-d1d9fb3dc2da');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b2ef5fd6-a8ca-4f91-b1db-1d3563088964\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b2ef5fd6-a8ca-4f91-b1db-1d3563088964')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b2ef5fd6-a8ca-4f91-b1db-1d3563088964 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_4201d24c-e9f1-45ee-bd5a-4dd20ce22e1c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('test')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_4201d24c-e9f1-45ee-bd5a-4dd20ce22e1c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('test');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":39}]},{"cell_type":"markdown","source":["## 7) 인코딩\n","\n","- 라벨 인코딩 (모델은 숫자 간격을 넓다고 느낄 수 있음)\n","- one-hot 인코딩"],"metadata":{"id":"Tjo3E4p2GUWA"}},{"cell_type":"code","source":["# OneHotEncoder 객체 생성\n","encoder = OneHotEncoder()\n","\n","# \"base_station\" 열을 One-Hot Encoding하여 새로운 열로 추가\n","base_station_encoded = encoder.fit_transform(test[[\"base_station\"]]).toarray()\n","base_station_categories = encoder.categories_[0]\n","for i, category in enumerate(base_station_categories):\n","    test[f\"base_station_{category}\"] = base_station_encoded[:, i]\n","\n","# \"machine_id\" 열을 One-Hot Encoding하여 새로운 열로 추가\n","machine_id_encoded = encoder.fit_transform(test[[\"machine_id\"]]).toarray()\n","machine_id_categories = encoder.categories_[0]\n","for i, category in enumerate(machine_id_categories):\n","    test[f\"machine_id_{category}\"] = machine_id_encoded[:, i]\n","\n","month_encoded = encoder.fit_transform(test[[\"month\"]]).toarray()\n","month_categories = encoder.categories_[0]\n","for i, category in enumerate(month_categories):\n","    test[f\"month_{category}\"] = month_encoded[:, i]\n","\n","\n","# 결과 출력\n","print(test.tail())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C-9InUCMBOKu","executionInfo":{"status":"ok","timestamp":1704245189429,"user_tz":-540,"elapsed":761,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"dddab296-e85a-43cd-d141-2fdd23c6c297"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["      base_station machine_id  month  day  hour  dayofweek  weekday  \\\n","74659       MA2561  MA2561_18     10   31    19          6        0   \n","74660       MA2561  MA2561_18     10   31    20          6        0   \n","74661       MA2561  MA2561_18     10   31    21          6        0   \n","74662       MA2561  MA2561_18     10   31    22          6        0   \n","74663       MA2561  MA2561_18     10   31    23          6        0   \n","\n","       day_night  commute_time  holiday  ...  machine_id_MA2354_2  \\\n","74659          1             1        0  ...                  0.0   \n","74660          1             0        0  ...                  0.0   \n","74661          1             0        0  ...                  0.0   \n","74662          1             0        0  ...                  0.0   \n","74663          1             0        0  ...                  0.0   \n","\n","       machine_id_MA2443_4  machine_id_MA2467_5  machine_id_MA2488_4  \\\n","74659                  0.0                  0.0                  0.0   \n","74660                  0.0                  0.0                  0.0   \n","74661                  0.0                  0.0                  0.0   \n","74662                  0.0                  0.0                  0.0   \n","74663                  0.0                  0.0                  0.0   \n","\n","       machine_id_MA2490_7  machine_id_MA2523_8  machine_id_MA2559_37  \\\n","74659                  0.0                  0.0                   0.0   \n","74660                  0.0                  0.0                   0.0   \n","74661                  0.0                  0.0                   0.0   \n","74662                  0.0                  0.0                   0.0   \n","74663                  0.0                  0.0                   0.0   \n","\n","       machine_id_MA2561_18  month_9  month_10  \n","74659                   1.0      0.0       1.0  \n","74660                   1.0      0.0       1.0  \n","74661                   1.0      0.0       1.0  \n","74662                   1.0      0.0       1.0  \n","74663                   1.0      0.0       1.0  \n","\n","[5 rows x 129 columns]\n"]}]},{"cell_type":"markdown","source":["## 8) train - test split"],"metadata":{"id":"mzMhmpq8Vd_G"}},{"cell_type":"code","source":["# x = test.iloc[:,:-1]\n","# y = test.iloc[:, -1]\n","x = test.drop(['y'], axis=1)\n","y = test['y']"],"metadata":{"id":"jQjWkImxfOjd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train , X_test , y_train , y_test = train_test_split(x, y,\n","                                                       test_size=0.2,  random_state=42, stratify=y) # shuffle = False 필요!!!"],"metadata":{"id":"dRV7Z9MgVgcc"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 8-1) upsampling"],"metadata":{"id":"OpcodeBT_OKo"}},{"cell_type":"code","source":["from imblearn.over_sampling import SMOTE"],"metadata":{"id":"rPuM5zMa_SHA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train_r = X_train.drop(['base_station', 'machine_id', 'month'], axis=1)\n","X_test_r = X_test.drop(['base_station', 'machine_id', 'month'], axis=1)"],"metadata":{"id":"ihNjMUWxA-WR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["smote = SMOTE(random_state = 42)\n","X_res, y_res = smote.fit_resample(X_train_r, y_train)"],"metadata":{"id":"qMQudtKx_1vg"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 9) Scaler 적용 - Standard Scaler\n","\n","- train, test를 나눠서 Scaler 적용"],"metadata":{"id":"4AMMN5G9qyo1"}},{"cell_type":"code","source":["columns_to = [\"connect_avg\",\t\"connect_max\",\n","         \"in_handover_rate\",\t\"out_handover_rate\",\t\"inter_handover_rate\",\n","          \"lower_prb\",\t\"upper_prb\",\t\"reconfig_rate\",\"lower_bler\",\t\"upper_bler\",\t\"tot_et\"]\n","\n","# Standard Scaler 객체 생성\n","std_scaler = StandardScaler()\n","\n","# 데이터 스케일링\n","#std_data = std_scaler.fit_transform(test[columns_to])\n","X_train_processed = std_scaler.fit_transform(X_train[columns_to])\n","X_test_processed = std_scaler.transform(X_test[columns_to])\n","\n","# # 스케일링된 데이터를 데이터프레임으로 변환\n","# std_data = pd.DataFrame(std_data, index=test.index, columns=test.columns)\n","\n","#test[columns_to] = std_data\n","X_train[columns_to] = X_train_processed\n","X_test[columns_to] = X_test_processed"],"metadata":{"id":"X8Wrbz5sqx_a"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train_r = X_train.drop(['base_station', 'machine_id', 'month'], axis=1)\n","X_test_r = X_test.drop(['base_station', 'machine_id', 'month'], axis=1)"],"metadata":{"id":"ad-Hi1B-UwTK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train.isna().sum().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aTut9uT7Siik","executionInfo":{"status":"ok","timestamp":1704177044757,"user_tz":-540,"elapsed":463,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"7df7a4e7-55c8-49a1-c98c-80ddde4b9af5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":155}]},{"cell_type":"code","source":["X_test.isna().sum().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X6fznfVNSv0X","executionInfo":{"status":"ok","timestamp":1704177044757,"user_tz":-540,"elapsed":2,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"0e141656-7ce3-4bb3-bbd8-f6ac8e8b7f8e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":156}]},{"cell_type":"markdown","source":["# 2.모델링"],"metadata":{"id":"iRjunx96Ukx5"}},{"cell_type":"markdown","source":["## 1) 모델 돌려보기(AUC시각화)"],"metadata":{"id":"kCoxWhgxWP95"}},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression # 로지스틱 회귀, 이진분류, 베이스라인용도,\n","from sklearn.tree import DecisionTreeClassifier     # 결정트리, 다중분류, 앙상블 기본 베이스\n","from sklearn.ensemble import RandomForestClassifier # 랜덤포레스트(동일 알고리즘 n개(결정트) 강한 분류기 구성)\n","from sklearn.naive_bayes import GaussianNB          # 가우시안 나이브 베이브\n","from sklearn.svm import SVC                         # 서포트 벡터 머신, 이진분류용\n","# 평가도구\n","from sklearn.metrics import roc_curve, auc"],"metadata":{"id":"3ZR0W2BwVgfM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["als = {\n","    'LogisticRegression'     : (LogisticRegression(),'-'),\n","    'DecisionTreeClassifier' : (DecisionTreeClassifier(max_depth=5),'--'),\n","    'RandomForestClassifier' : (RandomForestClassifier(max_depth=5,max_features=1,n_estimators=10),'.-'),\n","    'GaussianNB'             : (GaussianNB(),':')\n","#    'SVC'                    : (SVC(probability=True),'-'),\n","}"],"metadata":{"id":"RX08mNu2V5ib"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 차트의 모양\n","plt.figure(figsize=(10,10))\n","\n","# 반복\n","for model_name, (model, line_style) in als.items():\n","  # print(key, model, line_style)\n","  # 학습\n","  model.fit(X_train_r, y_train)\n","  # 예측 → predict_proba() => True(1) 예측할 확률이 출력 [ F를 예측할 확률, T를 예측할 확률 ]\n","  pred = model.predict_proba(X_test_r)\n","  # 성능평가\n","  pred_t = pred[:,-1]   # T를 예측할 확률만 추출했음\n","  #print(pred_t)\n","  fpr, tpr, _ = roc_curve(y_test.values, pred_t) # (배열, 배열)\n","  # auc: 곡면하(밑에) 면적을 계산 비교 전략\n","  print(model_name, auc(fpr,tpr))\n","  #break\n","  # 시각화 (x축 데이터, y축 데이터, 선모양, 범례)\n","  plt.plot(fpr,tpr,line_style, label = model_name)\n","\n","# 플로팅\n","plt.legend()\n","plt.xlabel('False Positive, Rate')\n","plt.ylabel('True Positive, Rate')\n","\n","# 차트출력\n","plt.show()"],"metadata":{"id":"AmP7-FVOV7Lp","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1704247094189,"user_tz":-540,"elapsed":3350,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"588b970c-9130-4e01-96c8-652674fe8c73"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]},{"output_type":"stream","name":"stdout","text":["LogisticRegression 0.8917956448383004\n","DecisionTreeClassifier 0.7693448998273626\n","RandomForestClassifier 0.8354191471400522\n","GaussianNB 0.7508979970628074\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x1000 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## 3) AUTOML - pycaret"],"metadata":{"id":"erPvXkd7UewQ"}},{"cell_type":"markdown","source":["### 3-1) 기본"],"metadata":{"id":"jp_sy_0JSNSG"}},{"cell_type":"code","source":["!pip install -q pycaret"],"metadata":{"id":"4Y0WNniDVAIB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1704177193144,"user_tz":-540,"elapsed":36800,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"35d148d6-9718-474f-b152-ba8d7cab730f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m484.7/484.7 kB\u001b[0m \u001b[31m7.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m81.9/81.9 kB\u001b[0m \u001b[31m11.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m79.9/79.9 MB\u001b[0m \u001b[31m20.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m11.8/11.8 MB\u001b[0m \u001b[31m84.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m73.4/73.4 kB\u001b[0m \u001b[31m10.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.1/2.1 MB\u001b[0m \u001b[31m79.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m160.5/160.5 kB\u001b[0m \u001b[31m19.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m106.8/106.8 kB\u001b[0m \u001b[31m16.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m34.4/34.4 MB\u001b[0m \u001b[31m41.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m17.1/17.1 MB\u001b[0m \u001b[31m75.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m44.0/44.0 kB\u001b[0m \u001b[31m5.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.6/1.6 MB\u001b[0m \u001b[31m72.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m10.2/10.2 MB\u001b[0m \u001b[31m81.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m138.7/138.7 kB\u001b[0m \u001b[31m17.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m185.2/185.2 kB\u001b[0m \u001b[31m23.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.3/2.3 MB\u001b[0m \u001b[31m65.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m119.0/119.0 kB\u001b[0m \u001b[31m15.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Building wheel for pyod (setup.py) ... \u001b[?25l\u001b[?25hdone\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","lida 0.0.10 requires fastapi, which is not installed.\n","lida 0.0.10 requires python-multipart, which is not installed.\n","lida 0.0.10 requires uvicorn, which is not installed.\u001b[0m\u001b[31m\n","\u001b[0m"]}]},{"cell_type":"code","source":["!pip install catboost"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ycm7qRmvYCkm","executionInfo":{"status":"ok","timestamp":1704177203932,"user_tz":-540,"elapsed":10794,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"a6b6dea0-677f-4c13-d129-a870abb1c7c8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting catboost\n","  Downloading catboost-1.2.2-cp310-cp310-manylinux2014_x86_64.whl (98.7 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m98.7/98.7 MB\u001b[0m \u001b[31m15.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: graphviz in /usr/local/lib/python3.10/dist-packages (from catboost) (0.20.1)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from catboost) (3.6.0)\n","Requirement already satisfied: numpy>=1.16.0 in /usr/local/lib/python3.10/dist-packages (from catboost) (1.23.5)\n","Requirement already satisfied: pandas>=0.24 in /usr/local/lib/python3.10/dist-packages (from catboost) (1.5.3)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from catboost) (1.10.1)\n","Requirement already satisfied: plotly in /usr/local/lib/python3.10/dist-packages (from catboost) (5.15.0)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from catboost) (1.16.0)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.24->catboost) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.24->catboost) (2023.3.post1)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (1.2.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (4.46.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (1.4.5)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (23.2)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (9.4.0)\n","Requirement already satisfied: pyparsing>=2.2.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->catboost) (3.1.1)\n","Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from plotly->catboost) (8.2.3)\n","Installing collected packages: catboost\n","Successfully installed catboost-1.2.2\n"]}]},{"cell_type":"code","source":["from pycaret.classification import *\n","from pycaret.classification import create_model, evaluate_model, add_metric\n","from catboost import CatBoostClassifier"],"metadata":{"id":"8iTkMYdWCOmq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["categorical_features = ['base_station', 'machine_id', 'month']\n","\n","numerical_features = ['connect_avg', 'connect_max', 'in_handover_rate',\n","                    'out_handover_rate', 'inter_handover_rate', 'lower_prb', 'upper_prb',\n","                    'reconfig_rate', 'lower_bler', 'upper_bler', 'tot_et']\n","\n","passthrough = ['weekday', 'day_night', 'commute_time', 'holiday', 'day_sin',\n","               'day_cos', 'dayofweek_sin', 'dayofweek_cos', 'hour_sin', 'hour_cos']\n","\n","ignore_features = ['day', 'dayofweek', 'hour']"],"metadata":{"id":"fYBIFdv822nC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["reg = setup(data = x, # 피처 데이터\n","            target = y, # 타겟 데이터\n","            verbose = True,\n","            ordinal_features = None,\n","            categorical_features = categorical_features,\n","            numeric_features = numerical_features,\n","            keep_features = passthrough,\n","            train_size = 0.8, # 훈련양 조정\n","            normalize = True, # 정규화 여부 진행\n","            session_id = 42, # 난수 시드\n","            fold = 5,\n","            fold_shuffle = True,\n","            fold_strategy = 'stratifiedkfold',\n","            normalize_method = 'zscore'\n","            )"],"metadata":{"id":"NM1bTKkoVDKw","colab":{"base_uri":"https://localhost:8080/","height":864},"executionInfo":{"status":"ok","timestamp":1703650735705,"user_tz":-540,"elapsed":2598,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"e726eeaa-0eff-4072-f7bb-6ed1c41cbfb5"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<pandas.io.formats.style.Styler at 0x7ae0a0adf2e0>"],"text/html":["<style type=\"text/css\">\n","#T_d73f7_row11_col1, #T_d73f7_row17_col1 {\n","  background-color: lightgreen;\n","}\n","</style>\n","<table id=\"T_d73f7\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th id=\"T_d73f7_level0_col0\" class=\"col_heading level0 col0\" >Description</th>\n","      <th id=\"T_d73f7_level0_col1\" class=\"col_heading level0 col1\" >Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n","      <td id=\"T_d73f7_row0_col0\" class=\"data row0 col0\" >Session id</td>\n","      <td id=\"T_d73f7_row0_col1\" class=\"data row0 col1\" >42</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n","      <td id=\"T_d73f7_row1_col0\" class=\"data row1 col0\" >Target</td>\n","      <td id=\"T_d73f7_row1_col1\" class=\"data row1 col1\" >y</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n","      <td id=\"T_d73f7_row2_col0\" class=\"data row2 col0\" >Target type</td>\n","      <td id=\"T_d73f7_row2_col1\" class=\"data row2 col1\" >Binary</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n","      <td id=\"T_d73f7_row3_col0\" class=\"data row3 col0\" >Original data shape</td>\n","      <td id=\"T_d73f7_row3_col1\" class=\"data row3 col1\" >(73440, 28)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n","      <td id=\"T_d73f7_row4_col0\" class=\"data row4 col0\" >Transformed data shape</td>\n","      <td id=\"T_d73f7_row4_col1\" class=\"data row4 col1\" >(73440, 28)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n","      <td id=\"T_d73f7_row5_col0\" class=\"data row5 col0\" >Transformed train set shape</td>\n","      <td id=\"T_d73f7_row5_col1\" class=\"data row5 col1\" >(58752, 28)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n","      <td id=\"T_d73f7_row6_col0\" class=\"data row6 col0\" >Transformed test set shape</td>\n","      <td id=\"T_d73f7_row6_col1\" class=\"data row6 col1\" >(14688, 28)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n","      <td id=\"T_d73f7_row7_col0\" class=\"data row7 col0\" >Ordinal features</td>\n","      <td id=\"T_d73f7_row7_col1\" class=\"data row7 col1\" >1</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n","      <td id=\"T_d73f7_row8_col0\" class=\"data row8 col0\" >Numeric features</td>\n","      <td id=\"T_d73f7_row8_col1\" class=\"data row8 col1\" >11</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n","      <td id=\"T_d73f7_row9_col0\" class=\"data row9 col0\" >Categorical features</td>\n","      <td id=\"T_d73f7_row9_col1\" class=\"data row9 col1\" >3</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n","      <td id=\"T_d73f7_row10_col0\" class=\"data row10 col0\" >Keep features</td>\n","      <td id=\"T_d73f7_row10_col1\" class=\"data row10 col1\" >10</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n","      <td id=\"T_d73f7_row11_col0\" class=\"data row11 col0\" >Preprocess</td>\n","      <td id=\"T_d73f7_row11_col1\" class=\"data row11 col1\" >True</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row12\" class=\"row_heading level0 row12\" >12</th>\n","      <td id=\"T_d73f7_row12_col0\" class=\"data row12 col0\" >Imputation type</td>\n","      <td id=\"T_d73f7_row12_col1\" class=\"data row12 col1\" >simple</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row13\" class=\"row_heading level0 row13\" >13</th>\n","      <td id=\"T_d73f7_row13_col0\" class=\"data row13 col0\" >Numeric imputation</td>\n","      <td id=\"T_d73f7_row13_col1\" class=\"data row13 col1\" >mean</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row14\" class=\"row_heading level0 row14\" >14</th>\n","      <td id=\"T_d73f7_row14_col0\" class=\"data row14 col0\" >Categorical imputation</td>\n","      <td id=\"T_d73f7_row14_col1\" class=\"data row14 col1\" >mode</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row15\" class=\"row_heading level0 row15\" >15</th>\n","      <td id=\"T_d73f7_row15_col0\" class=\"data row15 col0\" >Maximum one-hot encoding</td>\n","      <td id=\"T_d73f7_row15_col1\" class=\"data row15 col1\" >25</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row16\" class=\"row_heading level0 row16\" >16</th>\n","      <td id=\"T_d73f7_row16_col0\" class=\"data row16 col0\" >Encoding method</td>\n","      <td id=\"T_d73f7_row16_col1\" class=\"data row16 col1\" >None</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row17\" class=\"row_heading level0 row17\" >17</th>\n","      <td id=\"T_d73f7_row17_col0\" class=\"data row17 col0\" >Normalize</td>\n","      <td id=\"T_d73f7_row17_col1\" class=\"data row17 col1\" >True</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row18\" class=\"row_heading level0 row18\" >18</th>\n","      <td id=\"T_d73f7_row18_col0\" class=\"data row18 col0\" >Normalize method</td>\n","      <td id=\"T_d73f7_row18_col1\" class=\"data row18 col1\" >zscore</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row19\" class=\"row_heading level0 row19\" >19</th>\n","      <td id=\"T_d73f7_row19_col0\" class=\"data row19 col0\" >Fold Generator</td>\n","      <td id=\"T_d73f7_row19_col1\" class=\"data row19 col1\" >StratifiedKFold</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row20\" class=\"row_heading level0 row20\" >20</th>\n","      <td id=\"T_d73f7_row20_col0\" class=\"data row20 col0\" >Fold Number</td>\n","      <td id=\"T_d73f7_row20_col1\" class=\"data row20 col1\" >5</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row21\" class=\"row_heading level0 row21\" >21</th>\n","      <td id=\"T_d73f7_row21_col0\" class=\"data row21 col0\" >CPU Jobs</td>\n","      <td id=\"T_d73f7_row21_col1\" class=\"data row21 col1\" >-1</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row22\" class=\"row_heading level0 row22\" >22</th>\n","      <td id=\"T_d73f7_row22_col0\" class=\"data row22 col0\" >Use GPU</td>\n","      <td id=\"T_d73f7_row22_col1\" class=\"data row22 col1\" >False</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row23\" class=\"row_heading level0 row23\" >23</th>\n","      <td id=\"T_d73f7_row23_col0\" class=\"data row23 col0\" >Log Experiment</td>\n","      <td id=\"T_d73f7_row23_col1\" class=\"data row23 col1\" >False</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row24\" class=\"row_heading level0 row24\" >24</th>\n","      <td id=\"T_d73f7_row24_col0\" class=\"data row24 col0\" >Experiment Name</td>\n","      <td id=\"T_d73f7_row24_col1\" class=\"data row24 col1\" >clf-default-name</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d73f7_level0_row25\" class=\"row_heading level0 row25\" >25</th>\n","      <td id=\"T_d73f7_row25_col0\" class=\"data row25 col0\" >USI</td>\n","      <td id=\"T_d73f7_row25_col1\" class=\"data row25 col1\" >207f</td>\n","    </tr>\n","  </tbody>\n","</table>\n"]},"metadata":{}}]},{"cell_type":"code","source":["models()"],"metadata":{"id":"GBFSxulNVEuZ","colab":{"base_uri":"https://localhost:8080/","height":645},"executionInfo":{"status":"ok","timestamp":1703650738356,"user_tz":-540,"elapsed":580,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"9f0e5f3b-6d84-4789-f923-de10f24b8f4b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                     Name  \\\n","ID                                          \n","lr                    Logistic Regression   \n","knn                K Neighbors Classifier   \n","nb                            Naive Bayes   \n","dt               Decision Tree Classifier   \n","svm                   SVM - Linear Kernel   \n","rbfsvm                SVM - Radial Kernel   \n","gpc           Gaussian Process Classifier   \n","mlp                        MLP Classifier   \n","ridge                    Ridge Classifier   \n","rf               Random Forest Classifier   \n","qda       Quadratic Discriminant Analysis   \n","ada                  Ada Boost Classifier   \n","gbc          Gradient Boosting Classifier   \n","lda          Linear Discriminant Analysis   \n","et                 Extra Trees Classifier   \n","xgboost         Extreme Gradient Boosting   \n","lightgbm  Light Gradient Boosting Machine   \n","dummy                    Dummy Classifier   \n","\n","                                                  Reference  Turbo  \n","ID                                                                  \n","lr        sklearn.linear_model._logistic.LogisticRegression   True  \n","knn       sklearn.neighbors._classification.KNeighborsCl...   True  \n","nb                           sklearn.naive_bayes.GaussianNB   True  \n","dt             sklearn.tree._classes.DecisionTreeClassifier   True  \n","svm       sklearn.linear_model._stochastic_gradient.SGDC...   True  \n","rbfsvm                             sklearn.svm._classes.SVC  False  \n","gpc       sklearn.gaussian_process._gpc.GaussianProcessC...  False  \n","mlp       sklearn.neural_network._multilayer_perceptron....  False  \n","ridge           sklearn.linear_model._ridge.RidgeClassifier   True  \n","rf          sklearn.ensemble._forest.RandomForestClassifier   True  \n","qda       sklearn.discriminant_analysis.QuadraticDiscrim...   True  \n","ada       sklearn.ensemble._weight_boosting.AdaBoostClas...   True  \n","gbc         sklearn.ensemble._gb.GradientBoostingClassifier   True  \n","lda       sklearn.discriminant_analysis.LinearDiscrimina...   True  \n","et            sklearn.ensemble._forest.ExtraTreesClassifier   True  \n","xgboost                       xgboost.sklearn.XGBClassifier   True  \n","lightgbm                    lightgbm.sklearn.LGBMClassifier   True  \n","dummy                         sklearn.dummy.DummyClassifier   True  "],"text/html":["\n","  <div id=\"df-7bfad709-8bb0-49ac-830d-7f37dd59cb55\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Reference</th>\n","      <th>Turbo</th>\n","    </tr>\n","    <tr>\n","      <th>ID</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>lr</th>\n","      <td>Logistic Regression</td>\n","      <td>sklearn.linear_model._logistic.LogisticRegression</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>knn</th>\n","      <td>K Neighbors Classifier</td>\n","      <td>sklearn.neighbors._classification.KNeighborsCl...</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>nb</th>\n","      <td>Naive Bayes</td>\n","      <td>sklearn.naive_bayes.GaussianNB</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>dt</th>\n","      <td>Decision Tree Classifier</td>\n","      <td>sklearn.tree._classes.DecisionTreeClassifier</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>svm</th>\n","      <td>SVM - Linear Kernel</td>\n","      <td>sklearn.linear_model._stochastic_gradient.SGDC...</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>rbfsvm</th>\n","      <td>SVM - Radial Kernel</td>\n","      <td>sklearn.svm._classes.SVC</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>gpc</th>\n","      <td>Gaussian Process Classifier</td>\n","      <td>sklearn.gaussian_process._gpc.GaussianProcessC...</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>mlp</th>\n","      <td>MLP Classifier</td>\n","      <td>sklearn.neural_network._multilayer_perceptron....</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>ridge</th>\n","      <td>Ridge Classifier</td>\n","      <td>sklearn.linear_model._ridge.RidgeClassifier</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>rf</th>\n","      <td>Random Forest Classifier</td>\n","      <td>sklearn.ensemble._forest.RandomForestClassifier</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>qda</th>\n","      <td>Quadratic Discriminant Analysis</td>\n","      <td>sklearn.discriminant_analysis.QuadraticDiscrim...</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>ada</th>\n","      <td>Ada Boost Classifier</td>\n","      <td>sklearn.ensemble._weight_boosting.AdaBoostClas...</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>gbc</th>\n","      <td>Gradient Boosting Classifier</td>\n","      <td>sklearn.ensemble._gb.GradientBoostingClassifier</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>lda</th>\n","      <td>Linear Discriminant Analysis</td>\n","      <td>sklearn.discriminant_analysis.LinearDiscrimina...</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>et</th>\n","      <td>Extra Trees Classifier</td>\n","      <td>sklearn.ensemble._forest.ExtraTreesClassifier</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>xgboost</th>\n","      <td>Extreme Gradient Boosting</td>\n","      <td>xgboost.sklearn.XGBClassifier</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>lightgbm</th>\n","      <td>Light Gradient Boosting Machine</td>\n","      <td>lightgbm.sklearn.LGBMClassifier</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>dummy</th>\n","      <td>Dummy Classifier</td>\n","      <td>sklearn.dummy.DummyClassifier</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7bfad709-8bb0-49ac-830d-7f37dd59cb55')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7bfad709-8bb0-49ac-830d-7f37dd59cb55 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7bfad709-8bb0-49ac-830d-7f37dd59cb55');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4724c81b-affd-4004-adb0-f190449f84fe\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4724c81b-affd-4004-adb0-f190449f84fe')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4724c81b-affd-4004-adb0-f190449f84fe button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["best_model = compare_models(n_select=5, sort='F1')"],"metadata":{"id":"9U6m4dvJVEzb","colab":{"base_uri":"https://localhost:8080/","height":519,"referenced_widgets":["249010bc075c4229bfb59299ec703016","6f13e83d33bb44d693f8364f9ed7d9fe","cc48c0ed65254b67af7db8f6ecab3d67","dbbcfdb1dc914c98891167237c5d7a6f","4d2303f8653a42f4aaef6be183e45ebb","e433b7246501437593b9a4d21f97f422","2c2f82e5f10541bdb7088bad628ea735","08089e222e494e849bb14ac24e2b40b5","52c56402aca840e6b34283efc50bec5d","4214f3c1ed264f50a6cca016d13157de","98a55b7cdf304ffd93805e906549349c"]},"executionInfo":{"status":"ok","timestamp":1703651438018,"user_tz":-540,"elapsed":697296,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"21e753de-5f34-4fa3-abc0-e52cecf913ce"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<pandas.io.formats.style.Styler at 0x7ae0b9fa54b0>"],"text/html":["<style type=\"text/css\">\n","#T_e5eb0 th {\n","  text-align: left;\n","}\n","#T_e5eb0_row0_col0, #T_e5eb0_row0_col1, #T_e5eb0_row0_col2, #T_e5eb0_row0_col3, #T_e5eb0_row0_col4, #T_e5eb0_row0_col7, #T_e5eb0_row1_col0, #T_e5eb0_row1_col1, #T_e5eb0_row1_col2, #T_e5eb0_row1_col3, #T_e5eb0_row1_col4, #T_e5eb0_row1_col5, #T_e5eb0_row1_col6, #T_e5eb0_row2_col0, #T_e5eb0_row2_col1, #T_e5eb0_row2_col3, #T_e5eb0_row2_col4, #T_e5eb0_row2_col5, #T_e5eb0_row2_col6, #T_e5eb0_row2_col7, #T_e5eb0_row3_col0, #T_e5eb0_row3_col2, #T_e5eb0_row3_col3, #T_e5eb0_row3_col4, #T_e5eb0_row3_col5, #T_e5eb0_row3_col6, #T_e5eb0_row3_col7, #T_e5eb0_row4_col0, #T_e5eb0_row4_col1, #T_e5eb0_row4_col2, #T_e5eb0_row4_col3, #T_e5eb0_row4_col4, #T_e5eb0_row4_col5, #T_e5eb0_row4_col6, #T_e5eb0_row4_col7, #T_e5eb0_row5_col0, #T_e5eb0_row5_col1, #T_e5eb0_row5_col2, #T_e5eb0_row5_col3, #T_e5eb0_row5_col4, #T_e5eb0_row5_col5, #T_e5eb0_row5_col6, #T_e5eb0_row5_col7, #T_e5eb0_row6_col0, #T_e5eb0_row6_col1, #T_e5eb0_row6_col2, #T_e5eb0_row6_col3, #T_e5eb0_row6_col4, #T_e5eb0_row6_col5, #T_e5eb0_row6_col6, #T_e5eb0_row6_col7, #T_e5eb0_row7_col0, #T_e5eb0_row7_col1, #T_e5eb0_row7_col2, #T_e5eb0_row7_col3, #T_e5eb0_row7_col4, #T_e5eb0_row7_col5, #T_e5eb0_row7_col6, #T_e5eb0_row7_col7, #T_e5eb0_row8_col0, #T_e5eb0_row8_col1, #T_e5eb0_row8_col2, #T_e5eb0_row8_col4, #T_e5eb0_row8_col5, #T_e5eb0_row8_col6, #T_e5eb0_row8_col7, #T_e5eb0_row9_col0, #T_e5eb0_row9_col1, #T_e5eb0_row9_col2, #T_e5eb0_row9_col3, #T_e5eb0_row9_col4, #T_e5eb0_row9_col5, #T_e5eb0_row9_col6, #T_e5eb0_row9_col7, #T_e5eb0_row10_col0, #T_e5eb0_row10_col1, #T_e5eb0_row10_col2, #T_e5eb0_row10_col3, #T_e5eb0_row10_col4, #T_e5eb0_row10_col5, #T_e5eb0_row10_col6, #T_e5eb0_row10_col7, #T_e5eb0_row11_col0, #T_e5eb0_row11_col1, #T_e5eb0_row11_col2, #T_e5eb0_row11_col3, #T_e5eb0_row11_col4, #T_e5eb0_row11_col5, #T_e5eb0_row11_col6, #T_e5eb0_row11_col7, #T_e5eb0_row12_col0, #T_e5eb0_row12_col1, #T_e5eb0_row12_col2, #T_e5eb0_row12_col3, #T_e5eb0_row12_col4, #T_e5eb0_row12_col5, #T_e5eb0_row12_col6, #T_e5eb0_row12_col7, #T_e5eb0_row13_col0, #T_e5eb0_row13_col1, #T_e5eb0_row13_col2, #T_e5eb0_row13_col3, #T_e5eb0_row13_col5, #T_e5eb0_row13_col6, #T_e5eb0_row13_col7, #T_e5eb0_row14_col0, #T_e5eb0_row14_col1, #T_e5eb0_row14_col2, #T_e5eb0_row14_col3, #T_e5eb0_row14_col4, #T_e5eb0_row14_col5, #T_e5eb0_row14_col6, #T_e5eb0_row14_col7 {\n","  text-align: left;\n","}\n","#T_e5eb0_row0_col5, #T_e5eb0_row0_col6, #T_e5eb0_row1_col7, #T_e5eb0_row2_col2, #T_e5eb0_row3_col1, #T_e5eb0_row8_col3, #T_e5eb0_row13_col4 {\n","  text-align: left;\n","  background-color: yellow;\n","}\n","#T_e5eb0_row0_col8, #T_e5eb0_row1_col8, #T_e5eb0_row2_col8, #T_e5eb0_row3_col8, #T_e5eb0_row4_col8, #T_e5eb0_row5_col8, #T_e5eb0_row6_col8, #T_e5eb0_row7_col8, #T_e5eb0_row8_col8, #T_e5eb0_row9_col8, #T_e5eb0_row10_col8, #T_e5eb0_row12_col8, #T_e5eb0_row13_col8, #T_e5eb0_row14_col8 {\n","  text-align: left;\n","  background-color: lightgrey;\n","}\n","#T_e5eb0_row11_col8 {\n","  text-align: left;\n","  background-color: yellow;\n","  background-color: lightgrey;\n","}\n","</style>\n","<table id=\"T_e5eb0\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th id=\"T_e5eb0_level0_col0\" class=\"col_heading level0 col0\" >Model</th>\n","      <th id=\"T_e5eb0_level0_col1\" class=\"col_heading level0 col1\" >Accuracy</th>\n","      <th id=\"T_e5eb0_level0_col2\" class=\"col_heading level0 col2\" >AUC</th>\n","      <th id=\"T_e5eb0_level0_col3\" class=\"col_heading level0 col3\" >Recall</th>\n","      <th id=\"T_e5eb0_level0_col4\" class=\"col_heading level0 col4\" >Prec.</th>\n","      <th id=\"T_e5eb0_level0_col5\" class=\"col_heading level0 col5\" >F1</th>\n","      <th id=\"T_e5eb0_level0_col6\" class=\"col_heading level0 col6\" >Kappa</th>\n","      <th id=\"T_e5eb0_level0_col7\" class=\"col_heading level0 col7\" >MCC</th>\n","      <th id=\"T_e5eb0_level0_col8\" class=\"col_heading level0 col8\" >TT (Sec)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_e5eb0_level0_row0\" class=\"row_heading level0 row0\" >xgboost</th>\n","      <td id=\"T_e5eb0_row0_col0\" class=\"data row0 col0\" >Extreme Gradient Boosting</td>\n","      <td id=\"T_e5eb0_row0_col1\" class=\"data row0 col1\" >0.9025</td>\n","      <td id=\"T_e5eb0_row0_col2\" class=\"data row0 col2\" >0.9130</td>\n","      <td id=\"T_e5eb0_row0_col3\" class=\"data row0 col3\" >0.4178</td>\n","      <td id=\"T_e5eb0_row0_col4\" class=\"data row0 col4\" >0.6656</td>\n","      <td id=\"T_e5eb0_row0_col5\" class=\"data row0 col5\" >0.5133</td>\n","      <td id=\"T_e5eb0_row0_col6\" class=\"data row0 col6\" >0.4623</td>\n","      <td id=\"T_e5eb0_row0_col7\" class=\"data row0 col7\" >0.4779</td>\n","      <td id=\"T_e5eb0_row0_col8\" class=\"data row0 col8\" >0.2820</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_e5eb0_level0_row1\" class=\"row_heading level0 row1\" >et</th>\n","      <td id=\"T_e5eb0_row1_col0\" class=\"data row1 col0\" >Extra Trees Classifier</td>\n","      <td id=\"T_e5eb0_row1_col1\" class=\"data row1 col1\" >0.9050</td>\n","      <td id=\"T_e5eb0_row1_col2\" class=\"data row1 col2\" >0.9120</td>\n","      <td id=\"T_e5eb0_row1_col3\" class=\"data row1 col3\" >0.3957</td>\n","      <td id=\"T_e5eb0_row1_col4\" class=\"data row1 col4\" >0.7023</td>\n","      <td id=\"T_e5eb0_row1_col5\" class=\"data row1 col5\" >0.5061</td>\n","      <td id=\"T_e5eb0_row1_col6\" class=\"data row1 col6\" >0.4581</td>\n","      <td id=\"T_e5eb0_row1_col7\" class=\"data row1 col7\" >0.4813</td>\n","      <td id=\"T_e5eb0_row1_col8\" class=\"data row1 col8\" >0.9800</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_e5eb0_level0_row2\" class=\"row_heading level0 row2\" >lightgbm</th>\n","      <td id=\"T_e5eb0_row2_col0\" class=\"data row2 col0\" >Light Gradient Boosting Machine</td>\n","      <td id=\"T_e5eb0_row2_col1\" class=\"data row2 col1\" >0.9048</td>\n","      <td id=\"T_e5eb0_row2_col2\" class=\"data row2 col2\" >0.9179</td>\n","      <td id=\"T_e5eb0_row2_col3\" class=\"data row2 col3\" >0.3950</td>\n","      <td id=\"T_e5eb0_row2_col4\" class=\"data row2 col4\" >0.7003</td>\n","      <td id=\"T_e5eb0_row2_col5\" class=\"data row2 col5\" >0.5051</td>\n","      <td id=\"T_e5eb0_row2_col6\" class=\"data row2 col6\" >0.4569</td>\n","      <td id=\"T_e5eb0_row2_col7\" class=\"data row2 col7\" >0.4799</td>\n","      <td id=\"T_e5eb0_row2_col8\" class=\"data row2 col8\" >117.4240</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_e5eb0_level0_row3\" class=\"row_heading level0 row3\" >rf</th>\n","      <td id=\"T_e5eb0_row3_col0\" class=\"data row3 col0\" >Random Forest Classifier</td>\n","      <td id=\"T_e5eb0_row3_col1\" class=\"data row3 col1\" >0.9058</td>\n","      <td id=\"T_e5eb0_row3_col2\" class=\"data row3 col2\" >0.9162</td>\n","      <td id=\"T_e5eb0_row3_col3\" class=\"data row3 col3\" >0.3659</td>\n","      <td id=\"T_e5eb0_row3_col4\" class=\"data row3 col4\" >0.7354</td>\n","      <td id=\"T_e5eb0_row3_col5\" class=\"data row3 col5\" >0.4887</td>\n","      <td id=\"T_e5eb0_row3_col6\" class=\"data row3 col6\" >0.4431</td>\n","      <td id=\"T_e5eb0_row3_col7\" class=\"data row3 col7\" >0.4761</td>\n","      <td id=\"T_e5eb0_row3_col8\" class=\"data row3 col8\" >2.2680</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_e5eb0_level0_row4\" class=\"row_heading level0 row4\" >gbc</th>\n","      <td id=\"T_e5eb0_row4_col0\" class=\"data row4 col0\" >Gradient Boosting Classifier</td>\n","      <td id=\"T_e5eb0_row4_col1\" class=\"data row4 col1\" >0.9023</td>\n","      <td id=\"T_e5eb0_row4_col2\" class=\"data row4 col2\" >0.9101</td>\n","      <td id=\"T_e5eb0_row4_col3\" class=\"data row4 col3\" >0.3643</td>\n","      <td id=\"T_e5eb0_row4_col4\" class=\"data row4 col4\" >0.6969</td>\n","      <td id=\"T_e5eb0_row4_col5\" class=\"data row4 col5\" >0.4784</td>\n","      <td id=\"T_e5eb0_row4_col6\" class=\"data row4 col6\" >0.4303</td>\n","      <td id=\"T_e5eb0_row4_col7\" class=\"data row4 col7\" >0.4580</td>\n","      <td id=\"T_e5eb0_row4_col8\" class=\"data row4 col8\" >5.6480</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_e5eb0_level0_row5\" class=\"row_heading level0 row5\" >knn</th>\n","      <td id=\"T_e5eb0_row5_col0\" class=\"data row5 col0\" >K Neighbors Classifier</td>\n","      <td id=\"T_e5eb0_row5_col1\" class=\"data row5 col1\" >0.8905</td>\n","      <td id=\"T_e5eb0_row5_col2\" class=\"data row5 col2\" >0.8273</td>\n","      <td id=\"T_e5eb0_row5_col3\" class=\"data row5 col3\" >0.3897</td>\n","      <td id=\"T_e5eb0_row5_col4\" class=\"data row5 col4\" >0.5821</td>\n","      <td id=\"T_e5eb0_row5_col5\" class=\"data row5 col5\" >0.4668</td>\n","      <td id=\"T_e5eb0_row5_col6\" class=\"data row5 col6\" >0.4085</td>\n","      <td id=\"T_e5eb0_row5_col7\" class=\"data row5 col7\" >0.4187</td>\n","      <td id=\"T_e5eb0_row5_col8\" class=\"data row5 col8\" >1.7200</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_e5eb0_level0_row6\" class=\"row_heading level0 row6\" >dt</th>\n","      <td id=\"T_e5eb0_row6_col0\" class=\"data row6 col0\" >Decision Tree Classifier</td>\n","      <td id=\"T_e5eb0_row6_col1\" class=\"data row6 col1\" >0.8642</td>\n","      <td id=\"T_e5eb0_row6_col2\" class=\"data row6 col2\" >0.6966</td>\n","      <td id=\"T_e5eb0_row6_col3\" class=\"data row6 col3\" >0.4743</td>\n","      <td id=\"T_e5eb0_row6_col4\" class=\"data row6 col4\" >0.4506</td>\n","      <td id=\"T_e5eb0_row6_col5\" class=\"data row6 col5\" >0.4621</td>\n","      <td id=\"T_e5eb0_row6_col6\" class=\"data row6 col6\" >0.3845</td>\n","      <td id=\"T_e5eb0_row6_col7\" class=\"data row6 col7\" >0.3846</td>\n","      <td id=\"T_e5eb0_row6_col8\" class=\"data row6 col8\" >0.3200</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_e5eb0_level0_row7\" class=\"row_heading level0 row7\" >ada</th>\n","      <td id=\"T_e5eb0_row7_col0\" class=\"data row7 col0\" >Ada Boost Classifier</td>\n","      <td id=\"T_e5eb0_row7_col1\" class=\"data row7 col1\" >0.8963</td>\n","      <td id=\"T_e5eb0_row7_col2\" class=\"data row7 col2\" >0.9011</td>\n","      <td id=\"T_e5eb0_row7_col3\" class=\"data row7 col3\" >0.3557</td>\n","      <td id=\"T_e5eb0_row7_col4\" class=\"data row7 col4\" >0.6421</td>\n","      <td id=\"T_e5eb0_row7_col5\" class=\"data row7 col5\" >0.4577</td>\n","      <td id=\"T_e5eb0_row7_col6\" class=\"data row7 col6\" >0.4056</td>\n","      <td id=\"T_e5eb0_row7_col7\" class=\"data row7 col7\" >0.4273</td>\n","      <td id=\"T_e5eb0_row7_col8\" class=\"data row7 col8\" >1.2840</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_e5eb0_level0_row8\" class=\"row_heading level0 row8\" >nb</th>\n","      <td id=\"T_e5eb0_row8_col0\" class=\"data row8 col0\" >Naive Bayes</td>\n","      <td id=\"T_e5eb0_row8_col1\" class=\"data row8 col1\" >0.7579</td>\n","      <td id=\"T_e5eb0_row8_col2\" class=\"data row8 col2\" >0.8268</td>\n","      <td id=\"T_e5eb0_row8_col3\" class=\"data row8 col3\" >0.7595</td>\n","      <td id=\"T_e5eb0_row8_col4\" class=\"data row8 col4\" >0.3061</td>\n","      <td id=\"T_e5eb0_row8_col5\" class=\"data row8 col5\" >0.4360</td>\n","      <td id=\"T_e5eb0_row8_col6\" class=\"data row8 col6\" >0.3161</td>\n","      <td id=\"T_e5eb0_row8_col7\" class=\"data row8 col7\" >0.3691</td>\n","      <td id=\"T_e5eb0_row8_col8\" class=\"data row8 col8\" >0.1040</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_e5eb0_level0_row9\" class=\"row_heading level0 row9\" >lr</th>\n","      <td id=\"T_e5eb0_row9_col0\" class=\"data row9 col0\" >Logistic Regression</td>\n","      <td id=\"T_e5eb0_row9_col1\" class=\"data row9 col1\" >0.8947</td>\n","      <td id=\"T_e5eb0_row9_col2\" class=\"data row9 col2\" >0.8802</td>\n","      <td id=\"T_e5eb0_row9_col3\" class=\"data row9 col3\" >0.3188</td>\n","      <td id=\"T_e5eb0_row9_col4\" class=\"data row9 col4\" >0.6462</td>\n","      <td id=\"T_e5eb0_row9_col5\" class=\"data row9 col5\" >0.4269</td>\n","      <td id=\"T_e5eb0_row9_col6\" class=\"data row9 col6\" >0.3762</td>\n","      <td id=\"T_e5eb0_row9_col7\" class=\"data row9 col7\" >0.4048</td>\n","      <td id=\"T_e5eb0_row9_col8\" class=\"data row9 col8\" >0.7100</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_e5eb0_level0_row10\" class=\"row_heading level0 row10\" >lda</th>\n","      <td id=\"T_e5eb0_row10_col0\" class=\"data row10 col0\" >Linear Discriminant Analysis</td>\n","      <td id=\"T_e5eb0_row10_col1\" class=\"data row10 col1\" >0.8912</td>\n","      <td id=\"T_e5eb0_row10_col2\" class=\"data row10 col2\" >0.8635</td>\n","      <td id=\"T_e5eb0_row10_col3\" class=\"data row10 col3\" >0.3275</td>\n","      <td id=\"T_e5eb0_row10_col4\" class=\"data row10 col4\" >0.6075</td>\n","      <td id=\"T_e5eb0_row10_col5\" class=\"data row10 col5\" >0.4255</td>\n","      <td id=\"T_e5eb0_row10_col6\" class=\"data row10 col6\" >0.3713</td>\n","      <td id=\"T_e5eb0_row10_col7\" class=\"data row10 col7\" >0.3931</td>\n","      <td id=\"T_e5eb0_row10_col8\" class=\"data row10 col8\" >0.1320</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_e5eb0_level0_row11\" class=\"row_heading level0 row11\" >qda</th>\n","      <td id=\"T_e5eb0_row11_col0\" class=\"data row11 col0\" >Quadratic Discriminant Analysis</td>\n","      <td id=\"T_e5eb0_row11_col1\" class=\"data row11 col1\" >0.5813</td>\n","      <td id=\"T_e5eb0_row11_col2\" class=\"data row11 col2\" >0.7187</td>\n","      <td id=\"T_e5eb0_row11_col3\" class=\"data row11 col3\" >0.7507</td>\n","      <td id=\"T_e5eb0_row11_col4\" class=\"data row11 col4\" >0.1944</td>\n","      <td id=\"T_e5eb0_row11_col5\" class=\"data row11 col5\" >0.3064</td>\n","      <td id=\"T_e5eb0_row11_col6\" class=\"data row11 col6\" >0.1390</td>\n","      <td id=\"T_e5eb0_row11_col7\" class=\"data row11 col7\" >0.2073</td>\n","      <td id=\"T_e5eb0_row11_col8\" class=\"data row11 col8\" >0.1020</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_e5eb0_level0_row12\" class=\"row_heading level0 row12\" >svm</th>\n","      <td id=\"T_e5eb0_row12_col0\" class=\"data row12 col0\" >SVM - Linear Kernel</td>\n","      <td id=\"T_e5eb0_row12_col1\" class=\"data row12 col1\" >0.8880</td>\n","      <td id=\"T_e5eb0_row12_col2\" class=\"data row12 col2\" >0.0000</td>\n","      <td id=\"T_e5eb0_row12_col3\" class=\"data row12 col3\" >0.1710</td>\n","      <td id=\"T_e5eb0_row12_col4\" class=\"data row12 col4\" >0.6851</td>\n","      <td id=\"T_e5eb0_row12_col5\" class=\"data row12 col5\" >0.2641</td>\n","      <td id=\"T_e5eb0_row12_col6\" class=\"data row12 col6\" >0.2288</td>\n","      <td id=\"T_e5eb0_row12_col7\" class=\"data row12 col7\" >0.2944</td>\n","      <td id=\"T_e5eb0_row12_col8\" class=\"data row12 col8\" >0.1580</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_e5eb0_level0_row13\" class=\"row_heading level0 row13\" >ridge</th>\n","      <td id=\"T_e5eb0_row13_col0\" class=\"data row13 col0\" >Ridge Classifier</td>\n","      <td id=\"T_e5eb0_row13_col1\" class=\"data row13 col1\" >0.8847</td>\n","      <td id=\"T_e5eb0_row13_col2\" class=\"data row13 col2\" >0.0000</td>\n","      <td id=\"T_e5eb0_row13_col3\" class=\"data row13 col3\" >0.0891</td>\n","      <td id=\"T_e5eb0_row13_col4\" class=\"data row13 col4\" >0.7740</td>\n","      <td id=\"T_e5eb0_row13_col5\" class=\"data row13 col5\" >0.1595</td>\n","      <td id=\"T_e5eb0_row13_col6\" class=\"data row13 col6\" >0.1376</td>\n","      <td id=\"T_e5eb0_row13_col7\" class=\"data row13 col7\" >0.2369</td>\n","      <td id=\"T_e5eb0_row13_col8\" class=\"data row13 col8\" >0.1180</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_e5eb0_level0_row14\" class=\"row_heading level0 row14\" >dummy</th>\n","      <td id=\"T_e5eb0_row14_col0\" class=\"data row14 col0\" >Dummy Classifier</td>\n","      <td id=\"T_e5eb0_row14_col1\" class=\"data row14 col1\" >0.8770</td>\n","      <td id=\"T_e5eb0_row14_col2\" class=\"data row14 col2\" >0.5000</td>\n","      <td id=\"T_e5eb0_row14_col3\" class=\"data row14 col3\" >0.0000</td>\n","      <td id=\"T_e5eb0_row14_col4\" class=\"data row14 col4\" >0.0000</td>\n","      <td id=\"T_e5eb0_row14_col5\" class=\"data row14 col5\" >0.0000</td>\n","      <td id=\"T_e5eb0_row14_col6\" class=\"data row14 col6\" >0.0000</td>\n","      <td id=\"T_e5eb0_row14_col7\" class=\"data row14 col7\" >0.0000</td>\n","      <td id=\"T_e5eb0_row14_col8\" class=\"data row14 col8\" >0.1100</td>\n","    </tr>\n","  </tbody>\n","</table>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Processing:   0%|          | 0/69 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"249010bc075c4229bfb59299ec703016"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"}}}}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}}]},{"cell_type":"code","source":["best_model"],"metadata":{"id":"ivVXzCjsVE1O","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1703651438018,"user_tz":-540,"elapsed":10,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"a3812be4-5bb2-46db-e235-9cd28d1fbbb3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[XGBClassifier(base_score=None, booster='gbtree', callbacks=None,\n","               colsample_bylevel=None, colsample_bynode=None,\n","               colsample_bytree=None, device='cpu', early_stopping_rounds=None,\n","               enable_categorical=False, eval_metric=None, feature_types=None,\n","               gamma=None, grow_policy=None, importance_type=None,\n","               interaction_constraints=None, learning_rate=None, max_bin=None,\n","               max_cat_threshold=None, max_cat_to_onehot=None,\n","               max_delta_step=None, max_depth=None, max_leaves=None,\n","               min_child_weight=None, missing=nan, monotone_constraints=None,\n","               multi_strategy=None, n_estimators=None, n_jobs=-1,\n","               num_parallel_tree=None, objective='binary:logistic', ...),\n"," ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,\n","                      criterion='gini', max_depth=None, max_features='sqrt',\n","                      max_leaf_nodes=None, max_samples=None,\n","                      min_impurity_decrease=0.0, min_samples_leaf=1,\n","                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n","                      n_estimators=100, n_jobs=-1, oob_score=False,\n","                      random_state=42, verbose=0, warm_start=False),\n"," LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,\n","                importance_type='split', learning_rate=0.1, max_depth=-1,\n","                min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,\n","                n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,\n","                random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,\n","                subsample_for_bin=200000, subsample_freq=0),\n"," RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,\n","                        criterion='gini', max_depth=None, max_features='sqrt',\n","                        max_leaf_nodes=None, max_samples=None,\n","                        min_impurity_decrease=0.0, min_samples_leaf=1,\n","                        min_samples_split=2, min_weight_fraction_leaf=0.0,\n","                        n_estimators=100, n_jobs=-1, oob_score=False,\n","                        random_state=42, verbose=0, warm_start=False),\n"," GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,\n","                            learning_rate=0.1, loss='log_loss', max_depth=3,\n","                            max_features=None, max_leaf_nodes=None,\n","                            min_impurity_decrease=0.0, min_samples_leaf=1,\n","                            min_samples_split=2, min_weight_fraction_leaf=0.0,\n","                            n_estimators=100, n_iter_no_change=None,\n","                            random_state=42, subsample=1.0, tol=0.0001,\n","                            validation_fraction=0.1, verbose=0,\n","                            warm_start=False)]"]},"metadata":{},"execution_count":52}]},{"cell_type":"markdown","source":["### 3-2) SMOTE 적용"],"metadata":{"id":"Ixhh-Bc000Ob"}},{"cell_type":"code","source":["smote_s = setup(data = x, # 피처 데이터\n","            target = y, # 타겟 데이터\n","            verbose = True,\n","            ordinal_features=None,\n","            categorical_features=categorical_features,\n","            numeric_features=numerical_features,\n","            keep_features = passthrough,\n","            train_size = 0.8, # 훈련양 조정\n","            normalize = True, # 정규화 여부 진행\n","            session_id = 100, # 난수 시드 바꿔서 진행해보기\n","            fold=5,\n","            fold_shuffle=True,\n","            fold_strategy='stratifiedkfold',\n","            normalize_method='zscore',\n","            fix_imbalance=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"pX92LORfwO7d","executionInfo":{"status":"ok","timestamp":1703651550818,"user_tz":-540,"elapsed":10566,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"bc6e87e5-5e91-4d40-ace3-6e82e55ad24a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["Exception ignored on calling ctypes callback function: <function ThreadpoolController._find_libraries_with_dl_iterate_phdr.<locals>.match_library_callback at 0x7ae132e883a0>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/threadpoolctl.py\", line 847, in match_library_callback\n","    self._make_controller_from_path(filepath)\n","  File \"/usr/local/lib/python3.10/dist-packages/threadpoolctl.py\", line 984, in _make_controller_from_path\n","    lib_controller = controller_class(filepath=filepath, prefix=prefix)\n","  File \"/usr/local/lib/python3.10/dist-packages/threadpoolctl.py\", line 111, in __init__\n","    self.dynlib = ctypes.CDLL(filepath, mode=_RTLD_NOLOAD)\n","  File \"/usr/lib/python3.10/ctypes/__init__.py\", line 374, in __init__\n","    self._handle = _dlopen(self._name, mode)\n","OSError: /usr/local/lib/python3.10/dist-packages/scipy.libs/libopenblasp-r0-23e5df77.3.21.dev.so: cannot open shared object file: No such file or directory\n"]},{"output_type":"display_data","data":{"text/plain":["<pandas.io.formats.style.Styler at 0x7ae133fe7df0>"],"text/html":["<style type=\"text/css\">\n","#T_11102_row11_col1, #T_11102_row17_col1, #T_11102_row19_col1 {\n","  background-color: lightgreen;\n","}\n","</style>\n","<table id=\"T_11102\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th id=\"T_11102_level0_col0\" class=\"col_heading level0 col0\" >Description</th>\n","      <th id=\"T_11102_level0_col1\" class=\"col_heading level0 col1\" >Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_11102_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n","      <td id=\"T_11102_row0_col0\" class=\"data row0 col0\" >Session id</td>\n","      <td id=\"T_11102_row0_col1\" class=\"data row0 col1\" >42</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n","      <td id=\"T_11102_row1_col0\" class=\"data row1 col0\" >Target</td>\n","      <td id=\"T_11102_row1_col1\" class=\"data row1 col1\" >y</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n","      <td id=\"T_11102_row2_col0\" class=\"data row2 col0\" >Target type</td>\n","      <td id=\"T_11102_row2_col1\" class=\"data row2 col1\" >Binary</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n","      <td id=\"T_11102_row3_col0\" class=\"data row3 col0\" >Original data shape</td>\n","      <td id=\"T_11102_row3_col1\" class=\"data row3 col1\" >(73440, 28)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n","      <td id=\"T_11102_row4_col0\" class=\"data row4 col0\" >Transformed data shape</td>\n","      <td id=\"T_11102_row4_col1\" class=\"data row4 col1\" >(117736, 28)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n","      <td id=\"T_11102_row5_col0\" class=\"data row5 col0\" >Transformed train set shape</td>\n","      <td id=\"T_11102_row5_col1\" class=\"data row5 col1\" >(103048, 28)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n","      <td id=\"T_11102_row6_col0\" class=\"data row6 col0\" >Transformed test set shape</td>\n","      <td id=\"T_11102_row6_col1\" class=\"data row6 col1\" >(14688, 28)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n","      <td id=\"T_11102_row7_col0\" class=\"data row7 col0\" >Ordinal features</td>\n","      <td id=\"T_11102_row7_col1\" class=\"data row7 col1\" >1</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n","      <td id=\"T_11102_row8_col0\" class=\"data row8 col0\" >Numeric features</td>\n","      <td id=\"T_11102_row8_col1\" class=\"data row8 col1\" >11</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n","      <td id=\"T_11102_row9_col0\" class=\"data row9 col0\" >Categorical features</td>\n","      <td id=\"T_11102_row9_col1\" class=\"data row9 col1\" >3</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n","      <td id=\"T_11102_row10_col0\" class=\"data row10 col0\" >Keep features</td>\n","      <td id=\"T_11102_row10_col1\" class=\"data row10 col1\" >10</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n","      <td id=\"T_11102_row11_col0\" class=\"data row11 col0\" >Preprocess</td>\n","      <td id=\"T_11102_row11_col1\" class=\"data row11 col1\" >True</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row12\" class=\"row_heading level0 row12\" >12</th>\n","      <td id=\"T_11102_row12_col0\" class=\"data row12 col0\" >Imputation type</td>\n","      <td id=\"T_11102_row12_col1\" class=\"data row12 col1\" >simple</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row13\" class=\"row_heading level0 row13\" >13</th>\n","      <td id=\"T_11102_row13_col0\" class=\"data row13 col0\" >Numeric imputation</td>\n","      <td id=\"T_11102_row13_col1\" class=\"data row13 col1\" >mean</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row14\" class=\"row_heading level0 row14\" >14</th>\n","      <td id=\"T_11102_row14_col0\" class=\"data row14 col0\" >Categorical imputation</td>\n","      <td id=\"T_11102_row14_col1\" class=\"data row14 col1\" >mode</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row15\" class=\"row_heading level0 row15\" >15</th>\n","      <td id=\"T_11102_row15_col0\" class=\"data row15 col0\" >Maximum one-hot encoding</td>\n","      <td id=\"T_11102_row15_col1\" class=\"data row15 col1\" >25</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row16\" class=\"row_heading level0 row16\" >16</th>\n","      <td id=\"T_11102_row16_col0\" class=\"data row16 col0\" >Encoding method</td>\n","      <td id=\"T_11102_row16_col1\" class=\"data row16 col1\" >None</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row17\" class=\"row_heading level0 row17\" >17</th>\n","      <td id=\"T_11102_row17_col0\" class=\"data row17 col0\" >Fix imbalance</td>\n","      <td id=\"T_11102_row17_col1\" class=\"data row17 col1\" >True</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row18\" class=\"row_heading level0 row18\" >18</th>\n","      <td id=\"T_11102_row18_col0\" class=\"data row18 col0\" >Fix imbalance method</td>\n","      <td id=\"T_11102_row18_col1\" class=\"data row18 col1\" >SMOTE</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row19\" class=\"row_heading level0 row19\" >19</th>\n","      <td id=\"T_11102_row19_col0\" class=\"data row19 col0\" >Normalize</td>\n","      <td id=\"T_11102_row19_col1\" class=\"data row19 col1\" >True</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row20\" class=\"row_heading level0 row20\" >20</th>\n","      <td id=\"T_11102_row20_col0\" class=\"data row20 col0\" >Normalize method</td>\n","      <td id=\"T_11102_row20_col1\" class=\"data row20 col1\" >zscore</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row21\" class=\"row_heading level0 row21\" >21</th>\n","      <td id=\"T_11102_row21_col0\" class=\"data row21 col0\" >Fold Generator</td>\n","      <td id=\"T_11102_row21_col1\" class=\"data row21 col1\" >StratifiedKFold</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row22\" class=\"row_heading level0 row22\" >22</th>\n","      <td id=\"T_11102_row22_col0\" class=\"data row22 col0\" >Fold Number</td>\n","      <td id=\"T_11102_row22_col1\" class=\"data row22 col1\" >5</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row23\" class=\"row_heading level0 row23\" >23</th>\n","      <td id=\"T_11102_row23_col0\" class=\"data row23 col0\" >CPU Jobs</td>\n","      <td id=\"T_11102_row23_col1\" class=\"data row23 col1\" >-1</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row24\" class=\"row_heading level0 row24\" >24</th>\n","      <td id=\"T_11102_row24_col0\" class=\"data row24 col0\" >Use GPU</td>\n","      <td id=\"T_11102_row24_col1\" class=\"data row24 col1\" >False</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row25\" class=\"row_heading level0 row25\" >25</th>\n","      <td id=\"T_11102_row25_col0\" class=\"data row25 col0\" >Log Experiment</td>\n","      <td id=\"T_11102_row25_col1\" class=\"data row25 col1\" >False</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row26\" class=\"row_heading level0 row26\" >26</th>\n","      <td id=\"T_11102_row26_col0\" class=\"data row26 col0\" >Experiment Name</td>\n","      <td id=\"T_11102_row26_col1\" class=\"data row26 col1\" >clf-default-name</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_11102_level0_row27\" class=\"row_heading level0 row27\" >27</th>\n","      <td id=\"T_11102_row27_col0\" class=\"data row27 col0\" >USI</td>\n","      <td id=\"T_11102_row27_col1\" class=\"data row27 col1\" >1940</td>\n","    </tr>\n","  </tbody>\n","</table>\n"]},"metadata":{}}]},{"cell_type":"code","source":["best = compare_models(n_select=5, sort='F1')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":519,"referenced_widgets":["b43b258418244a0f858089dcdeb2d2c0","908c88bab99247dcac99b7f1a9f983fb","2431fb5a5cec4472ae1143acdb27cd7b","fb17da8540064f229201036e9edf1d1e","2bcd7df476bf41b680ff2ab323252485","127d1e6a872247ba8ff6d4c36725e917","6575e834d30e494099605b7c24b0c724","a0d1c45e077a4fd4b5f3fdcc782854bf","669d1d3d8ddd437eacdaa208ed310be2","b89ee132b1494ed9b4240f7a8112654b","3eb79060ab2b4ba5884b6bbd74c33ede"]},"id":"ZA8XfJ2r1EwY","executionInfo":{"status":"ok","timestamp":1703652421137,"user_tz":-540,"elapsed":840841,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"c96aaa87-11dc-4969-bc89-8c76a30e2822"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<pandas.io.formats.style.Styler at 0x7ae0b9fa54b0>"],"text/html":["<style type=\"text/css\">\n","#T_9c3af th {\n","  text-align: left;\n","}\n","#T_9c3af_row0_col0, #T_9c3af_row0_col1, #T_9c3af_row0_col2, #T_9c3af_row0_col3, #T_9c3af_row0_col4, #T_9c3af_row1_col0, #T_9c3af_row1_col3, #T_9c3af_row1_col5, #T_9c3af_row1_col6, #T_9c3af_row1_col7, #T_9c3af_row2_col0, #T_9c3af_row2_col1, #T_9c3af_row2_col2, #T_9c3af_row2_col3, #T_9c3af_row2_col4, #T_9c3af_row2_col5, #T_9c3af_row2_col6, #T_9c3af_row2_col7, #T_9c3af_row3_col0, #T_9c3af_row3_col1, #T_9c3af_row3_col2, #T_9c3af_row3_col3, #T_9c3af_row3_col4, #T_9c3af_row3_col5, #T_9c3af_row3_col6, #T_9c3af_row3_col7, #T_9c3af_row4_col0, #T_9c3af_row4_col1, #T_9c3af_row4_col2, #T_9c3af_row4_col3, #T_9c3af_row4_col4, #T_9c3af_row4_col5, #T_9c3af_row4_col6, #T_9c3af_row4_col7, #T_9c3af_row5_col0, #T_9c3af_row5_col1, #T_9c3af_row5_col2, #T_9c3af_row5_col3, #T_9c3af_row5_col4, #T_9c3af_row5_col5, #T_9c3af_row5_col6, #T_9c3af_row5_col7, #T_9c3af_row6_col0, #T_9c3af_row6_col1, #T_9c3af_row6_col2, #T_9c3af_row6_col3, #T_9c3af_row6_col4, #T_9c3af_row6_col5, #T_9c3af_row6_col6, #T_9c3af_row6_col7, #T_9c3af_row7_col0, #T_9c3af_row7_col1, #T_9c3af_row7_col2, #T_9c3af_row7_col3, #T_9c3af_row7_col4, #T_9c3af_row7_col5, #T_9c3af_row7_col6, #T_9c3af_row7_col7, #T_9c3af_row8_col0, #T_9c3af_row8_col1, #T_9c3af_row8_col2, #T_9c3af_row8_col3, #T_9c3af_row8_col4, #T_9c3af_row8_col5, #T_9c3af_row8_col6, #T_9c3af_row8_col7, #T_9c3af_row9_col0, #T_9c3af_row9_col1, #T_9c3af_row9_col2, #T_9c3af_row9_col3, #T_9c3af_row9_col4, #T_9c3af_row9_col5, #T_9c3af_row9_col6, #T_9c3af_row9_col7, #T_9c3af_row10_col0, #T_9c3af_row10_col1, #T_9c3af_row10_col2, #T_9c3af_row10_col3, #T_9c3af_row10_col4, #T_9c3af_row10_col5, #T_9c3af_row10_col6, #T_9c3af_row10_col7, #T_9c3af_row11_col0, #T_9c3af_row11_col1, #T_9c3af_row11_col2, #T_9c3af_row11_col3, #T_9c3af_row11_col4, #T_9c3af_row11_col5, #T_9c3af_row11_col6, #T_9c3af_row11_col7, #T_9c3af_row12_col0, #T_9c3af_row12_col1, #T_9c3af_row12_col2, #T_9c3af_row12_col4, #T_9c3af_row12_col5, #T_9c3af_row12_col6, #T_9c3af_row12_col7, #T_9c3af_row13_col0, #T_9c3af_row13_col1, #T_9c3af_row13_col2, #T_9c3af_row13_col3, #T_9c3af_row13_col4, #T_9c3af_row13_col5, #T_9c3af_row13_col6, #T_9c3af_row13_col7, #T_9c3af_row14_col0, #T_9c3af_row14_col1, #T_9c3af_row14_col2, #T_9c3af_row14_col3, #T_9c3af_row14_col4, #T_9c3af_row14_col5, #T_9c3af_row14_col6, #T_9c3af_row14_col7 {\n","  text-align: left;\n","}\n","#T_9c3af_row0_col5, #T_9c3af_row0_col6, #T_9c3af_row0_col7, #T_9c3af_row1_col1, #T_9c3af_row1_col2, #T_9c3af_row1_col4, #T_9c3af_row12_col3 {\n","  text-align: left;\n","  background-color: yellow;\n","}\n","#T_9c3af_row0_col8, #T_9c3af_row1_col8, #T_9c3af_row2_col8, #T_9c3af_row3_col8, #T_9c3af_row4_col8, #T_9c3af_row5_col8, #T_9c3af_row6_col8, #T_9c3af_row7_col8, #T_9c3af_row8_col8, #T_9c3af_row9_col8, #T_9c3af_row10_col8, #T_9c3af_row11_col8, #T_9c3af_row13_col8, #T_9c3af_row14_col8 {\n","  text-align: left;\n","  background-color: lightgrey;\n","}\n","#T_9c3af_row12_col8 {\n","  text-align: left;\n","  background-color: yellow;\n","  background-color: lightgrey;\n","}\n","</style>\n","<table id=\"T_9c3af\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th id=\"T_9c3af_level0_col0\" class=\"col_heading level0 col0\" >Model</th>\n","      <th id=\"T_9c3af_level0_col1\" class=\"col_heading level0 col1\" >Accuracy</th>\n","      <th id=\"T_9c3af_level0_col2\" class=\"col_heading level0 col2\" >AUC</th>\n","      <th id=\"T_9c3af_level0_col3\" class=\"col_heading level0 col3\" >Recall</th>\n","      <th id=\"T_9c3af_level0_col4\" class=\"col_heading level0 col4\" >Prec.</th>\n","      <th id=\"T_9c3af_level0_col5\" class=\"col_heading level0 col5\" >F1</th>\n","      <th id=\"T_9c3af_level0_col6\" class=\"col_heading level0 col6\" >Kappa</th>\n","      <th id=\"T_9c3af_level0_col7\" class=\"col_heading level0 col7\" >MCC</th>\n","      <th id=\"T_9c3af_level0_col8\" class=\"col_heading level0 col8\" >TT (Sec)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_9c3af_level0_row0\" class=\"row_heading level0 row0\" >rf</th>\n","      <td id=\"T_9c3af_row0_col0\" class=\"data row0 col0\" >Random Forest Classifier</td>\n","      <td id=\"T_9c3af_row0_col1\" class=\"data row0 col1\" >0.8892</td>\n","      <td id=\"T_9c3af_row0_col2\" class=\"data row0 col2\" >0.9148</td>\n","      <td id=\"T_9c3af_row0_col3\" class=\"data row0 col3\" >0.6288</td>\n","      <td id=\"T_9c3af_row0_col4\" class=\"data row0 col4\" >0.5431</td>\n","      <td id=\"T_9c3af_row0_col5\" class=\"data row0 col5\" >0.5827</td>\n","      <td id=\"T_9c3af_row0_col6\" class=\"data row0 col6\" >0.5192</td>\n","      <td id=\"T_9c3af_row0_col7\" class=\"data row0 col7\" >0.5212</td>\n","      <td id=\"T_9c3af_row0_col8\" class=\"data row0 col8\" >5.2760</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_9c3af_level0_row1\" class=\"row_heading level0 row1\" >lightgbm</th>\n","      <td id=\"T_9c3af_row1_col0\" class=\"data row1 col0\" >Light Gradient Boosting Machine</td>\n","      <td id=\"T_9c3af_row1_col1\" class=\"data row1 col1\" >0.8984</td>\n","      <td id=\"T_9c3af_row1_col2\" class=\"data row1 col2\" >0.9161</td>\n","      <td id=\"T_9c3af_row1_col3\" class=\"data row1 col3\" >0.5436</td>\n","      <td id=\"T_9c3af_row1_col4\" class=\"data row1 col4\" >0.5956</td>\n","      <td id=\"T_9c3af_row1_col5\" class=\"data row1 col5\" >0.5683</td>\n","      <td id=\"T_9c3af_row1_col6\" class=\"data row1 col6\" >0.5108</td>\n","      <td id=\"T_9c3af_row1_col7\" class=\"data row1 col7\" >0.5116</td>\n","      <td id=\"T_9c3af_row1_col8\" class=\"data row1 col8\" >121.6580</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_9c3af_level0_row2\" class=\"row_heading level0 row2\" >xgboost</th>\n","      <td id=\"T_9c3af_row2_col0\" class=\"data row2 col0\" >Extreme Gradient Boosting</td>\n","      <td id=\"T_9c3af_row2_col1\" class=\"data row2 col1\" >0.8964</td>\n","      <td id=\"T_9c3af_row2_col2\" class=\"data row2 col2\" >0.9126</td>\n","      <td id=\"T_9c3af_row2_col3\" class=\"data row2 col3\" >0.5515</td>\n","      <td id=\"T_9c3af_row2_col4\" class=\"data row2 col4\" >0.5836</td>\n","      <td id=\"T_9c3af_row2_col5\" class=\"data row2 col5\" >0.5670</td>\n","      <td id=\"T_9c3af_row2_col6\" class=\"data row2 col6\" >0.5082</td>\n","      <td id=\"T_9c3af_row2_col7\" class=\"data row2 col7\" >0.5085</td>\n","      <td id=\"T_9c3af_row2_col8\" class=\"data row2 col8\" >0.7640</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_9c3af_level0_row3\" class=\"row_heading level0 row3\" >et</th>\n","      <td id=\"T_9c3af_row3_col0\" class=\"data row3 col0\" >Extra Trees Classifier</td>\n","      <td id=\"T_9c3af_row3_col1\" class=\"data row3 col1\" >0.8799</td>\n","      <td id=\"T_9c3af_row3_col2\" class=\"data row3 col2\" >0.9030</td>\n","      <td id=\"T_9c3af_row3_col3\" class=\"data row3 col3\" >0.5968</td>\n","      <td id=\"T_9c3af_row3_col4\" class=\"data row3 col4\" >0.5101</td>\n","      <td id=\"T_9c3af_row3_col5\" class=\"data row3 col5\" >0.5501</td>\n","      <td id=\"T_9c3af_row3_col6\" class=\"data row3 col6\" >0.4812</td>\n","      <td id=\"T_9c3af_row3_col7\" class=\"data row3 col7\" >0.4832</td>\n","      <td id=\"T_9c3af_row3_col8\" class=\"data row3 col8\" >2.1580</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_9c3af_level0_row4\" class=\"row_heading level0 row4\" >gbc</th>\n","      <td id=\"T_9c3af_row4_col0\" class=\"data row4 col0\" >Gradient Boosting Classifier</td>\n","      <td id=\"T_9c3af_row4_col1\" class=\"data row4 col1\" >0.8361</td>\n","      <td id=\"T_9c3af_row4_col2\" class=\"data row4 col2\" >0.9015</td>\n","      <td id=\"T_9c3af_row4_col3\" class=\"data row4 col3\" >0.7716</td>\n","      <td id=\"T_9c3af_row4_col4\" class=\"data row4 col4\" >0.4116</td>\n","      <td id=\"T_9c3af_row4_col5\" class=\"data row4 col5\" >0.5368</td>\n","      <td id=\"T_9c3af_row4_col6\" class=\"data row4 col6\" >0.4482</td>\n","      <td id=\"T_9c3af_row4_col7\" class=\"data row4 col7\" >0.4810</td>\n","      <td id=\"T_9c3af_row4_col8\" class=\"data row4 col8\" >11.2040</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_9c3af_level0_row5\" class=\"row_heading level0 row5\" >ada</th>\n","      <td id=\"T_9c3af_row5_col0\" class=\"data row5 col0\" >Ada Boost Classifier</td>\n","      <td id=\"T_9c3af_row5_col1\" class=\"data row5 col1\" >0.8158</td>\n","      <td id=\"T_9c3af_row5_col2\" class=\"data row5 col2\" >0.8919</td>\n","      <td id=\"T_9c3af_row5_col3\" class=\"data row5 col3\" >0.7966</td>\n","      <td id=\"T_9c3af_row5_col4\" class=\"data row5 col4\" >0.3811</td>\n","      <td id=\"T_9c3af_row5_col5\" class=\"data row5 col5\" >0.5155</td>\n","      <td id=\"T_9c3af_row5_col6\" class=\"data row5 col6\" >0.4188</td>\n","      <td id=\"T_9c3af_row5_col7\" class=\"data row5 col7\" >0.4623</td>\n","      <td id=\"T_9c3af_row5_col8\" class=\"data row5 col8\" >2.8300</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_9c3af_level0_row6\" class=\"row_heading level0 row6\" >lr</th>\n","      <td id=\"T_9c3af_row6_col0\" class=\"data row6 col0\" >Logistic Regression</td>\n","      <td id=\"T_9c3af_row6_col1\" class=\"data row6 col1\" >0.8024</td>\n","      <td id=\"T_9c3af_row6_col2\" class=\"data row6 col2\" >0.8824</td>\n","      <td id=\"T_9c3af_row6_col3\" class=\"data row6 col3\" >0.8040</td>\n","      <td id=\"T_9c3af_row6_col4\" class=\"data row6 col4\" >0.3632</td>\n","      <td id=\"T_9c3af_row6_col5\" class=\"data row6 col5\" >0.5003</td>\n","      <td id=\"T_9c3af_row6_col6\" class=\"data row6 col6\" >0.3984</td>\n","      <td id=\"T_9c3af_row6_col7\" class=\"data row6 col7\" >0.4473</td>\n","      <td id=\"T_9c3af_row6_col8\" class=\"data row6 col8\" >0.6080</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_9c3af_level0_row7\" class=\"row_heading level0 row7\" >svm</th>\n","      <td id=\"T_9c3af_row7_col0\" class=\"data row7 col0\" >SVM - Linear Kernel</td>\n","      <td id=\"T_9c3af_row7_col1\" class=\"data row7 col1\" >0.7911</td>\n","      <td id=\"T_9c3af_row7_col2\" class=\"data row7 col2\" >0.0000</td>\n","      <td id=\"T_9c3af_row7_col3\" class=\"data row7 col3\" >0.8073</td>\n","      <td id=\"T_9c3af_row7_col4\" class=\"data row7 col4\" >0.3493</td>\n","      <td id=\"T_9c3af_row7_col5\" class=\"data row7 col5\" >0.4875</td>\n","      <td id=\"T_9c3af_row7_col6\" class=\"data row7 col6\" >0.3813</td>\n","      <td id=\"T_9c3af_row7_col7\" class=\"data row7 col7\" >0.4341</td>\n","      <td id=\"T_9c3af_row7_col8\" class=\"data row7 col8\" >0.2720</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_9c3af_level0_row8\" class=\"row_heading level0 row8\" >knn</th>\n","      <td id=\"T_9c3af_row8_col0\" class=\"data row8 col0\" >K Neighbors Classifier</td>\n","      <td id=\"T_9c3af_row8_col1\" class=\"data row8 col1\" >0.8015</td>\n","      <td id=\"T_9c3af_row8_col2\" class=\"data row8 col2\" >0.8459</td>\n","      <td id=\"T_9c3af_row8_col3\" class=\"data row8 col3\" >0.7609</td>\n","      <td id=\"T_9c3af_row8_col4\" class=\"data row8 col4\" >0.3565</td>\n","      <td id=\"T_9c3af_row8_col5\" class=\"data row8 col5\" >0.4855</td>\n","      <td id=\"T_9c3af_row8_col6\" class=\"data row8 col6\" >0.3819</td>\n","      <td id=\"T_9c3af_row8_col7\" class=\"data row8 col7\" >0.4241</td>\n","      <td id=\"T_9c3af_row8_col8\" class=\"data row8 col8\" >2.3580</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_9c3af_level0_row9\" class=\"row_heading level0 row9\" >ridge</th>\n","      <td id=\"T_9c3af_row9_col0\" class=\"data row9 col0\" >Ridge Classifier</td>\n","      <td id=\"T_9c3af_row9_col1\" class=\"data row9 col1\" >0.7898</td>\n","      <td id=\"T_9c3af_row9_col2\" class=\"data row9 col2\" >0.0000</td>\n","      <td id=\"T_9c3af_row9_col3\" class=\"data row9 col3\" >0.7977</td>\n","      <td id=\"T_9c3af_row9_col4\" class=\"data row9 col4\" >0.3462</td>\n","      <td id=\"T_9c3af_row9_col5\" class=\"data row9 col5\" >0.4828</td>\n","      <td id=\"T_9c3af_row9_col6\" class=\"data row9 col6\" >0.3757</td>\n","      <td id=\"T_9c3af_row9_col7\" class=\"data row9 col7\" >0.4274</td>\n","      <td id=\"T_9c3af_row9_col8\" class=\"data row9 col8\" >0.1740</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_9c3af_level0_row10\" class=\"row_heading level0 row10\" >lda</th>\n","      <td id=\"T_9c3af_row10_col0\" class=\"data row10 col0\" >Linear Discriminant Analysis</td>\n","      <td id=\"T_9c3af_row10_col1\" class=\"data row10 col1\" >0.7898</td>\n","      <td id=\"T_9c3af_row10_col2\" class=\"data row10 col2\" >0.8730</td>\n","      <td id=\"T_9c3af_row10_col3\" class=\"data row10 col3\" >0.7977</td>\n","      <td id=\"T_9c3af_row10_col4\" class=\"data row10 col4\" >0.3462</td>\n","      <td id=\"T_9c3af_row10_col5\" class=\"data row10 col5\" >0.4828</td>\n","      <td id=\"T_9c3af_row10_col6\" class=\"data row10 col6\" >0.3757</td>\n","      <td id=\"T_9c3af_row10_col7\" class=\"data row10 col7\" >0.4274</td>\n","      <td id=\"T_9c3af_row10_col8\" class=\"data row10 col8\" >0.2240</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_9c3af_level0_row11\" class=\"row_heading level0 row11\" >dt</th>\n","      <td id=\"T_9c3af_row11_col0\" class=\"data row11 col0\" >Decision Tree Classifier</td>\n","      <td id=\"T_9c3af_row11_col1\" class=\"data row11 col1\" >0.8642</td>\n","      <td id=\"T_9c3af_row11_col2\" class=\"data row11 col2\" >0.7068</td>\n","      <td id=\"T_9c3af_row11_col3\" class=\"data row11 col3\" >0.4979</td>\n","      <td id=\"T_9c3af_row11_col4\" class=\"data row11 col4\" >0.4531</td>\n","      <td id=\"T_9c3af_row11_col5\" class=\"data row11 col5\" >0.4744</td>\n","      <td id=\"T_9c3af_row11_col6\" class=\"data row11 col6\" >0.3966</td>\n","      <td id=\"T_9c3af_row11_col7\" class=\"data row11 col7\" >0.3972</td>\n","      <td id=\"T_9c3af_row11_col8\" class=\"data row11 col8\" >0.6260</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_9c3af_level0_row12\" class=\"row_heading level0 row12\" >nb</th>\n","      <td id=\"T_9c3af_row12_col0\" class=\"data row12 col0\" >Naive Bayes</td>\n","      <td id=\"T_9c3af_row12_col1\" class=\"data row12 col1\" >0.5105</td>\n","      <td id=\"T_9c3af_row12_col2\" class=\"data row12 col2\" >0.8088</td>\n","      <td id=\"T_9c3af_row12_col3\" class=\"data row12 col3\" >0.8877</td>\n","      <td id=\"T_9c3af_row12_col4\" class=\"data row12 col4\" >0.1868</td>\n","      <td id=\"T_9c3af_row12_col5\" class=\"data row12 col5\" >0.3086</td>\n","      <td id=\"T_9c3af_row12_col6\" class=\"data row12 col6\" >0.1322</td>\n","      <td id=\"T_9c3af_row12_col7\" class=\"data row12 col7\" >0.2301</td>\n","      <td id=\"T_9c3af_row12_col8\" class=\"data row12 col8\" >0.1520</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_9c3af_level0_row13\" class=\"row_heading level0 row13\" >qda</th>\n","      <td id=\"T_9c3af_row13_col0\" class=\"data row13 col0\" >Quadratic Discriminant Analysis</td>\n","      <td id=\"T_9c3af_row13_col1\" class=\"data row13 col1\" >0.5192</td>\n","      <td id=\"T_9c3af_row13_col2\" class=\"data row13 col2\" >0.6909</td>\n","      <td id=\"T_9c3af_row13_col3\" class=\"data row13 col3\" >0.7951</td>\n","      <td id=\"T_9c3af_row13_col4\" class=\"data row13 col4\" >0.1795</td>\n","      <td id=\"T_9c3af_row13_col5\" class=\"data row13 col5\" >0.2890</td>\n","      <td id=\"T_9c3af_row13_col6\" class=\"data row13 col6\" >0.1124</td>\n","      <td id=\"T_9c3af_row13_col7\" class=\"data row13 col7\" >0.1890</td>\n","      <td id=\"T_9c3af_row13_col8\" class=\"data row13 col8\" >0.1900</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_9c3af_level0_row14\" class=\"row_heading level0 row14\" >dummy</th>\n","      <td id=\"T_9c3af_row14_col0\" class=\"data row14 col0\" >Dummy Classifier</td>\n","      <td id=\"T_9c3af_row14_col1\" class=\"data row14 col1\" >0.8770</td>\n","      <td id=\"T_9c3af_row14_col2\" class=\"data row14 col2\" >0.5000</td>\n","      <td id=\"T_9c3af_row14_col3\" class=\"data row14 col3\" >0.0000</td>\n","      <td id=\"T_9c3af_row14_col4\" class=\"data row14 col4\" >0.0000</td>\n","      <td id=\"T_9c3af_row14_col5\" class=\"data row14 col5\" >0.0000</td>\n","      <td id=\"T_9c3af_row14_col6\" class=\"data row14 col6\" >0.0000</td>\n","      <td id=\"T_9c3af_row14_col7\" class=\"data row14 col7\" >0.0000</td>\n","      <td id=\"T_9c3af_row14_col8\" class=\"data row14 col8\" >0.1760</td>\n","    </tr>\n","  </tbody>\n","</table>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Processing:   0%|          | 0/69 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b43b258418244a0f858089dcdeb2d2c0"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"}}}}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}}]},{"cell_type":"code","source":["best"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ajxcx4oC1IQE","executionInfo":{"status":"ok","timestamp":1703652421138,"user_tz":-540,"elapsed":11,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"dc9c24c5-c76a-4b1a-be61-d3695b1a301d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,\n","                        criterion='gini', max_depth=None, max_features='sqrt',\n","                        max_leaf_nodes=None, max_samples=None,\n","                        min_impurity_decrease=0.0, min_samples_leaf=1,\n","                        min_samples_split=2, min_weight_fraction_leaf=0.0,\n","                        n_estimators=100, n_jobs=-1, oob_score=False,\n","                        random_state=42, verbose=0, warm_start=False),\n"," LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,\n","                importance_type='split', learning_rate=0.1, max_depth=-1,\n","                min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,\n","                n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,\n","                random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,\n","                subsample_for_bin=200000, subsample_freq=0),\n"," XGBClassifier(base_score=None, booster='gbtree', callbacks=None,\n","               colsample_bylevel=None, colsample_bynode=None,\n","               colsample_bytree=None, device='cpu', early_stopping_rounds=None,\n","               enable_categorical=False, eval_metric=None, feature_types=None,\n","               gamma=None, grow_policy=None, importance_type=None,\n","               interaction_constraints=None, learning_rate=None, max_bin=None,\n","               max_cat_threshold=None, max_cat_to_onehot=None,\n","               max_delta_step=None, max_depth=None, max_leaves=None,\n","               min_child_weight=None, missing=nan, monotone_constraints=None,\n","               multi_strategy=None, n_estimators=None, n_jobs=-1,\n","               num_parallel_tree=None, objective='binary:logistic', ...),\n"," ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,\n","                      criterion='gini', max_depth=None, max_features='sqrt',\n","                      max_leaf_nodes=None, max_samples=None,\n","                      min_impurity_decrease=0.0, min_samples_leaf=1,\n","                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n","                      n_estimators=100, n_jobs=-1, oob_score=False,\n","                      random_state=42, verbose=0, warm_start=False),\n"," GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,\n","                            learning_rate=0.1, loss='log_loss', max_depth=3,\n","                            max_features=None, max_leaf_nodes=None,\n","                            min_impurity_decrease=0.0, min_samples_leaf=1,\n","                            min_samples_split=2, min_weight_fraction_leaf=0.0,\n","                            n_estimators=100, n_iter_no_change=None,\n","                            random_state=42, subsample=1.0, tol=0.0001,\n","                            validation_fraction=0.1, verbose=0,\n","                            warm_start=False)]"]},"metadata":{},"execution_count":55}]},{"cell_type":"markdown","source":["### 3-3) f1, f2, f0.5 스코어 확인하기"],"metadata":{"id":"N5iaOuvQINH3"}},{"cell_type":"code","source":["smote_weight_best = setup(data = x, # 피처 데이터\n","            target = y, # 타겟 데이터\n","            verbose = True,\n","            ordinal_features=None,\n","            categorical_features=categorical_features,\n","            numeric_features=numerical_features,\n","            keep_features = passthrough,\n","            train_size = 0.8, # 훈련양 조정\n","            normalize = True, # 정규화 여부 진행\n","            session_id = 100, # 난수 시드 바꿔서 진행해보기\n","            fold=5,\n","            fold_shuffle=True,\n","            fold_strategy='stratifiedkfold',\n","            normalize_method='zscore',\n","            fix_imbalance=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"dhtgBQCFWKGw","executionInfo":{"status":"ok","timestamp":1704177276305,"user_tz":-540,"elapsed":17931,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"00e75f19-0129-414d-fb99-72d39da551d9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["Exception ignored on calling ctypes callback function: <function ThreadpoolController._find_libraries_with_dl_iterate_phdr.<locals>.match_library_callback at 0x7ef2b0335ea0>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/threadpoolctl.py\", line 847, in match_library_callback\n","    self._make_controller_from_path(filepath)\n","  File \"/usr/local/lib/python3.10/dist-packages/threadpoolctl.py\", line 984, in _make_controller_from_path\n","    lib_controller = controller_class(filepath=filepath, prefix=prefix)\n","  File \"/usr/local/lib/python3.10/dist-packages/threadpoolctl.py\", line 111, in __init__\n","    self.dynlib = ctypes.CDLL(filepath, mode=_RTLD_NOLOAD)\n","  File \"/usr/lib/python3.10/ctypes/__init__.py\", line 374, in __init__\n","    self._handle = _dlopen(self._name, mode)\n","OSError: /usr/local/lib/python3.10/dist-packages/scipy.libs/libopenblasp-r0-23e5df77.3.21.dev.so: cannot open shared object file: No such file or directory\n"]},{"output_type":"display_data","data":{"text/plain":["<pandas.io.formats.style.Styler at 0x7ef2b0277c40>"],"text/html":["<style type=\"text/css\">\n","#T_3dd0a_row11_col1, #T_3dd0a_row17_col1, #T_3dd0a_row19_col1 {\n","  background-color: lightgreen;\n","}\n","</style>\n","<table id=\"T_3dd0a\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th id=\"T_3dd0a_level0_col0\" class=\"col_heading level0 col0\" >Description</th>\n","      <th id=\"T_3dd0a_level0_col1\" class=\"col_heading level0 col1\" >Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n","      <td id=\"T_3dd0a_row0_col0\" class=\"data row0 col0\" >Session id</td>\n","      <td id=\"T_3dd0a_row0_col1\" class=\"data row0 col1\" >100</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n","      <td id=\"T_3dd0a_row1_col0\" class=\"data row1 col0\" >Target</td>\n","      <td id=\"T_3dd0a_row1_col1\" class=\"data row1 col1\" >y</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n","      <td id=\"T_3dd0a_row2_col0\" class=\"data row2 col0\" >Target type</td>\n","      <td id=\"T_3dd0a_row2_col1\" class=\"data row2 col1\" >Binary</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n","      <td id=\"T_3dd0a_row3_col0\" class=\"data row3 col0\" >Original data shape</td>\n","      <td id=\"T_3dd0a_row3_col1\" class=\"data row3 col1\" >(73440, 129)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n","      <td id=\"T_3dd0a_row4_col0\" class=\"data row4 col0\" >Transformed data shape</td>\n","      <td id=\"T_3dd0a_row4_col1\" class=\"data row4 col1\" >(117736, 129)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n","      <td id=\"T_3dd0a_row5_col0\" class=\"data row5 col0\" >Transformed train set shape</td>\n","      <td id=\"T_3dd0a_row5_col1\" class=\"data row5 col1\" >(103048, 129)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n","      <td id=\"T_3dd0a_row6_col0\" class=\"data row6 col0\" >Transformed test set shape</td>\n","      <td id=\"T_3dd0a_row6_col1\" class=\"data row6 col1\" >(14688, 129)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n","      <td id=\"T_3dd0a_row7_col0\" class=\"data row7 col0\" >Ordinal features</td>\n","      <td id=\"T_3dd0a_row7_col1\" class=\"data row7 col1\" >1</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n","      <td id=\"T_3dd0a_row8_col0\" class=\"data row8 col0\" >Numeric features</td>\n","      <td id=\"T_3dd0a_row8_col1\" class=\"data row8 col1\" >11</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n","      <td id=\"T_3dd0a_row9_col0\" class=\"data row9 col0\" >Categorical features</td>\n","      <td id=\"T_3dd0a_row9_col1\" class=\"data row9 col1\" >3</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n","      <td id=\"T_3dd0a_row10_col0\" class=\"data row10 col0\" >Keep features</td>\n","      <td id=\"T_3dd0a_row10_col1\" class=\"data row10 col1\" >10</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n","      <td id=\"T_3dd0a_row11_col0\" class=\"data row11 col0\" >Preprocess</td>\n","      <td id=\"T_3dd0a_row11_col1\" class=\"data row11 col1\" >True</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row12\" class=\"row_heading level0 row12\" >12</th>\n","      <td id=\"T_3dd0a_row12_col0\" class=\"data row12 col0\" >Imputation type</td>\n","      <td id=\"T_3dd0a_row12_col1\" class=\"data row12 col1\" >simple</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row13\" class=\"row_heading level0 row13\" >13</th>\n","      <td id=\"T_3dd0a_row13_col0\" class=\"data row13 col0\" >Numeric imputation</td>\n","      <td id=\"T_3dd0a_row13_col1\" class=\"data row13 col1\" >mean</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row14\" class=\"row_heading level0 row14\" >14</th>\n","      <td id=\"T_3dd0a_row14_col0\" class=\"data row14 col0\" >Categorical imputation</td>\n","      <td id=\"T_3dd0a_row14_col1\" class=\"data row14 col1\" >mode</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row15\" class=\"row_heading level0 row15\" >15</th>\n","      <td id=\"T_3dd0a_row15_col0\" class=\"data row15 col0\" >Maximum one-hot encoding</td>\n","      <td id=\"T_3dd0a_row15_col1\" class=\"data row15 col1\" >25</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row16\" class=\"row_heading level0 row16\" >16</th>\n","      <td id=\"T_3dd0a_row16_col0\" class=\"data row16 col0\" >Encoding method</td>\n","      <td id=\"T_3dd0a_row16_col1\" class=\"data row16 col1\" >None</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row17\" class=\"row_heading level0 row17\" >17</th>\n","      <td id=\"T_3dd0a_row17_col0\" class=\"data row17 col0\" >Fix imbalance</td>\n","      <td id=\"T_3dd0a_row17_col1\" class=\"data row17 col1\" >True</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row18\" class=\"row_heading level0 row18\" >18</th>\n","      <td id=\"T_3dd0a_row18_col0\" class=\"data row18 col0\" >Fix imbalance method</td>\n","      <td id=\"T_3dd0a_row18_col1\" class=\"data row18 col1\" >SMOTE</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row19\" class=\"row_heading level0 row19\" >19</th>\n","      <td id=\"T_3dd0a_row19_col0\" class=\"data row19 col0\" >Normalize</td>\n","      <td id=\"T_3dd0a_row19_col1\" class=\"data row19 col1\" >True</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row20\" class=\"row_heading level0 row20\" >20</th>\n","      <td id=\"T_3dd0a_row20_col0\" class=\"data row20 col0\" >Normalize method</td>\n","      <td id=\"T_3dd0a_row20_col1\" class=\"data row20 col1\" >zscore</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row21\" class=\"row_heading level0 row21\" >21</th>\n","      <td id=\"T_3dd0a_row21_col0\" class=\"data row21 col0\" >Fold Generator</td>\n","      <td id=\"T_3dd0a_row21_col1\" class=\"data row21 col1\" >StratifiedKFold</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row22\" class=\"row_heading level0 row22\" >22</th>\n","      <td id=\"T_3dd0a_row22_col0\" class=\"data row22 col0\" >Fold Number</td>\n","      <td id=\"T_3dd0a_row22_col1\" class=\"data row22 col1\" >5</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row23\" class=\"row_heading level0 row23\" >23</th>\n","      <td id=\"T_3dd0a_row23_col0\" class=\"data row23 col0\" >CPU Jobs</td>\n","      <td id=\"T_3dd0a_row23_col1\" class=\"data row23 col1\" >-1</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row24\" class=\"row_heading level0 row24\" >24</th>\n","      <td id=\"T_3dd0a_row24_col0\" class=\"data row24 col0\" >Use GPU</td>\n","      <td id=\"T_3dd0a_row24_col1\" class=\"data row24 col1\" >False</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row25\" class=\"row_heading level0 row25\" >25</th>\n","      <td id=\"T_3dd0a_row25_col0\" class=\"data row25 col0\" >Log Experiment</td>\n","      <td id=\"T_3dd0a_row25_col1\" class=\"data row25 col1\" >False</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row26\" class=\"row_heading level0 row26\" >26</th>\n","      <td id=\"T_3dd0a_row26_col0\" class=\"data row26 col0\" >Experiment Name</td>\n","      <td id=\"T_3dd0a_row26_col1\" class=\"data row26 col1\" >clf-default-name</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_3dd0a_level0_row27\" class=\"row_heading level0 row27\" >27</th>\n","      <td id=\"T_3dd0a_row27_col0\" class=\"data row27 col0\" >USI</td>\n","      <td id=\"T_3dd0a_row27_col1\" class=\"data row27 col1\" >e28c</td>\n","    </tr>\n","  </tbody>\n","</table>\n"]},"metadata":{}}]},{"cell_type":"code","source":["models()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":676},"id":"yjOEhQRbWKLK","executionInfo":{"status":"ok","timestamp":1704177276799,"user_tz":-540,"elapsed":496,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"4e6b129a-ad9d-4c45-8534-020cefc6ca48"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                     Name  \\\n","ID                                          \n","lr                    Logistic Regression   \n","knn                K Neighbors Classifier   \n","nb                            Naive Bayes   \n","dt               Decision Tree Classifier   \n","svm                   SVM - Linear Kernel   \n","rbfsvm                SVM - Radial Kernel   \n","gpc           Gaussian Process Classifier   \n","mlp                        MLP Classifier   \n","ridge                    Ridge Classifier   \n","rf               Random Forest Classifier   \n","qda       Quadratic Discriminant Analysis   \n","ada                  Ada Boost Classifier   \n","gbc          Gradient Boosting Classifier   \n","lda          Linear Discriminant Analysis   \n","et                 Extra Trees Classifier   \n","xgboost         Extreme Gradient Boosting   \n","lightgbm  Light Gradient Boosting Machine   \n","catboost              CatBoost Classifier   \n","dummy                    Dummy Classifier   \n","\n","                                                  Reference  Turbo  \n","ID                                                                  \n","lr        sklearn.linear_model._logistic.LogisticRegression   True  \n","knn       sklearn.neighbors._classification.KNeighborsCl...   True  \n","nb                           sklearn.naive_bayes.GaussianNB   True  \n","dt             sklearn.tree._classes.DecisionTreeClassifier   True  \n","svm       sklearn.linear_model._stochastic_gradient.SGDC...   True  \n","rbfsvm                             sklearn.svm._classes.SVC  False  \n","gpc       sklearn.gaussian_process._gpc.GaussianProcessC...  False  \n","mlp       sklearn.neural_network._multilayer_perceptron....  False  \n","ridge           sklearn.linear_model._ridge.RidgeClassifier   True  \n","rf          sklearn.ensemble._forest.RandomForestClassifier   True  \n","qda       sklearn.discriminant_analysis.QuadraticDiscrim...   True  \n","ada       sklearn.ensemble._weight_boosting.AdaBoostClas...   True  \n","gbc         sklearn.ensemble._gb.GradientBoostingClassifier   True  \n","lda       sklearn.discriminant_analysis.LinearDiscrimina...   True  \n","et            sklearn.ensemble._forest.ExtraTreesClassifier   True  \n","xgboost                       xgboost.sklearn.XGBClassifier   True  \n","lightgbm                    lightgbm.sklearn.LGBMClassifier   True  \n","catboost                   catboost.core.CatBoostClassifier   True  \n","dummy                         sklearn.dummy.DummyClassifier   True  "],"text/html":["\n","  <div id=\"df-3e500470-e16f-474d-a29c-7317b1cdf773\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Reference</th>\n","      <th>Turbo</th>\n","    </tr>\n","    <tr>\n","      <th>ID</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>lr</th>\n","      <td>Logistic Regression</td>\n","      <td>sklearn.linear_model._logistic.LogisticRegression</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>knn</th>\n","      <td>K Neighbors Classifier</td>\n","      <td>sklearn.neighbors._classification.KNeighborsCl...</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>nb</th>\n","      <td>Naive Bayes</td>\n","      <td>sklearn.naive_bayes.GaussianNB</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>dt</th>\n","      <td>Decision Tree Classifier</td>\n","      <td>sklearn.tree._classes.DecisionTreeClassifier</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>svm</th>\n","      <td>SVM - Linear Kernel</td>\n","      <td>sklearn.linear_model._stochastic_gradient.SGDC...</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>rbfsvm</th>\n","      <td>SVM - Radial Kernel</td>\n","      <td>sklearn.svm._classes.SVC</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>gpc</th>\n","      <td>Gaussian Process Classifier</td>\n","      <td>sklearn.gaussian_process._gpc.GaussianProcessC...</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>mlp</th>\n","      <td>MLP Classifier</td>\n","      <td>sklearn.neural_network._multilayer_perceptron....</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>ridge</th>\n","      <td>Ridge Classifier</td>\n","      <td>sklearn.linear_model._ridge.RidgeClassifier</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>rf</th>\n","      <td>Random Forest Classifier</td>\n","      <td>sklearn.ensemble._forest.RandomForestClassifier</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>qda</th>\n","      <td>Quadratic Discriminant Analysis</td>\n","      <td>sklearn.discriminant_analysis.QuadraticDiscrim...</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>ada</th>\n","      <td>Ada Boost Classifier</td>\n","      <td>sklearn.ensemble._weight_boosting.AdaBoostClas...</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>gbc</th>\n","      <td>Gradient Boosting Classifier</td>\n","      <td>sklearn.ensemble._gb.GradientBoostingClassifier</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>lda</th>\n","      <td>Linear Discriminant Analysis</td>\n","      <td>sklearn.discriminant_analysis.LinearDiscrimina...</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>et</th>\n","      <td>Extra Trees Classifier</td>\n","      <td>sklearn.ensemble._forest.ExtraTreesClassifier</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>xgboost</th>\n","      <td>Extreme Gradient Boosting</td>\n","      <td>xgboost.sklearn.XGBClassifier</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>lightgbm</th>\n","      <td>Light Gradient Boosting Machine</td>\n","      <td>lightgbm.sklearn.LGBMClassifier</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>catboost</th>\n","      <td>CatBoost Classifier</td>\n","      <td>catboost.core.CatBoostClassifier</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>dummy</th>\n","      <td>Dummy Classifier</td>\n","      <td>sklearn.dummy.DummyClassifier</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3e500470-e16f-474d-a29c-7317b1cdf773')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3e500470-e16f-474d-a29c-7317b1cdf773 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3e500470-e16f-474d-a29c-7317b1cdf773');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8dffd1e5-42de-4331-a4fe-be23fd56cea3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8dffd1e5-42de-4331-a4fe-be23fd56cea3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8dffd1e5-42de-4331-a4fe-be23fd56cea3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":178}]},{"cell_type":"code","source":["# F-beta 스코어 계산 함수 정의\n","def fbeta_score(y_true, y_pred, beta):\n","    precision = precision_score(y_true, y_pred)\n","    recall = recall_score(y_true, y_pred)\n","    fbeta = (1 + beta**2) * (precision * recall) / (beta**2 * precision + recall)\n","    return fbeta"],"metadata":{"id":"S059oAjKePHr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def f2_score(y_true, y_pred):\n","    return fbeta_score(y_true, y_pred, beta=2)\n","\n","# F-beta 스코어를 PyCaret에 추가\n","add_metric('f2', 'F2', f2_score, target='pred')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"liUFTKyIeS7M","executionInfo":{"status":"ok","timestamp":1704177276800,"user_tz":-540,"elapsed":8,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"41ac3270-67cb-419b-d8ba-4661bb08a054"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Name                                                                F2\n","Display Name                                                        F2\n","Score Function       <pycaret.internal.metrics.EncodedDecodedLabels...\n","Scorer                                           make_scorer(f2_score)\n","Target                                                            pred\n","Args                                                                {}\n","Greater is Better                                                 True\n","Multiclass                                                        True\n","Custom                                                            True\n","Name: f2, dtype: object"]},"metadata":{},"execution_count":180}]},{"cell_type":"code","source":["# F-beta 스코어 계산 (beta = 0.5)\n","def f05_score(y_true, y_pred):\n","    return fbeta_score(y_true, y_pred, beta=0.5)\n","\n","add_metric('f05', 'F05', f05_score, target='pred')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B_r1pLRTeav7","executionInfo":{"status":"ok","timestamp":1704177276800,"user_tz":-540,"elapsed":6,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"d6e7c16d-8430-40eb-9b8f-8f9d5c357615"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Name                                                               F05\n","Display Name                                                       F05\n","Score Function       <pycaret.internal.metrics.EncodedDecodedLabels...\n","Scorer                                          make_scorer(f05_score)\n","Target                                                            pred\n","Args                                                                {}\n","Greater is Better                                                 True\n","Multiclass                                                        True\n","Custom                                                            True\n","Name: f05, dtype: object"]},"metadata":{},"execution_count":181}]},{"cell_type":"code","source":["get_metrics()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":536},"id":"-FxAlYFuVORJ","executionInfo":{"status":"ok","timestamp":1704158598705,"user_tz":-540,"elapsed":433,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"0b309ebc-4300-45b4-a731-779eaf1da297"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                Name Display Name  \\\n","ID                                  \n","acc         Accuracy     Accuracy   \n","auc              AUC          AUC   \n","recall        Recall       Recall   \n","precision  Precision        Prec.   \n","f1                F1           F1   \n","kappa          Kappa        Kappa   \n","mcc              MCC          MCC   \n","f2                F2           F2   \n","f05              F05          F05   \n","\n","                                              Score Function  \\\n","ID                                                             \n","acc              <function accuracy_score at 0x79803c888790>   \n","auc        <pycaret.internal.metrics.BinaryMulticlassScor...   \n","recall     <pycaret.internal.metrics.BinaryMulticlassScor...   \n","precision  <pycaret.internal.metrics.BinaryMulticlassScor...   \n","f1         <pycaret.internal.metrics.BinaryMulticlassScor...   \n","kappa         <function cohen_kappa_score at 0x79803c8888b0>   \n","mcc           <function matthews_corrcoef at 0x79803c8889d0>   \n","f2         <pycaret.internal.metrics.EncodedDecodedLabels...   \n","f05        <pycaret.internal.metrics.EncodedDecodedLabels...   \n","\n","                                                      Scorer      Target  \\\n","ID                                                                         \n","acc                                                 accuracy        pred   \n","auc        make_scorer(roc_auc_score, needs_proba=True, e...  pred_proba   \n","recall           make_scorer(recall_score, average=weighted)        pred   \n","precision     make_scorer(precision_score, average=weighted)        pred   \n","f1                   make_scorer(f1_score, average=weighted)        pred   \n","kappa                         make_scorer(cohen_kappa_score)        pred   \n","mcc                           make_scorer(matthews_corrcoef)        pred   \n","f2                                     make_scorer(f2_score)        pred   \n","f05                                   make_scorer(f05_score)        pred   \n","\n","                                                    Args  Greater is Better  \\\n","ID                                                                            \n","acc                                                   {}               True   \n","auc        {'average': 'weighted', 'multi_class': 'ovr'}               True   \n","recall                           {'average': 'weighted'}               True   \n","precision                        {'average': 'weighted'}               True   \n","f1                               {'average': 'weighted'}               True   \n","kappa                                                 {}               True   \n","mcc                                                   {}               True   \n","f2                                                    {}               True   \n","f05                                                   {}               True   \n","\n","           Multiclass  Custom  \n","ID                             \n","acc              True   False  \n","auc              True   False  \n","recall           True   False  \n","precision        True   False  \n","f1               True   False  \n","kappa            True   False  \n","mcc              True   False  \n","f2               True    True  \n","f05              True    True  "],"text/html":["\n","  <div id=\"df-2f702ed7-f4aa-4470-8962-894a66713238\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Display Name</th>\n","      <th>Score Function</th>\n","      <th>Scorer</th>\n","      <th>Target</th>\n","      <th>Args</th>\n","      <th>Greater is Better</th>\n","      <th>Multiclass</th>\n","      <th>Custom</th>\n","    </tr>\n","    <tr>\n","      <th>ID</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>acc</th>\n","      <td>Accuracy</td>\n","      <td>Accuracy</td>\n","      <td>&lt;function accuracy_score at 0x79803c888790&gt;</td>\n","      <td>accuracy</td>\n","      <td>pred</td>\n","      <td>{}</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>auc</th>\n","      <td>AUC</td>\n","      <td>AUC</td>\n","      <td>&lt;pycaret.internal.metrics.BinaryMulticlassScor...</td>\n","      <td>make_scorer(roc_auc_score, needs_proba=True, e...</td>\n","      <td>pred_proba</td>\n","      <td>{'average': 'weighted', 'multi_class': 'ovr'}</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>recall</th>\n","      <td>Recall</td>\n","      <td>Recall</td>\n","      <td>&lt;pycaret.internal.metrics.BinaryMulticlassScor...</td>\n","      <td>make_scorer(recall_score, average=weighted)</td>\n","      <td>pred</td>\n","      <td>{'average': 'weighted'}</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>precision</th>\n","      <td>Precision</td>\n","      <td>Prec.</td>\n","      <td>&lt;pycaret.internal.metrics.BinaryMulticlassScor...</td>\n","      <td>make_scorer(precision_score, average=weighted)</td>\n","      <td>pred</td>\n","      <td>{'average': 'weighted'}</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>f1</th>\n","      <td>F1</td>\n","      <td>F1</td>\n","      <td>&lt;pycaret.internal.metrics.BinaryMulticlassScor...</td>\n","      <td>make_scorer(f1_score, average=weighted)</td>\n","      <td>pred</td>\n","      <td>{'average': 'weighted'}</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>kappa</th>\n","      <td>Kappa</td>\n","      <td>Kappa</td>\n","      <td>&lt;function cohen_kappa_score at 0x79803c8888b0&gt;</td>\n","      <td>make_scorer(cohen_kappa_score)</td>\n","      <td>pred</td>\n","      <td>{}</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>mcc</th>\n","      <td>MCC</td>\n","      <td>MCC</td>\n","      <td>&lt;function matthews_corrcoef at 0x79803c8889d0&gt;</td>\n","      <td>make_scorer(matthews_corrcoef)</td>\n","      <td>pred</td>\n","      <td>{}</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>f2</th>\n","      <td>F2</td>\n","      <td>F2</td>\n","      <td>&lt;pycaret.internal.metrics.EncodedDecodedLabels...</td>\n","      <td>make_scorer(f2_score)</td>\n","      <td>pred</td>\n","      <td>{}</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>f05</th>\n","      <td>F05</td>\n","      <td>F05</td>\n","      <td>&lt;pycaret.internal.metrics.EncodedDecodedLabels...</td>\n","      <td>make_scorer(f05_score)</td>\n","      <td>pred</td>\n","      <td>{}</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2f702ed7-f4aa-4470-8962-894a66713238')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2f702ed7-f4aa-4470-8962-894a66713238 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2f702ed7-f4aa-4470-8962-894a66713238');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-62dc14d3-9115-4796-b8c3-9d9fae707217\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-62dc14d3-9115-4796-b8c3-9d9fae707217')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-62dc14d3-9115-4796-b8c3-9d9fae707217 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["best_f2 = compare_models(n_select=5, sort='F1')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":551,"referenced_widgets":["86e689a0e3794ae587e7430ecbe34433","b29164083f87430db5daf5a78e662837","c4b9dd11517c4757aac27b1cc9d020ef","5908569c4eb548bcb83d6967121ab66e","6160cb3392f74254ab4838ac68e773b2","f478ab7541334f98a039f7283600f4c6","692f5ff4de5d4742b480b68d46c6d023","11ace3cf5630483595e8501e9f5dead1","1a83b9c670284d4193f80c5112f2e285","90e95611c8494922a644cabb80374355","819007fc2515444fb981b94012ca3d3a"]},"id":"d518QqDSVOsh","executionInfo":{"status":"ok","timestamp":1704159917825,"user_tz":-540,"elapsed":1274948,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"56dd1fd7-5366-44cb-ecdf-800512594f74"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<pandas.io.formats.style.Styler at 0x7980282f8ee0>"],"text/html":["<style type=\"text/css\">\n","#T_f30ee th {\n","  text-align: left;\n","}\n","#T_f30ee_row0_col0, #T_f30ee_row0_col1, #T_f30ee_row0_col2, #T_f30ee_row0_col3, #T_f30ee_row0_col4, #T_f30ee_row0_col8, #T_f30ee_row0_col9, #T_f30ee_row1_col0, #T_f30ee_row1_col1, #T_f30ee_row1_col2, #T_f30ee_row1_col3, #T_f30ee_row1_col4, #T_f30ee_row1_col5, #T_f30ee_row1_col6, #T_f30ee_row1_col7, #T_f30ee_row1_col8, #T_f30ee_row1_col9, #T_f30ee_row2_col0, #T_f30ee_row2_col1, #T_f30ee_row2_col2, #T_f30ee_row2_col3, #T_f30ee_row2_col4, #T_f30ee_row2_col5, #T_f30ee_row2_col6, #T_f30ee_row2_col7, #T_f30ee_row2_col8, #T_f30ee_row2_col9, #T_f30ee_row3_col0, #T_f30ee_row3_col3, #T_f30ee_row3_col5, #T_f30ee_row3_col6, #T_f30ee_row3_col7, #T_f30ee_row3_col8, #T_f30ee_row4_col0, #T_f30ee_row4_col1, #T_f30ee_row4_col2, #T_f30ee_row4_col3, #T_f30ee_row4_col4, #T_f30ee_row4_col5, #T_f30ee_row4_col6, #T_f30ee_row4_col7, #T_f30ee_row4_col8, #T_f30ee_row4_col9, #T_f30ee_row5_col0, #T_f30ee_row5_col1, #T_f30ee_row5_col2, #T_f30ee_row5_col3, #T_f30ee_row5_col4, #T_f30ee_row5_col5, #T_f30ee_row5_col6, #T_f30ee_row5_col7, #T_f30ee_row5_col9, #T_f30ee_row6_col0, #T_f30ee_row6_col1, #T_f30ee_row6_col2, #T_f30ee_row6_col3, #T_f30ee_row6_col4, #T_f30ee_row6_col5, #T_f30ee_row6_col6, #T_f30ee_row6_col7, #T_f30ee_row6_col8, #T_f30ee_row6_col9, #T_f30ee_row7_col0, #T_f30ee_row7_col1, #T_f30ee_row7_col2, #T_f30ee_row7_col3, #T_f30ee_row7_col4, #T_f30ee_row7_col5, #T_f30ee_row7_col6, #T_f30ee_row7_col7, #T_f30ee_row7_col8, #T_f30ee_row7_col9, #T_f30ee_row8_col0, #T_f30ee_row8_col1, #T_f30ee_row8_col2, #T_f30ee_row8_col3, #T_f30ee_row8_col4, #T_f30ee_row8_col5, #T_f30ee_row8_col6, #T_f30ee_row8_col7, #T_f30ee_row8_col8, #T_f30ee_row8_col9, #T_f30ee_row9_col0, #T_f30ee_row9_col1, #T_f30ee_row9_col2, #T_f30ee_row9_col3, #T_f30ee_row9_col4, #T_f30ee_row9_col5, #T_f30ee_row9_col6, #T_f30ee_row9_col7, #T_f30ee_row9_col8, #T_f30ee_row9_col9, #T_f30ee_row10_col0, #T_f30ee_row10_col1, #T_f30ee_row10_col2, #T_f30ee_row10_col3, #T_f30ee_row10_col4, #T_f30ee_row10_col5, #T_f30ee_row10_col6, #T_f30ee_row10_col7, #T_f30ee_row10_col8, #T_f30ee_row10_col9, #T_f30ee_row11_col0, #T_f30ee_row11_col1, #T_f30ee_row11_col2, #T_f30ee_row11_col3, #T_f30ee_row11_col4, #T_f30ee_row11_col5, #T_f30ee_row11_col6, #T_f30ee_row11_col7, #T_f30ee_row11_col8, #T_f30ee_row11_col9, #T_f30ee_row12_col0, #T_f30ee_row12_col1, #T_f30ee_row12_col2, #T_f30ee_row12_col3, #T_f30ee_row12_col4, #T_f30ee_row12_col5, #T_f30ee_row12_col6, #T_f30ee_row12_col7, #T_f30ee_row12_col8, #T_f30ee_row12_col9, #T_f30ee_row13_col0, #T_f30ee_row13_col1, #T_f30ee_row13_col2, #T_f30ee_row13_col4, #T_f30ee_row13_col5, #T_f30ee_row13_col6, #T_f30ee_row13_col7, #T_f30ee_row13_col8, #T_f30ee_row13_col9, #T_f30ee_row14_col0, #T_f30ee_row14_col1, #T_f30ee_row14_col2, #T_f30ee_row14_col3, #T_f30ee_row14_col4, #T_f30ee_row14_col5, #T_f30ee_row14_col6, #T_f30ee_row14_col7, #T_f30ee_row14_col8, #T_f30ee_row14_col9, #T_f30ee_row15_col0, #T_f30ee_row15_col1, #T_f30ee_row15_col2, #T_f30ee_row15_col3, #T_f30ee_row15_col4, #T_f30ee_row15_col5, #T_f30ee_row15_col6, #T_f30ee_row15_col7, #T_f30ee_row15_col8, #T_f30ee_row15_col9 {\n","  text-align: left;\n","}\n","#T_f30ee_row0_col5, #T_f30ee_row0_col6, #T_f30ee_row0_col7, #T_f30ee_row3_col1, #T_f30ee_row3_col2, #T_f30ee_row3_col4, #T_f30ee_row3_col9, #T_f30ee_row5_col8, #T_f30ee_row13_col3 {\n","  text-align: left;\n","  background-color: yellow;\n","}\n","#T_f30ee_row0_col10, #T_f30ee_row1_col10, #T_f30ee_row2_col10, #T_f30ee_row3_col10, #T_f30ee_row4_col10, #T_f30ee_row5_col10, #T_f30ee_row6_col10, #T_f30ee_row7_col10, #T_f30ee_row8_col10, #T_f30ee_row9_col10, #T_f30ee_row10_col10, #T_f30ee_row11_col10, #T_f30ee_row12_col10, #T_f30ee_row14_col10, #T_f30ee_row15_col10 {\n","  text-align: left;\n","  background-color: lightgrey;\n","}\n","#T_f30ee_row13_col10 {\n","  text-align: left;\n","  background-color: yellow;\n","  background-color: lightgrey;\n","}\n","</style>\n","<table id=\"T_f30ee\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th id=\"T_f30ee_level0_col0\" class=\"col_heading level0 col0\" >Model</th>\n","      <th id=\"T_f30ee_level0_col1\" class=\"col_heading level0 col1\" >Accuracy</th>\n","      <th id=\"T_f30ee_level0_col2\" class=\"col_heading level0 col2\" >AUC</th>\n","      <th id=\"T_f30ee_level0_col3\" class=\"col_heading level0 col3\" >Recall</th>\n","      <th id=\"T_f30ee_level0_col4\" class=\"col_heading level0 col4\" >Prec.</th>\n","      <th id=\"T_f30ee_level0_col5\" class=\"col_heading level0 col5\" >F1</th>\n","      <th id=\"T_f30ee_level0_col6\" class=\"col_heading level0 col6\" >Kappa</th>\n","      <th id=\"T_f30ee_level0_col7\" class=\"col_heading level0 col7\" >MCC</th>\n","      <th id=\"T_f30ee_level0_col8\" class=\"col_heading level0 col8\" >F2</th>\n","      <th id=\"T_f30ee_level0_col9\" class=\"col_heading level0 col9\" >F05</th>\n","      <th id=\"T_f30ee_level0_col10\" class=\"col_heading level0 col10\" >TT (Sec)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_f30ee_level0_row0\" class=\"row_heading level0 row0\" >rf</th>\n","      <td id=\"T_f30ee_row0_col0\" class=\"data row0 col0\" >Random Forest Classifier</td>\n","      <td id=\"T_f30ee_row0_col1\" class=\"data row0 col1\" >0.9071</td>\n","      <td id=\"T_f30ee_row0_col2\" class=\"data row0 col2\" >0.9252</td>\n","      <td id=\"T_f30ee_row0_col3\" class=\"data row0 col3\" >0.5776</td>\n","      <td id=\"T_f30ee_row0_col4\" class=\"data row0 col4\" >0.6348</td>\n","      <td id=\"T_f30ee_row0_col5\" class=\"data row0 col5\" >0.6048</td>\n","      <td id=\"T_f30ee_row0_col6\" class=\"data row0 col6\" >0.5523</td>\n","      <td id=\"T_f30ee_row0_col7\" class=\"data row0 col7\" >0.5532</td>\n","      <td id=\"T_f30ee_row0_col8\" class=\"data row0 col8\" >0.5882</td>\n","      <td id=\"T_f30ee_row0_col9\" class=\"data row0 col9\" >0.6224</td>\n","      <td id=\"T_f30ee_row0_col10\" class=\"data row0 col10\" >7.4560</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_f30ee_level0_row1\" class=\"row_heading level0 row1\" >lightgbm</th>\n","      <td id=\"T_f30ee_row1_col0\" class=\"data row1 col0\" >Light Gradient Boosting Machine</td>\n","      <td id=\"T_f30ee_row1_col1\" class=\"data row1 col1\" >0.9030</td>\n","      <td id=\"T_f30ee_row1_col2\" class=\"data row1 col2\" >0.9252</td>\n","      <td id=\"T_f30ee_row1_col3\" class=\"data row1 col3\" >0.5966</td>\n","      <td id=\"T_f30ee_row1_col4\" class=\"data row1 col4\" >0.6078</td>\n","      <td id=\"T_f30ee_row1_col5\" class=\"data row1 col5\" >0.6021</td>\n","      <td id=\"T_f30ee_row1_col6\" class=\"data row1 col6\" >0.5468</td>\n","      <td id=\"T_f30ee_row1_col7\" class=\"data row1 col7\" >0.5469</td>\n","      <td id=\"T_f30ee_row1_col8\" class=\"data row1 col8\" >0.5987</td>\n","      <td id=\"T_f30ee_row1_col9\" class=\"data row1 col9\" >0.6055</td>\n","      <td id=\"T_f30ee_row1_col10\" class=\"data row1 col10\" >148.3220</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_f30ee_level0_row2\" class=\"row_heading level0 row2\" >xgboost</th>\n","      <td id=\"T_f30ee_row2_col0\" class=\"data row2 col0\" >Extreme Gradient Boosting</td>\n","      <td id=\"T_f30ee_row2_col1\" class=\"data row2 col1\" >0.9061</td>\n","      <td id=\"T_f30ee_row2_col2\" class=\"data row2 col2\" >0.9253</td>\n","      <td id=\"T_f30ee_row2_col3\" class=\"data row2 col3\" >0.5700</td>\n","      <td id=\"T_f30ee_row2_col4\" class=\"data row2 col4\" >0.6310</td>\n","      <td id=\"T_f30ee_row2_col5\" class=\"data row2 col5\" >0.5989</td>\n","      <td id=\"T_f30ee_row2_col6\" class=\"data row2 col6\" >0.5459</td>\n","      <td id=\"T_f30ee_row2_col7\" class=\"data row2 col7\" >0.5468</td>\n","      <td id=\"T_f30ee_row2_col8\" class=\"data row2 col8\" >0.5812</td>\n","      <td id=\"T_f30ee_row2_col9\" class=\"data row2 col9\" >0.6177</td>\n","      <td id=\"T_f30ee_row2_col10\" class=\"data row2 col10\" >2.0180</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_f30ee_level0_row3\" class=\"row_heading level0 row3\" >catboost</th>\n","      <td id=\"T_f30ee_row3_col0\" class=\"data row3 col0\" >CatBoost Classifier</td>\n","      <td id=\"T_f30ee_row3_col1\" class=\"data row3 col1\" >0.9100</td>\n","      <td id=\"T_f30ee_row3_col2\" class=\"data row3 col2\" >0.9285</td>\n","      <td id=\"T_f30ee_row3_col3\" class=\"data row3 col3\" >0.5278</td>\n","      <td id=\"T_f30ee_row3_col4\" class=\"data row3 col4\" >0.6709</td>\n","      <td id=\"T_f30ee_row3_col5\" class=\"data row3 col5\" >0.5908</td>\n","      <td id=\"T_f30ee_row3_col6\" class=\"data row3 col6\" >0.5411</td>\n","      <td id=\"T_f30ee_row3_col7\" class=\"data row3 col7\" >0.5460</td>\n","      <td id=\"T_f30ee_row3_col8\" class=\"data row3 col8\" >0.5513</td>\n","      <td id=\"T_f30ee_row3_col9\" class=\"data row3 col9\" >0.6364</td>\n","      <td id=\"T_f30ee_row3_col10\" class=\"data row3 col10\" >32.3840</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_f30ee_level0_row4\" class=\"row_heading level0 row4\" >et</th>\n","      <td id=\"T_f30ee_row4_col0\" class=\"data row4 col0\" >Extra Trees Classifier</td>\n","      <td id=\"T_f30ee_row4_col1\" class=\"data row4 col1\" >0.9064</td>\n","      <td id=\"T_f30ee_row4_col2\" class=\"data row4 col2\" >0.9216</td>\n","      <td id=\"T_f30ee_row4_col3\" class=\"data row4 col3\" >0.5296</td>\n","      <td id=\"T_f30ee_row4_col4\" class=\"data row4 col4\" >0.6457</td>\n","      <td id=\"T_f30ee_row4_col5\" class=\"data row4 col5\" >0.5819</td>\n","      <td id=\"T_f30ee_row4_col6\" class=\"data row4 col6\" >0.5298</td>\n","      <td id=\"T_f30ee_row4_col7\" class=\"data row4 col7\" >0.5331</td>\n","      <td id=\"T_f30ee_row4_col8\" class=\"data row4 col8\" >0.5494</td>\n","      <td id=\"T_f30ee_row4_col9\" class=\"data row4 col9\" >0.6186</td>\n","      <td id=\"T_f30ee_row4_col10\" class=\"data row4 col10\" >6.7940</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_f30ee_level0_row5\" class=\"row_heading level0 row5\" >gbc</th>\n","      <td id=\"T_f30ee_row5_col0\" class=\"data row5 col0\" >Gradient Boosting Classifier</td>\n","      <td id=\"T_f30ee_row5_col1\" class=\"data row5 col1\" >0.8458</td>\n","      <td id=\"T_f30ee_row5_col2\" class=\"data row5 col2\" >0.9082</td>\n","      <td id=\"T_f30ee_row5_col3\" class=\"data row5 col3\" >0.7897</td>\n","      <td id=\"T_f30ee_row5_col4\" class=\"data row5 col4\" >0.4309</td>\n","      <td id=\"T_f30ee_row5_col5\" class=\"data row5 col5\" >0.5575</td>\n","      <td id=\"T_f30ee_row5_col6\" class=\"data row5 col6\" >0.4738</td>\n","      <td id=\"T_f30ee_row5_col7\" class=\"data row5 col7\" >0.5057</td>\n","      <td id=\"T_f30ee_row5_col8\" class=\"data row5 col8\" >0.6769</td>\n","      <td id=\"T_f30ee_row5_col9\" class=\"data row5 col9\" >0.4740</td>\n","      <td id=\"T_f30ee_row5_col10\" class=\"data row5 col10\" >18.8640</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_f30ee_level0_row6\" class=\"row_heading level0 row6\" >knn</th>\n","      <td id=\"T_f30ee_row6_col0\" class=\"data row6 col0\" >K Neighbors Classifier</td>\n","      <td id=\"T_f30ee_row6_col1\" class=\"data row6 col1\" >0.8607</td>\n","      <td id=\"T_f30ee_row6_col2\" class=\"data row6 col2\" >0.8600</td>\n","      <td id=\"T_f30ee_row6_col3\" class=\"data row6 col3\" >0.6894</td>\n","      <td id=\"T_f30ee_row6_col4\" class=\"data row6 col4\" >0.4563</td>\n","      <td id=\"T_f30ee_row6_col5\" class=\"data row6 col5\" >0.5491</td>\n","      <td id=\"T_f30ee_row6_col6\" class=\"data row6 col6\" >0.4707</td>\n","      <td id=\"T_f30ee_row6_col7\" class=\"data row6 col7\" >0.4848</td>\n","      <td id=\"T_f30ee_row6_col8\" class=\"data row6 col8\" >0.6254</td>\n","      <td id=\"T_f30ee_row6_col9\" class=\"data row6 col9\" >0.4893</td>\n","      <td id=\"T_f30ee_row6_col10\" class=\"data row6 col10\" >7.3860</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_f30ee_level0_row7\" class=\"row_heading level0 row7\" >ada</th>\n","      <td id=\"T_f30ee_row7_col0\" class=\"data row7 col0\" >Ada Boost Classifier</td>\n","      <td id=\"T_f30ee_row7_col1\" class=\"data row7 col1\" >0.8378</td>\n","      <td id=\"T_f30ee_row7_col2\" class=\"data row7 col2\" >0.8949</td>\n","      <td id=\"T_f30ee_row7_col3\" class=\"data row7 col3\" >0.7482</td>\n","      <td id=\"T_f30ee_row7_col4\" class=\"data row7 col4\" >0.4126</td>\n","      <td id=\"T_f30ee_row7_col5\" class=\"data row7 col5\" >0.5317</td>\n","      <td id=\"T_f30ee_row7_col6\" class=\"data row7 col6\" >0.4434</td>\n","      <td id=\"T_f30ee_row7_col7\" class=\"data row7 col7\" >0.4723</td>\n","      <td id=\"T_f30ee_row7_col8\" class=\"data row7 col8\" >0.6433</td>\n","      <td id=\"T_f30ee_row7_col9\" class=\"data row7 col9\" >0.4532</td>\n","      <td id=\"T_f30ee_row7_col10\" class=\"data row7 col10\" >4.8340</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_f30ee_level0_row8\" class=\"row_heading level0 row8\" >dt</th>\n","      <td id=\"T_f30ee_row8_col0\" class=\"data row8 col0\" >Decision Tree Classifier</td>\n","      <td id=\"T_f30ee_row8_col1\" class=\"data row8 col1\" >0.8695</td>\n","      <td id=\"T_f30ee_row8_col2\" class=\"data row8 col2\" >0.7234</td>\n","      <td id=\"T_f30ee_row8_col3\" class=\"data row8 col3\" >0.5297</td>\n","      <td id=\"T_f30ee_row8_col4\" class=\"data row8 col4\" >0.4728</td>\n","      <td id=\"T_f30ee_row8_col5\" class=\"data row8 col5\" >0.4997</td>\n","      <td id=\"T_f30ee_row8_col6\" class=\"data row8 col6\" >0.4249</td>\n","      <td id=\"T_f30ee_row8_col7\" class=\"data row8 col7\" >0.4258</td>\n","      <td id=\"T_f30ee_row8_col8\" class=\"data row8 col8\" >0.5173</td>\n","      <td id=\"T_f30ee_row8_col9\" class=\"data row8 col9\" >0.4832</td>\n","      <td id=\"T_f30ee_row8_col10\" class=\"data row8 col10\" >1.6760</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_f30ee_level0_row9\" class=\"row_heading level0 row9\" >lr</th>\n","      <td id=\"T_f30ee_row9_col0\" class=\"data row9 col0\" >Logistic Regression</td>\n","      <td id=\"T_f30ee_row9_col1\" class=\"data row9 col1\" >0.7865</td>\n","      <td id=\"T_f30ee_row9_col2\" class=\"data row9 col2\" >0.8910</td>\n","      <td id=\"T_f30ee_row9_col3\" class=\"data row9 col3\" >0.8445</td>\n","      <td id=\"T_f30ee_row9_col4\" class=\"data row9 col4\" >0.3483</td>\n","      <td id=\"T_f30ee_row9_col5\" class=\"data row9 col5\" >0.4932</td>\n","      <td id=\"T_f30ee_row9_col6\" class=\"data row9 col6\" >0.3863</td>\n","      <td id=\"T_f30ee_row9_col7\" class=\"data row9 col7\" >0.4472</td>\n","      <td id=\"T_f30ee_row9_col8\" class=\"data row9 col8\" >0.6572</td>\n","      <td id=\"T_f30ee_row9_col9\" class=\"data row9 col9\" >0.3947</td>\n","      <td id=\"T_f30ee_row9_col10\" class=\"data row9 col10\" >1.5760</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_f30ee_level0_row10\" class=\"row_heading level0 row10\" >svm</th>\n","      <td id=\"T_f30ee_row10_col0\" class=\"data row10 col0\" >SVM - Linear Kernel</td>\n","      <td id=\"T_f30ee_row10_col1\" class=\"data row10 col1\" >0.7781</td>\n","      <td id=\"T_f30ee_row10_col2\" class=\"data row10 col2\" >0.0000</td>\n","      <td id=\"T_f30ee_row10_col3\" class=\"data row10 col3\" >0.8401</td>\n","      <td id=\"T_f30ee_row10_col4\" class=\"data row10 col4\" >0.3382</td>\n","      <td id=\"T_f30ee_row10_col5\" class=\"data row10 col5\" >0.4822</td>\n","      <td id=\"T_f30ee_row10_col6\" class=\"data row10 col6\" >0.3721</td>\n","      <td id=\"T_f30ee_row10_col7\" class=\"data row10 col7\" >0.4346</td>\n","      <td id=\"T_f30ee_row10_col8\" class=\"data row10 col8\" >0.6477</td>\n","      <td id=\"T_f30ee_row10_col9\" class=\"data row10 col9\" >0.3841</td>\n","      <td id=\"T_f30ee_row10_col10\" class=\"data row10 col10\" >1.2080</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_f30ee_level0_row11\" class=\"row_heading level0 row11\" >ridge</th>\n","      <td id=\"T_f30ee_row11_col0\" class=\"data row11 col0\" >Ridge Classifier</td>\n","      <td id=\"T_f30ee_row11_col1\" class=\"data row11 col1\" >0.7721</td>\n","      <td id=\"T_f30ee_row11_col2\" class=\"data row11 col2\" >0.0000</td>\n","      <td id=\"T_f30ee_row11_col3\" class=\"data row11 col3\" >0.8507</td>\n","      <td id=\"T_f30ee_row11_col4\" class=\"data row11 col4\" >0.3332</td>\n","      <td id=\"T_f30ee_row11_col5\" class=\"data row11 col5\" >0.4788</td>\n","      <td id=\"T_f30ee_row11_col6\" class=\"data row11 col6\" >0.3669</td>\n","      <td id=\"T_f30ee_row11_col7\" class=\"data row11 col7\" >0.4330</td>\n","      <td id=\"T_f30ee_row11_col8\" class=\"data row11 col8\" >0.6490</td>\n","      <td id=\"T_f30ee_row11_col9\" class=\"data row11 col9\" >0.3793</td>\n","      <td id=\"T_f30ee_row11_col10\" class=\"data row11 col10\" >0.5840</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_f30ee_level0_row12\" class=\"row_heading level0 row12\" >lda</th>\n","      <td id=\"T_f30ee_row12_col0\" class=\"data row12 col0\" >Linear Discriminant Analysis</td>\n","      <td id=\"T_f30ee_row12_col1\" class=\"data row12 col1\" >0.7721</td>\n","      <td id=\"T_f30ee_row12_col2\" class=\"data row12 col2\" >0.8818</td>\n","      <td id=\"T_f30ee_row12_col3\" class=\"data row12 col3\" >0.8507</td>\n","      <td id=\"T_f30ee_row12_col4\" class=\"data row12 col4\" >0.3332</td>\n","      <td id=\"T_f30ee_row12_col5\" class=\"data row12 col5\" >0.4788</td>\n","      <td id=\"T_f30ee_row12_col6\" class=\"data row12 col6\" >0.3669</td>\n","      <td id=\"T_f30ee_row12_col7\" class=\"data row12 col7\" >0.4330</td>\n","      <td id=\"T_f30ee_row12_col8\" class=\"data row12 col8\" >0.6490</td>\n","      <td id=\"T_f30ee_row12_col9\" class=\"data row12 col9\" >0.3793</td>\n","      <td id=\"T_f30ee_row12_col10\" class=\"data row12 col10\" >1.7000</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_f30ee_level0_row13\" class=\"row_heading level0 row13\" >nb</th>\n","      <td id=\"T_f30ee_row13_col0\" class=\"data row13 col0\" >Naive Bayes</td>\n","      <td id=\"T_f30ee_row13_col1\" class=\"data row13 col1\" >0.5566</td>\n","      <td id=\"T_f30ee_row13_col2\" class=\"data row13 col2\" >0.7399</td>\n","      <td id=\"T_f30ee_row13_col3\" class=\"data row13 col3\" >0.9092</td>\n","      <td id=\"T_f30ee_row13_col4\" class=\"data row13 col4\" >0.2057</td>\n","      <td id=\"T_f30ee_row13_col5\" class=\"data row13 col5\" >0.3355</td>\n","      <td id=\"T_f30ee_row13_col6\" class=\"data row13 col6\" >0.1687</td>\n","      <td id=\"T_f30ee_row13_col7\" class=\"data row13 col7\" >0.2747</td>\n","      <td id=\"T_f30ee_row13_col8\" class=\"data row13 col8\" >0.5399</td>\n","      <td id=\"T_f30ee_row13_col9\" class=\"data row13 col9\" >0.2434</td>\n","      <td id=\"T_f30ee_row13_col10\" class=\"data row13 col10\" >0.5620</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_f30ee_level0_row14\" class=\"row_heading level0 row14\" >qda</th>\n","      <td id=\"T_f30ee_row14_col0\" class=\"data row14 col0\" >Quadratic Discriminant Analysis</td>\n","      <td id=\"T_f30ee_row14_col1\" class=\"data row14 col1\" >0.5541</td>\n","      <td id=\"T_f30ee_row14_col2\" class=\"data row14 col2\" >0.7134</td>\n","      <td id=\"T_f30ee_row14_col3\" class=\"data row14 col3\" >0.8904</td>\n","      <td id=\"T_f30ee_row14_col4\" class=\"data row14 col4\" >0.2025</td>\n","      <td id=\"T_f30ee_row14_col5\" class=\"data row14 col5\" >0.3298</td>\n","      <td id=\"T_f30ee_row14_col6\" class=\"data row14 col6\" >0.1618</td>\n","      <td id=\"T_f30ee_row14_col7\" class=\"data row14 col7\" >0.2624</td>\n","      <td id=\"T_f30ee_row14_col8\" class=\"data row14 col8\" >0.5298</td>\n","      <td id=\"T_f30ee_row14_col9\" class=\"data row14 col9\" >0.2395</td>\n","      <td id=\"T_f30ee_row14_col10\" class=\"data row14 col10\" >1.3400</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_f30ee_level0_row15\" class=\"row_heading level0 row15\" >dummy</th>\n","      <td id=\"T_f30ee_row15_col0\" class=\"data row15 col0\" >Dummy Classifier</td>\n","      <td id=\"T_f30ee_row15_col1\" class=\"data row15 col1\" >0.8770</td>\n","      <td id=\"T_f30ee_row15_col2\" class=\"data row15 col2\" >0.5000</td>\n","      <td id=\"T_f30ee_row15_col3\" class=\"data row15 col3\" >0.0000</td>\n","      <td id=\"T_f30ee_row15_col4\" class=\"data row15 col4\" >0.0000</td>\n","      <td id=\"T_f30ee_row15_col5\" class=\"data row15 col5\" >0.0000</td>\n","      <td id=\"T_f30ee_row15_col6\" class=\"data row15 col6\" >0.0000</td>\n","      <td id=\"T_f30ee_row15_col7\" class=\"data row15 col7\" >0.0000</td>\n","      <td id=\"T_f30ee_row15_col8\" class=\"data row15 col8\" >nan</td>\n","      <td id=\"T_f30ee_row15_col9\" class=\"data row15 col9\" >nan</td>\n","      <td id=\"T_f30ee_row15_col10\" class=\"data row15 col10\" >0.9800</td>\n","    </tr>\n","  </tbody>\n","</table>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Processing:   0%|          | 0/73 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"86e689a0e3794ae587e7430ecbe34433"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"}}}}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}}]},{"cell_type":"code","source":["best_f2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YmseKOYKVn0R","executionInfo":{"status":"ok","timestamp":1704159917825,"user_tz":-540,"elapsed":8,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"7a6a3bc5-2944-49c2-ebf9-aaf3763a85c9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,\n","                        criterion='gini', max_depth=None, max_features='sqrt',\n","                        max_leaf_nodes=None, max_samples=None,\n","                        min_impurity_decrease=0.0, min_samples_leaf=1,\n","                        min_samples_split=2, min_weight_fraction_leaf=0.0,\n","                        n_estimators=100, n_jobs=-1, oob_score=False,\n","                        random_state=100, verbose=0, warm_start=False),\n"," LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,\n","                importance_type='split', learning_rate=0.1, max_depth=-1,\n","                min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,\n","                n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,\n","                random_state=100, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,\n","                subsample_for_bin=200000, subsample_freq=0),\n"," XGBClassifier(base_score=None, booster='gbtree', callbacks=None,\n","               colsample_bylevel=None, colsample_bynode=None,\n","               colsample_bytree=None, device='cpu', early_stopping_rounds=None,\n","               enable_categorical=False, eval_metric=None, feature_types=None,\n","               gamma=None, grow_policy=None, importance_type=None,\n","               interaction_constraints=None, learning_rate=None, max_bin=None,\n","               max_cat_threshold=None, max_cat_to_onehot=None,\n","               max_delta_step=None, max_depth=None, max_leaves=None,\n","               min_child_weight=None, missing=nan, monotone_constraints=None,\n","               multi_strategy=None, n_estimators=None, n_jobs=-1,\n","               num_parallel_tree=None, objective='binary:logistic', ...),\n"," <catboost.core.CatBoostClassifier at 0x7980257d9e10>,\n"," ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,\n","                      criterion='gini', max_depth=None, max_features='sqrt',\n","                      max_leaf_nodes=None, max_samples=None,\n","                      min_impurity_decrease=0.0, min_samples_leaf=1,\n","                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n","                      n_estimators=100, n_jobs=-1, oob_score=False,\n","                      random_state=100, verbose=0, warm_start=False)]"]},"metadata":{},"execution_count":70}]},{"cell_type":"markdown","source":["### 3-4) RandomForest모델로 튜닝"],"metadata":{"id":"45jZtosATG0n"}},{"cell_type":"code","source":["rf = create_model('rf')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300,"referenced_widgets":["e65a940ea63d45af965c10cca5994aca","cc5bd3de222f4362a2cc77c3a8819536","0b802c9f2f2d451cbb404b325e7cca84","203a707caca243be841b3a711bd1eb60","e6e85cf016aa41a59623fb4b324ed62b","70fbe60827c94c4691d9cbb692209adf","edd5856a4c594cafad127e7940180264","bca4b6f88a9149e185a14bb588c45167","de9ee92887dc44e5ade663ceee6cd927","f8a3e7fa518b4537b024e49d5bca050a","e95d6d1e35484a1cae751510be8bde9d"]},"id":"ocJG6LL2Ivv6","executionInfo":{"status":"ok","timestamp":1704159970706,"user_tz":-540,"elapsed":52886,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"8fce8617-b5b1-40f3-8e2c-ac570ab1c20b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<pandas.io.formats.style.Styler at 0x7980257dbbe0>"],"text/html":["<style type=\"text/css\">\n","#T_8ce84_row5_col0, #T_8ce84_row5_col1, #T_8ce84_row5_col2, #T_8ce84_row5_col3, #T_8ce84_row5_col4, #T_8ce84_row5_col5, #T_8ce84_row5_col6, #T_8ce84_row5_col7, #T_8ce84_row5_col8 {\n","  background: yellow;\n","}\n","</style>\n","<table id=\"T_8ce84\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th id=\"T_8ce84_level0_col0\" class=\"col_heading level0 col0\" >Accuracy</th>\n","      <th id=\"T_8ce84_level0_col1\" class=\"col_heading level0 col1\" >AUC</th>\n","      <th id=\"T_8ce84_level0_col2\" class=\"col_heading level0 col2\" >Recall</th>\n","      <th id=\"T_8ce84_level0_col3\" class=\"col_heading level0 col3\" >Prec.</th>\n","      <th id=\"T_8ce84_level0_col4\" class=\"col_heading level0 col4\" >F1</th>\n","      <th id=\"T_8ce84_level0_col5\" class=\"col_heading level0 col5\" >Kappa</th>\n","      <th id=\"T_8ce84_level0_col6\" class=\"col_heading level0 col6\" >MCC</th>\n","      <th id=\"T_8ce84_level0_col7\" class=\"col_heading level0 col7\" >F2</th>\n","      <th id=\"T_8ce84_level0_col8\" class=\"col_heading level0 col8\" >F05</th>\n","    </tr>\n","    <tr>\n","      <th class=\"index_name level0\" >Fold</th>\n","      <th class=\"blank col0\" >&nbsp;</th>\n","      <th class=\"blank col1\" >&nbsp;</th>\n","      <th class=\"blank col2\" >&nbsp;</th>\n","      <th class=\"blank col3\" >&nbsp;</th>\n","      <th class=\"blank col4\" >&nbsp;</th>\n","      <th class=\"blank col5\" >&nbsp;</th>\n","      <th class=\"blank col6\" >&nbsp;</th>\n","      <th class=\"blank col7\" >&nbsp;</th>\n","      <th class=\"blank col8\" >&nbsp;</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_8ce84_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n","      <td id=\"T_8ce84_row0_col0\" class=\"data row0 col0\" >0.9055</td>\n","      <td id=\"T_8ce84_row0_col1\" class=\"data row0 col1\" >0.9264</td>\n","      <td id=\"T_8ce84_row0_col2\" class=\"data row0 col2\" >0.5878</td>\n","      <td id=\"T_8ce84_row0_col3\" class=\"data row0 col3\" >0.6232</td>\n","      <td id=\"T_8ce84_row0_col4\" class=\"data row0 col4\" >0.6050</td>\n","      <td id=\"T_8ce84_row0_col5\" class=\"data row0 col5\" >0.5514</td>\n","      <td id=\"T_8ce84_row0_col6\" class=\"data row0 col6\" >0.5517</td>\n","      <td id=\"T_8ce84_row0_col7\" class=\"data row0 col7\" >0.5946</td>\n","      <td id=\"T_8ce84_row0_col8\" class=\"data row0 col8\" >0.6158</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_8ce84_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n","      <td id=\"T_8ce84_row1_col0\" class=\"data row1 col0\" >0.9032</td>\n","      <td id=\"T_8ce84_row1_col1\" class=\"data row1 col1\" >0.9249</td>\n","      <td id=\"T_8ce84_row1_col2\" class=\"data row1 col2\" >0.5615</td>\n","      <td id=\"T_8ce84_row1_col3\" class=\"data row1 col3\" >0.6175</td>\n","      <td id=\"T_8ce84_row1_col4\" class=\"data row1 col4\" >0.5882</td>\n","      <td id=\"T_8ce84_row1_col5\" class=\"data row1 col5\" >0.5335</td>\n","      <td id=\"T_8ce84_row1_col6\" class=\"data row1 col6\" >0.5343</td>\n","      <td id=\"T_8ce84_row1_col7\" class=\"data row1 col7\" >0.5719</td>\n","      <td id=\"T_8ce84_row1_col8\" class=\"data row1 col8\" >0.6054</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_8ce84_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n","      <td id=\"T_8ce84_row2_col0\" class=\"data row2 col0\" >0.9118</td>\n","      <td id=\"T_8ce84_row2_col1\" class=\"data row2 col1\" >0.9284</td>\n","      <td id=\"T_8ce84_row2_col2\" class=\"data row2 col2\" >0.5952</td>\n","      <td id=\"T_8ce84_row2_col3\" class=\"data row2 col3\" >0.6560</td>\n","      <td id=\"T_8ce84_row2_col4\" class=\"data row2 col4\" >0.6241</td>\n","      <td id=\"T_8ce84_row2_col5\" class=\"data row2 col5\" >0.5743</td>\n","      <td id=\"T_8ce84_row2_col6\" class=\"data row2 col6\" >0.5752</td>\n","      <td id=\"T_8ce84_row2_col7\" class=\"data row2 col7\" >0.6064</td>\n","      <td id=\"T_8ce84_row2_col8\" class=\"data row2 col8\" >0.6428</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_8ce84_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n","      <td id=\"T_8ce84_row3_col0\" class=\"data row3 col0\" >0.9089</td>\n","      <td id=\"T_8ce84_row3_col1\" class=\"data row3 col1\" >0.9241</td>\n","      <td id=\"T_8ce84_row3_col2\" class=\"data row3 col2\" >0.5779</td>\n","      <td id=\"T_8ce84_row3_col3\" class=\"data row3 col3\" >0.6448</td>\n","      <td id=\"T_8ce84_row3_col4\" class=\"data row3 col4\" >0.6095</td>\n","      <td id=\"T_8ce84_row3_col5\" class=\"data row3 col5\" >0.5581</td>\n","      <td id=\"T_8ce84_row3_col6\" class=\"data row3 col6\" >0.5592</td>\n","      <td id=\"T_8ce84_row3_col7\" class=\"data row3 col7\" >0.5901</td>\n","      <td id=\"T_8ce84_row3_col8\" class=\"data row3 col8\" >0.6302</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_8ce84_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n","      <td id=\"T_8ce84_row4_col0\" class=\"data row4 col0\" >0.9061</td>\n","      <td id=\"T_8ce84_row4_col1\" class=\"data row4 col1\" >0.9224</td>\n","      <td id=\"T_8ce84_row4_col2\" class=\"data row4 col2\" >0.5657</td>\n","      <td id=\"T_8ce84_row4_col3\" class=\"data row4 col3\" >0.6326</td>\n","      <td id=\"T_8ce84_row4_col4\" class=\"data row4 col4\" >0.5973</td>\n","      <td id=\"T_8ce84_row4_col5\" class=\"data row4 col5\" >0.5444</td>\n","      <td id=\"T_8ce84_row4_col6\" class=\"data row4 col6\" >0.5454</td>\n","      <td id=\"T_8ce84_row4_col7\" class=\"data row4 col7\" >0.5779</td>\n","      <td id=\"T_8ce84_row4_col8\" class=\"data row4 col8\" >0.6180</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_8ce84_level0_row5\" class=\"row_heading level0 row5\" >Mean</th>\n","      <td id=\"T_8ce84_row5_col0\" class=\"data row5 col0\" >0.9071</td>\n","      <td id=\"T_8ce84_row5_col1\" class=\"data row5 col1\" >0.9252</td>\n","      <td id=\"T_8ce84_row5_col2\" class=\"data row5 col2\" >0.5776</td>\n","      <td id=\"T_8ce84_row5_col3\" class=\"data row5 col3\" >0.6348</td>\n","      <td id=\"T_8ce84_row5_col4\" class=\"data row5 col4\" >0.6048</td>\n","      <td id=\"T_8ce84_row5_col5\" class=\"data row5 col5\" >0.5523</td>\n","      <td id=\"T_8ce84_row5_col6\" class=\"data row5 col6\" >0.5532</td>\n","      <td id=\"T_8ce84_row5_col7\" class=\"data row5 col7\" >0.5882</td>\n","      <td id=\"T_8ce84_row5_col8\" class=\"data row5 col8\" >0.6224</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_8ce84_level0_row6\" class=\"row_heading level0 row6\" >Std</th>\n","      <td id=\"T_8ce84_row6_col0\" class=\"data row6 col0\" >0.0030</td>\n","      <td id=\"T_8ce84_row6_col1\" class=\"data row6 col1\" >0.0020</td>\n","      <td id=\"T_8ce84_row6_col2\" class=\"data row6 col2\" >0.0127</td>\n","      <td id=\"T_8ce84_row6_col3\" class=\"data row6 col3\" >0.0141</td>\n","      <td id=\"T_8ce84_row6_col4\" class=\"data row6 col4\" >0.0121</td>\n","      <td id=\"T_8ce84_row6_col5\" class=\"data row6 col5\" >0.0137</td>\n","      <td id=\"T_8ce84_row6_col6\" class=\"data row6 col6\" >0.0137</td>\n","      <td id=\"T_8ce84_row6_col7\" class=\"data row6 col7\" >0.0122</td>\n","      <td id=\"T_8ce84_row6_col8\" class=\"data row6 col8\" >0.0129</td>\n","    </tr>\n","  </tbody>\n","</table>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Processing:   0%|          | 0/4 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e65a940ea63d45af965c10cca5994aca"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"}}}}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}}]},{"cell_type":"code","source":["np.linspace(0.1, 0.9, 10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oDi1APEFSdFB","executionInfo":{"status":"ok","timestamp":1704159970706,"user_tz":-540,"elapsed":21,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"94d44a4b-86bd-4541-fce3-3a6482ddeb3d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.1       , 0.18888889, 0.27777778, 0.36666667, 0.45555556,\n","       0.54444444, 0.63333333, 0.72222222, 0.81111111, 0.9       ])"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["# 파라미터 설정 예시\n","tuned_model = tune_model(rf, custom_grid= None, optimize = 'F1', fold=3, n_iter=50)\n","\n","# 최적 파라미터 확인\n","best_params = tuned_model.get_params()\n","\n","# 최적 파라미터 출력\n","print(best_params)\n","\n","'''\n","Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).\n","{'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None,\n"," 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2,\n"," 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 100, 'verbose': 0, 'warm_start': False}\n"," '''"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":190,"referenced_widgets":["a1fe285d9a314ad0b44492e9cff88cd1","6e7e9c34e12141d783f966ae6780eb92","a8514ec00eea41399ec79b567aff2fe0","95b984d1d051445a8ca6228d6157e270","193a64c0538f4ed3974b0137b1c2f174","c58a21694cab470a996baf8d217a5454","d1727061f4844999bc715e2b39fa6c53","751b121397e34e4abe2be344438edcd8","3247c20f647849bf88278ef20a243044","a5c5135968564bf8be5bba2e0e45f85c","1dd7b1d8544e416cb2c9552e78a5be09"]},"id":"lu0FDdiXWzFd","outputId":"0c698a55-2ca4-4fe0-f970-6c901baec659"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["                                                                        \n","                                                                        \n","Initiated  . . . . . . . . . . . . . . . . . .                  01:45:53\n","Status     . . . . . . . . . . . . . . . . . .           Fitting 3 Folds\n","Estimator  . . . . . . . . . . . . . . . . . .  Random Forest Classifier"],"text/html":["\n","  <div id=\"df-c044b84b-6781-4661-a2b5-6b64f4afd582\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","    <tr>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Initiated</th>\n","      <td>. . . . . . . . . . . . . . . . . .</td>\n","      <td>01:45:53</td>\n","    </tr>\n","    <tr>\n","      <th>Status</th>\n","      <td>. . . . . . . . . . . . . . . . . .</td>\n","      <td>Fitting 3 Folds</td>\n","    </tr>\n","    <tr>\n","      <th>Estimator</th>\n","      <td>. . . . . . . . . . . . . . . . . .</td>\n","      <td>Random Forest Classifier</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c044b84b-6781-4661-a2b5-6b64f4afd582')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c044b84b-6781-4661-a2b5-6b64f4afd582 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c044b84b-6781-4661-a2b5-6b64f4afd582');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b6e1666c-cdee-4321-bcf4-bc4ab239270b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b6e1666c-cdee-4321-bcf4-bc4ab239270b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b6e1666c-cdee-4321-bcf4-bc4ab239270b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Processing:   0%|          | 0/7 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a1fe285d9a314ad0b44492e9cff88cd1"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"}}}}},{"output_type":"stream","name":"stdout","text":["Fitting 3 folds for each of 50 candidates, totalling 150 fits\n"]}]},{"cell_type":"code","source":["# default model\n","print(rf)\n","\n","# tuned model\n","print(tuned_model)"],"metadata":{"id":"bqcyxRwVwtRL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 파라미터 설정 예시\n","tuned_model2 = tune_model(rf, optimize='F1')\n","\n","# 최적 파라미터 확인\n","best_params2 = tuned_model2.get_params()\n","\n","# 최적 파라미터 출력\n","print(best_params2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":375,"referenced_widgets":["32b9c144ca0a49e9aa5516dfdac28636","d2ae28118bb143da8d28b46b579fa941","9983eb168ff94ec5955b525b03722e3e","29b8b37ab5044149998ac782e4b9391e","2b171a62ffcc4523bbec44c6bb92f2e9","d9a8c25944524df2884c6a316af214e4","6ef32a4e2b7b40b7a9a8df3ec4aa8470","d46bfd44a18d46bb95fcaac159f3fd38","c15edc0573774f728db8758cbd9b5911","3c1c6b732fce4435b5aac0150e2406e5","35c92dc51f9a46c2b9951f5f98fe6d19"]},"id":"c5FxYP2QbkkJ","executionInfo":{"status":"ok","timestamp":1703767752599,"user_tz":-540,"elapsed":658448,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"ae14f3f6-b438-4152-e009-9987744a4107"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<pandas.io.formats.style.Styler at 0x7d44c3bf7610>"],"text/html":["<style type=\"text/css\">\n","#T_b1ae9_row5_col0, #T_b1ae9_row5_col1, #T_b1ae9_row5_col2, #T_b1ae9_row5_col3, #T_b1ae9_row5_col4, #T_b1ae9_row5_col5, #T_b1ae9_row5_col6, #T_b1ae9_row5_col7, #T_b1ae9_row5_col8 {\n","  background: yellow;\n","}\n","</style>\n","<table id=\"T_b1ae9\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th id=\"T_b1ae9_level0_col0\" class=\"col_heading level0 col0\" >Accuracy</th>\n","      <th id=\"T_b1ae9_level0_col1\" class=\"col_heading level0 col1\" >AUC</th>\n","      <th id=\"T_b1ae9_level0_col2\" class=\"col_heading level0 col2\" >Recall</th>\n","      <th id=\"T_b1ae9_level0_col3\" class=\"col_heading level0 col3\" >Prec.</th>\n","      <th id=\"T_b1ae9_level0_col4\" class=\"col_heading level0 col4\" >F1</th>\n","      <th id=\"T_b1ae9_level0_col5\" class=\"col_heading level0 col5\" >Kappa</th>\n","      <th id=\"T_b1ae9_level0_col6\" class=\"col_heading level0 col6\" >MCC</th>\n","      <th id=\"T_b1ae9_level0_col7\" class=\"col_heading level0 col7\" >F2</th>\n","      <th id=\"T_b1ae9_level0_col8\" class=\"col_heading level0 col8\" >F05</th>\n","    </tr>\n","    <tr>\n","      <th class=\"index_name level0\" >Fold</th>\n","      <th class=\"blank col0\" >&nbsp;</th>\n","      <th class=\"blank col1\" >&nbsp;</th>\n","      <th class=\"blank col2\" >&nbsp;</th>\n","      <th class=\"blank col3\" >&nbsp;</th>\n","      <th class=\"blank col4\" >&nbsp;</th>\n","      <th class=\"blank col5\" >&nbsp;</th>\n","      <th class=\"blank col6\" >&nbsp;</th>\n","      <th class=\"blank col7\" >&nbsp;</th>\n","      <th class=\"blank col8\" >&nbsp;</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_b1ae9_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n","      <td id=\"T_b1ae9_row0_col0\" class=\"data row0 col0\" >0.8047</td>\n","      <td id=\"T_b1ae9_row0_col1\" class=\"data row0 col1\" >0.8644</td>\n","      <td id=\"T_b1ae9_row0_col2\" class=\"data row0 col2\" >0.8098</td>\n","      <td id=\"T_b1ae9_row0_col3\" class=\"data row0 col3\" >0.3670</td>\n","      <td id=\"T_b1ae9_row0_col4\" class=\"data row0 col4\" >0.5051</td>\n","      <td id=\"T_b1ae9_row0_col5\" class=\"data row0 col5\" >0.4042</td>\n","      <td id=\"T_b1ae9_row0_col6\" class=\"data row0 col6\" >0.4534</td>\n","      <td id=\"T_b1ae9_row0_col7\" class=\"data row0 col7\" >0.6524</td>\n","      <td id=\"T_b1ae9_row0_col8\" class=\"data row0 col8\" >0.4120</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b1ae9_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n","      <td id=\"T_b1ae9_row1_col0\" class=\"data row1 col0\" >0.8201</td>\n","      <td id=\"T_b1ae9_row1_col1\" class=\"data row1 col1\" >0.8683</td>\n","      <td id=\"T_b1ae9_row1_col2\" class=\"data row1 col2\" >0.7420</td>\n","      <td id=\"T_b1ae9_row1_col3\" class=\"data row1 col3\" >0.3813</td>\n","      <td id=\"T_b1ae9_row1_col4\" class=\"data row1 col4\" >0.5038</td>\n","      <td id=\"T_b1ae9_row1_col5\" class=\"data row1 col5\" >0.4074</td>\n","      <td id=\"T_b1ae9_row1_col6\" class=\"data row1 col6\" >0.4411</td>\n","      <td id=\"T_b1ae9_row1_col7\" class=\"data row1 col7\" >0.6240</td>\n","      <td id=\"T_b1ae9_row1_col8\" class=\"data row1 col8\" >0.4224</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b1ae9_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n","      <td id=\"T_b1ae9_row2_col0\" class=\"data row2 col0\" >0.8103</td>\n","      <td id=\"T_b1ae9_row2_col1\" class=\"data row2 col1\" >0.8687</td>\n","      <td id=\"T_b1ae9_row2_col2\" class=\"data row2 col2\" >0.8263</td>\n","      <td id=\"T_b1ae9_row2_col3\" class=\"data row2 col3\" >0.3764</td>\n","      <td id=\"T_b1ae9_row2_col4\" class=\"data row2 col4\" >0.5172</td>\n","      <td id=\"T_b1ae9_row2_col5\" class=\"data row2 col5\" >0.4191</td>\n","      <td id=\"T_b1ae9_row2_col6\" class=\"data row2 col6\" >0.4693</td>\n","      <td id=\"T_b1ae9_row2_col7\" class=\"data row2 col7\" >0.6669</td>\n","      <td id=\"T_b1ae9_row2_col8\" class=\"data row2 col8\" >0.4224</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b1ae9_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n","      <td id=\"T_b1ae9_row3_col0\" class=\"data row3 col0\" >0.8018</td>\n","      <td id=\"T_b1ae9_row3_col1\" class=\"data row3 col1\" >0.8588</td>\n","      <td id=\"T_b1ae9_row3_col2\" class=\"data row3 col2\" >0.7612</td>\n","      <td id=\"T_b1ae9_row3_col3\" class=\"data row3 col3\" >0.3567</td>\n","      <td id=\"T_b1ae9_row3_col4\" class=\"data row3 col4\" >0.4858</td>\n","      <td id=\"T_b1ae9_row3_col5\" class=\"data row3 col5\" >0.3823</td>\n","      <td id=\"T_b1ae9_row3_col6\" class=\"data row3 col6\" >0.4245</td>\n","      <td id=\"T_b1ae9_row3_col7\" class=\"data row3 col7\" >0.6205</td>\n","      <td id=\"T_b1ae9_row3_col8\" class=\"data row3 col8\" >0.3991</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b1ae9_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n","      <td id=\"T_b1ae9_row4_col0\" class=\"data row4 col0\" >0.8211</td>\n","      <td id=\"T_b1ae9_row4_col1\" class=\"data row4 col1\" >0.8583</td>\n","      <td id=\"T_b1ae9_row4_col2\" class=\"data row4 col2\" >0.7082</td>\n","      <td id=\"T_b1ae9_row4_col3\" class=\"data row4 col3\" >0.3787</td>\n","      <td id=\"T_b1ae9_row4_col4\" class=\"data row4 col4\" >0.4935</td>\n","      <td id=\"T_b1ae9_row4_col5\" class=\"data row4 col5\" >0.3968</td>\n","      <td id=\"T_b1ae9_row4_col6\" class=\"data row4 col6\" >0.4254</td>\n","      <td id=\"T_b1ae9_row4_col7\" class=\"data row4 col7\" >0.6032</td>\n","      <td id=\"T_b1ae9_row4_col8\" class=\"data row4 col8\" >0.4176</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b1ae9_level0_row5\" class=\"row_heading level0 row5\" >Mean</th>\n","      <td id=\"T_b1ae9_row5_col0\" class=\"data row5 col0\" >0.8116</td>\n","      <td id=\"T_b1ae9_row5_col1\" class=\"data row5 col1\" >0.8637</td>\n","      <td id=\"T_b1ae9_row5_col2\" class=\"data row5 col2\" >0.7695</td>\n","      <td id=\"T_b1ae9_row5_col3\" class=\"data row5 col3\" >0.3720</td>\n","      <td id=\"T_b1ae9_row5_col4\" class=\"data row5 col4\" >0.5011</td>\n","      <td id=\"T_b1ae9_row5_col5\" class=\"data row5 col5\" >0.4019</td>\n","      <td id=\"T_b1ae9_row5_col6\" class=\"data row5 col6\" >0.4427</td>\n","      <td id=\"T_b1ae9_row5_col7\" class=\"data row5 col7\" >0.6334</td>\n","      <td id=\"T_b1ae9_row5_col8\" class=\"data row5 col8\" >0.4147</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_b1ae9_level0_row6\" class=\"row_heading level0 row6\" >Std</th>\n","      <td id=\"T_b1ae9_row6_col0\" class=\"data row6 col0\" >0.0079</td>\n","      <td id=\"T_b1ae9_row6_col1\" class=\"data row6 col1\" >0.0045</td>\n","      <td id=\"T_b1ae9_row6_col2\" class=\"data row6 col2\" >0.0434</td>\n","      <td id=\"T_b1ae9_row6_col3\" class=\"data row6 col3\" >0.0091</td>\n","      <td id=\"T_b1ae9_row6_col4\" class=\"data row6 col4\" >0.0107</td>\n","      <td id=\"T_b1ae9_row6_col5\" class=\"data row6 col5\" >0.0122</td>\n","      <td id=\"T_b1ae9_row6_col6\" class=\"data row6 col6\" >0.0170</td>\n","      <td id=\"T_b1ae9_row6_col7\" class=\"data row6 col7\" >0.0230</td>\n","      <td id=\"T_b1ae9_row6_col8\" class=\"data row6 col8\" >0.0087</td>\n","    </tr>\n","  </tbody>\n","</table>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Processing:   0%|          | 0/7 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"32b9c144ca0a49e9aa5516dfdac28636"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"}}}}},{"output_type":"stream","name":"stdout","text":["Fitting 5 folds for each of 10 candidates, totalling 50 fits\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).\n","{'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 100, 'verbose': 0, 'warm_start': False}\n"]}]},{"cell_type":"markdown","source":["## 4) RandomForest 모델링"],"metadata":{"id":"P7H7z9B7RoKB"}},{"cell_type":"markdown","source":["### 4-1) 기본모델"],"metadata":{"id":"9wYkoy1NspIG"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.metrics import precision_score, recall_score, accuracy_score, f1_score"],"metadata":{"id":"RVbUP73G8sbZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 랜덤 포레스트 학습 및 별도의 테스트 세트로 예측 성능 평가\n","rf_clf = RandomForestClassifier()\n","rf_clf.fit(X_res, y_res)\n","pred = rf_clf.predict(X_test_r)"],"metadata":{"id":"-_uRt1s0qNyH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["precision = precision_score(y_test, pred)\n","recall = recall_score(y_test, pred)\n","accuracy = accuracy_score(y_test, pred)\n","f1 = f1_score(y_test, pred)\n","\n","print('랜덤 포레스트 precision: {:.4f}'.format(precision))\n","print('랜덤 포레스트 recall: {:.4f}'.format(recall))\n","print('랜덤 포레스트 accuracy: {:.4f}'.format(accuracy))\n","print('랜덤 포레스트 f1score: {:.4f}'.format(f1))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9Ryl_BxpqN2L","executionInfo":{"status":"ok","timestamp":1704247260326,"user_tz":-540,"elapsed":4,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"09876d99-5406-4bae-e076-468b4489000b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["랜덤 포레스트 precision: 0.6291\n","랜덤 포레스트 recall: 0.5877\n","랜덤 포레스트 accuracy: 0.9067\n","랜덤 포레스트 f1score: 0.6077\n"]}]},{"cell_type":"markdown","source":["### 4-2) 파라미터 튜닝(GridSearch)"],"metadata":{"id":"Crn63KX0sujD"}},{"cell_type":"code","source":["cv_params = {\n","    'n_estimators' : [50,100],\n","    'max_features' : ['auto', 'sqrt', 'log2'],\n","    'max_depth' : [10,50],\n","    'max_samples' : [.5, .9],\n","    'min_samples_split' : [2, 10],\n","    'min_samples_leaf' : [0.5, 2],\n","    'criterion' : ['gini']\n","}"],"metadata":{"id":"RDsbSa0lWb0V"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["rf = RandomForestClassifier()"],"metadata":{"id":"KwLm9GAeXP68"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["rf_val = GridSearchCV(rf, cv_params, refit = 'f1', cv = 5, n_jobs = -1, verbose=1)\n","rf_val.fit(X_res, y_res)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":135},"id":"vQrg0E_NXZ6f","executionInfo":{"status":"ok","timestamp":1704248181607,"user_tz":-540,"elapsed":728096,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"a2af1a83-fdb0-4470-c4c8-80a3a8bf51cc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 5 folds for each of 96 candidates, totalling 480 fits\n"]},{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=5, estimator=RandomForestClassifier(), n_jobs=-1,\n","             param_grid={'criterion': ['gini'], 'max_depth': [10, 50],\n","                         'max_features': ['auto', 'sqrt', 'log2'],\n","                         'max_samples': [0.5, 0.9],\n","                         'min_samples_leaf': [0.5, 2],\n","                         'min_samples_split': [2, 10],\n","                         'n_estimators': [50, 100]},\n","             refit='f1', verbose=1)"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=5, estimator=RandomForestClassifier(), n_jobs=-1,\n","             param_grid={&#x27;criterion&#x27;: [&#x27;gini&#x27;], &#x27;max_depth&#x27;: [10, 50],\n","                         &#x27;max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],\n","                         &#x27;max_samples&#x27;: [0.5, 0.9],\n","                         &#x27;min_samples_leaf&#x27;: [0.5, 2],\n","                         &#x27;min_samples_split&#x27;: [2, 10],\n","                         &#x27;n_estimators&#x27;: [50, 100]},\n","             refit=&#x27;f1&#x27;, verbose=1)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=5, estimator=RandomForestClassifier(), n_jobs=-1,\n","             param_grid={&#x27;criterion&#x27;: [&#x27;gini&#x27;], &#x27;max_depth&#x27;: [10, 50],\n","                         &#x27;max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],\n","                         &#x27;max_samples&#x27;: [0.5, 0.9],\n","                         &#x27;min_samples_leaf&#x27;: [0.5, 2],\n","                         &#x27;min_samples_split&#x27;: [2, 10],\n","                         &#x27;n_estimators&#x27;: [50, 100]},\n","             refit=&#x27;f1&#x27;, verbose=1)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["rf_val.best_params_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v96WSxwQX6k-","executionInfo":{"status":"ok","timestamp":1704248181608,"user_tz":-540,"elapsed":7,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"ba122802-e5bb-4f74-88a7-3eb79a0bf919"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'criterion': 'gini',\n"," 'max_depth': 50,\n"," 'max_features': 'sqrt',\n"," 'max_samples': 0.9,\n"," 'min_samples_leaf': 2,\n"," 'min_samples_split': 2,\n"," 'n_estimators': 100}"]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["rf_opt = RandomForestClassifier(**rf_val.best_params_)\n","rf_opt.fit(X_res, y_res)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"1oE21b_FX86R","executionInfo":{"status":"ok","timestamp":1704248222555,"user_tz":-540,"elapsed":40952,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"b12515f3-2c00-4070-959f-4f22072c7aac"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier(max_depth=50, max_samples=0.9, min_samples_leaf=2)"],"text/html":["<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(max_depth=50, max_samples=0.9, min_samples_leaf=2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(max_depth=50, max_samples=0.9, min_samples_leaf=2)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["# 예측값\n","y_pred = rf_opt.predict(X_test_r)\n","\n","# score\n","pc_test = precision_score(y_test, y_pred)\n","rc_test = recall_score(y_test, y_pred)\n","ac_test = accuracy_score(y_test, y_pred)\n","f1_test = f1_score(y_test, y_pred)\n","\n","print('precision : ', pc_test)\n","print('recall : ', rc_test)\n","print('accuracy : ', ac_test)\n","print('f1 : ', f1_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SMJuMoR6YDWn","executionInfo":{"status":"ok","timestamp":1704248223297,"user_tz":-540,"elapsed":750,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"5e350bca-0e48-4510-d7fd-185ad83db19c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["precision :  0.5994736842105263\n","recall :  0.6303265080243498\n","accuracy :  0.9027096949891068\n","f1 :  0.6145130833558132\n"]}]},{"cell_type":"code","source":["table = pd.DataFrame(rf_val.cv_results_)\n","table.head()"],"metadata":{"id":"jgWR64meZ835"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["rf_opt.feature_importances_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WwUbZE8hk4f2","executionInfo":{"status":"ok","timestamp":1704123160855,"user_tz":-540,"elapsed":14,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"e7f5f510-7d71-4ac9-ea5f-f3bb505800ce"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.02820832, 0.05912747, 0.01764666, 0.00497086, 0.        ,\n","       0.00870274, 0.00558606, 0.02837269, 0.0251335 , 0.01615774,\n","       0.01180609, 0.03086288, 0.05390974, 0.04008466, 0.03908064,\n","       0.05921709, 0.04184706, 0.02728664, 0.04017513, 0.04140267,\n","       0.04108767, 0.04470604, 0.0477432 , 0.04098604, 0.00055013,\n","       0.00663441, 0.0002719 , 0.00395947, 0.00122209, 0.00044041,\n","       0.00175394, 0.00172797, 0.00349863, 0.00189812, 0.00302877,\n","       0.00129907, 0.00113046, 0.00713744, 0.00051809, 0.00024766,\n","       0.00098565, 0.00080996, 0.00227502, 0.00028998, 0.00223555,\n","       0.00022648, 0.00061831, 0.00200916, 0.0003263 , 0.00254036,\n","       0.00084034, 0.00188896, 0.00062175, 0.00076147, 0.00150429,\n","       0.00530572, 0.003252  , 0.00058948, 0.00170688, 0.00252926,\n","       0.00057661, 0.00058867, 0.00026023, 0.00473635, 0.010866  ,\n","       0.00314394, 0.00766563, 0.0003759 , 0.01654683, 0.00034648,\n","       0.00038655, 0.00052359, 0.00053959, 0.00742726, 0.00030266,\n","       0.00400741, 0.00110139, 0.00053417, 0.00160843, 0.00068499,\n","       0.00484667, 0.0041582 , 0.00202366, 0.00240927, 0.00125229,\n","       0.00107866, 0.00733181, 0.00056671, 0.00024405, 0.00087393,\n","       0.00087253, 0.00214755, 0.00031248, 0.00499805, 0.00074807,\n","       0.00026638, 0.00065614, 0.00185672, 0.00120652, 0.00030329,\n","       0.0023842 , 0.00082517, 0.0018012 , 0.00060453, 0.00072588,\n","       0.00156547, 0.00542804, 0.00257426, 0.00060998, 0.00157055,\n","       0.00208467, 0.00058591, 0.00064221, 0.00023333, 0.00520997,\n","       0.01025315, 0.00290904, 0.00786799, 0.00034446, 0.011663  ,\n","       0.00032987, 0.00033514, 0.00054223, 0.00901765, 0.00877938])"]},"metadata":{},"execution_count":79}]},{"cell_type":"code","source":["rf_val.best_score_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0Mb2NkUXlVPG","executionInfo":{"status":"ok","timestamp":1704123160856,"user_tz":-540,"elapsed":11,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"03cbb7f3-4c2e-4caf-80f5-0ccdfc73fabf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.907237195929002"]},"metadata":{},"execution_count":80}]},{"cell_type":"markdown","source":["### 4-3) threshold"],"metadata":{"id":"0HX86Jry3NiW"}},{"cell_type":"code","source":["rf = RandomForestClassifier()\n","rf.fit(X_res, y_res)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":179},"id":"RAI_EAqX3PSm","executionInfo":{"status":"ok","timestamp":1704182557573,"user_tz":-540,"elapsed":44297,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"57e8b3ae-9300-4626-b618-dbf300fe7bf5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,\n","                       criterion='gini', max_depth=None, max_features='sqrt',\n","                       max_leaf_nodes=None, max_samples=None,\n","                       min_impurity_decrease=0.0, min_samples_leaf=1,\n","                       min_samples_split=2, min_weight_fraction_leaf=0.0,\n","                       n_estimators=100, n_jobs=None, oob_score=False,\n","                       random_state=None, verbose=0, warm_start=False)"],"text/html":["<style>#sk-container-id-12 {color: black;background-color: white;}#sk-container-id-12 pre{padding: 0;}#sk-container-id-12 div.sk-toggleable {background-color: white;}#sk-container-id-12 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-12 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-12 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-12 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-12 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-12 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-12 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-12 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-12 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-12 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-12 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-12 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-12 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-12 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-12 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-12 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-12 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-12 div.sk-item {position: relative;z-index: 1;}#sk-container-id-12 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-12 div.sk-item::before, #sk-container-id-12 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-12 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-12 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-12 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-12 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-12 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-12 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-12 div.sk-label-container {text-align: center;}#sk-container-id-12 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-12 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-12\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,\n","                       criterion=&#x27;gini&#x27;, max_depth=None, max_features=&#x27;sqrt&#x27;,\n","                       max_leaf_nodes=None, max_samples=None,\n","                       min_impurity_decrease=0.0, min_samples_leaf=1,\n","                       min_samples_split=2, min_weight_fraction_leaf=0.0,\n","                       n_estimators=100, n_jobs=None, oob_score=False,\n","                       random_state=None, verbose=0, warm_start=False)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-14\" type=\"checkbox\" checked><label for=\"sk-estimator-id-14\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,\n","                       criterion=&#x27;gini&#x27;, max_depth=None, max_features=&#x27;sqrt&#x27;,\n","                       max_leaf_nodes=None, max_samples=None,\n","                       min_impurity_decrease=0.0, min_samples_leaf=1,\n","                       min_samples_split=2, min_weight_fraction_leaf=0.0,\n","                       n_estimators=100, n_jobs=None, oob_score=False,\n","                       random_state=None, verbose=0, warm_start=False)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":206}]},{"cell_type":"code","source":["thresholds = np.linspace(0.1, 1, 10)\n","thresholds"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"31-dXZgH3PVY","executionInfo":{"status":"ok","timestamp":1704182557574,"user_tz":-540,"elapsed":5,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"fb0d1404-7e2b-437f-8001-7cae66e8b7e8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ])"]},"metadata":{},"execution_count":207}]},{"cell_type":"code","source":["# threshold 리스트\n","thresholds = np.linspace(0.1, 1, 10)\n","\n","# score 저장 리스트\n","f1_scores = []\n","f2_scores = []\n","f0_5_scores = []\n","accuracy_scores = []\n","\n","for threshold in thresholds:\n","  predictions = rf.predict_proba(X_test_r)[:, 1]\n","  predictions = np.where(predictions > threshold, 1, 0)\n","  f1_scores.append(fbeta_score(y_test, predictions, beta=1))\n","  f2_scores.append(fbeta_score(y_test, predictions, beta=2))\n","  f0_5_scores.append(fbeta_score(y_test, predictions, beta=0.5))\n","  accuracy_scores.append(accuracy_score(y_test, predictions))\n","\n","# 그래프 그리기\n","plt.plot(thresholds, f1_scores, label = 'f1')\n","plt.plot(thresholds, f2_scores, label = 'f2')\n","plt.plot(thresholds, f0_5_scores, label = 'f0.5')\n","# plt.plot(thresholds, accuracy_scores, label = 'accuracy')\n","plt.xlabel('Threshold')\n","plt.ylabel('Score')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"khaDJfgS3PYS","executionInfo":{"status":"ok","timestamp":1704182563696,"user_tz":-540,"elapsed":6125,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"755d9599-f463-478c-9606-5194869d1e13"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["f1_scores[3]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Yz_RWFyE-PhA","executionInfo":{"status":"ok","timestamp":1704182602029,"user_tz":-540,"elapsed":334,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"b25c8c06-f9c9-4cc7-e4a8-ae9d97fa450d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.6183953033268101"]},"metadata":{},"execution_count":209}]},{"cell_type":"code","source":["f1_scores[4]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nEBbv3w7-hGo","executionInfo":{"status":"ok","timestamp":1704182603260,"user_tz":-540,"elapsed":4,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"6746750b-3982-4af0-a312-9e88c652892f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.6064073226544622"]},"metadata":{},"execution_count":210}]},{"cell_type":"code","source":["f0_5_scores[5]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lZTJdOyxOoeq","executionInfo":{"status":"ok","timestamp":1704183110642,"user_tz":-540,"elapsed":485,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"eac92844-2eab-4b8f-865e-6ad76a557131"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.6383948928408573"]},"metadata":{},"execution_count":211}]},{"cell_type":"markdown","source":["# 3.Z-socre"],"metadata":{"id":"2xxH1rFs7YiZ"}},{"cell_type":"code","source":["from scipy.stats import zscore"],"metadata":{"id":"WOiEtUse9lQq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["columns_to = [\"connect_avg\",\t\"connect_max\",\n","         \"in_handover_rate\",\t\"out_handover_rate\",\t\"inter_handover_rate\",\n","          \"lower_prb\",\t\"upper_prb\",\t\"reconfig_rate\",\"lower_bler\",\t\"upper_bler\",\t\"tot_et\"]"],"metadata":{"id":"p6owKcmN9be5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_data = test[columns_to]"],"metadata":{"id":"rC_8Hzu_o9FA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# zscore(test_data, axis=0).describe()\n","zscore(test_data, axis=0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"DwN7qHPt9U-f","executionInfo":{"status":"ok","timestamp":1704246129742,"user_tz":-540,"elapsed":4,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"9886274b-0166-4447-b0b2-399d7b64ec57"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       connect_avg  connect_max  in_handover_rate  out_handover_rate  \\\n","24       -0.028265     0.110807         -0.023510          -0.001064   \n","25       -0.075946    -0.066502         -1.325574           0.423962   \n","26        0.122205    -0.290457         -0.245087           0.495292   \n","27        0.449997    -0.008304         -0.000533          -0.001685   \n","28        0.348377     0.167316         -0.278660          -0.024321   \n","...            ...          ...               ...                ...   \n","74659    -0.244785    -0.262533         -0.016839           0.554422   \n","74660    -0.181033     0.245859         -0.001410          -0.001064   \n","74661     0.807791     0.440471          0.001298          -0.001064   \n","74662     0.353374     0.309309         -0.000203          -0.424043   \n","74663    -0.649340    -0.474939         -0.015623           0.396978   \n","\n","       inter_handover_rate  lower_prb  upper_prb  reconfig_rate  lower_bler  \\\n","24                0.000009  -0.198337  -1.437082       0.331682    0.109418   \n","25                0.040307   0.133345  -1.424136       0.268705    0.369599   \n","26               -0.008712   0.425410  -0.680095       0.119757    0.227668   \n","27                0.008663   0.024085  -0.700561      -0.305048    0.025122   \n","28               -0.008717  -0.575019  -1.896555      -0.050029    0.058556   \n","...                    ...        ...        ...            ...         ...   \n","74659             0.000009   0.293827   0.441250      -0.013535   -0.227109   \n","74660             0.000009  -0.030320   0.432692      -0.018856   -0.251577   \n","74661             0.000009   0.010819   0.603358       0.011278   -0.467370   \n","74662             0.000009   0.033535  -0.396088      -0.093679   -0.380695   \n","74663             0.000009   0.169050  -0.817903      -0.018890    0.272005   \n","\n","       upper_bler    tot_et  \n","24      -0.039351  0.110212  \n","25       0.894121 -0.016385  \n","26       0.734099 -0.132746  \n","27      -0.662039  0.062555  \n","28      -1.245682  0.074518  \n","...           ...       ...  \n","74659   -0.037561 -0.045723  \n","74660    0.087691 -0.000817  \n","74661    0.195421  0.079647  \n","74662   -0.134168  0.077002  \n","74663    0.801237 -0.011313  \n","\n","[73440 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-1a254245-e13b-4252-8afa-95bcd58176ab\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>connect_avg</th>\n","      <th>connect_max</th>\n","      <th>in_handover_rate</th>\n","      <th>out_handover_rate</th>\n","      <th>inter_handover_rate</th>\n","      <th>lower_prb</th>\n","      <th>upper_prb</th>\n","      <th>reconfig_rate</th>\n","      <th>lower_bler</th>\n","      <th>upper_bler</th>\n","      <th>tot_et</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>24</th>\n","      <td>-0.028265</td>\n","      <td>0.110807</td>\n","      <td>-0.023510</td>\n","      <td>-0.001064</td>\n","      <td>0.000009</td>\n","      <td>-0.198337</td>\n","      <td>-1.437082</td>\n","      <td>0.331682</td>\n","      <td>0.109418</td>\n","      <td>-0.039351</td>\n","      <td>0.110212</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>-0.075946</td>\n","      <td>-0.066502</td>\n","      <td>-1.325574</td>\n","      <td>0.423962</td>\n","      <td>0.040307</td>\n","      <td>0.133345</td>\n","      <td>-1.424136</td>\n","      <td>0.268705</td>\n","      <td>0.369599</td>\n","      <td>0.894121</td>\n","      <td>-0.016385</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>0.122205</td>\n","      <td>-0.290457</td>\n","      <td>-0.245087</td>\n","      <td>0.495292</td>\n","      <td>-0.008712</td>\n","      <td>0.425410</td>\n","      <td>-0.680095</td>\n","      <td>0.119757</td>\n","      <td>0.227668</td>\n","      <td>0.734099</td>\n","      <td>-0.132746</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>0.449997</td>\n","      <td>-0.008304</td>\n","      <td>-0.000533</td>\n","      <td>-0.001685</td>\n","      <td>0.008663</td>\n","      <td>0.024085</td>\n","      <td>-0.700561</td>\n","      <td>-0.305048</td>\n","      <td>0.025122</td>\n","      <td>-0.662039</td>\n","      <td>0.062555</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>0.348377</td>\n","      <td>0.167316</td>\n","      <td>-0.278660</td>\n","      <td>-0.024321</td>\n","      <td>-0.008717</td>\n","      <td>-0.575019</td>\n","      <td>-1.896555</td>\n","      <td>-0.050029</td>\n","      <td>0.058556</td>\n","      <td>-1.245682</td>\n","      <td>0.074518</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>74659</th>\n","      <td>-0.244785</td>\n","      <td>-0.262533</td>\n","      <td>-0.016839</td>\n","      <td>0.554422</td>\n","      <td>0.000009</td>\n","      <td>0.293827</td>\n","      <td>0.441250</td>\n","      <td>-0.013535</td>\n","      <td>-0.227109</td>\n","      <td>-0.037561</td>\n","      <td>-0.045723</td>\n","    </tr>\n","    <tr>\n","      <th>74660</th>\n","      <td>-0.181033</td>\n","      <td>0.245859</td>\n","      <td>-0.001410</td>\n","      <td>-0.001064</td>\n","      <td>0.000009</td>\n","      <td>-0.030320</td>\n","      <td>0.432692</td>\n","      <td>-0.018856</td>\n","      <td>-0.251577</td>\n","      <td>0.087691</td>\n","      <td>-0.000817</td>\n","    </tr>\n","    <tr>\n","      <th>74661</th>\n","      <td>0.807791</td>\n","      <td>0.440471</td>\n","      <td>0.001298</td>\n","      <td>-0.001064</td>\n","      <td>0.000009</td>\n","      <td>0.010819</td>\n","      <td>0.603358</td>\n","      <td>0.011278</td>\n","      <td>-0.467370</td>\n","      <td>0.195421</td>\n","      <td>0.079647</td>\n","    </tr>\n","    <tr>\n","      <th>74662</th>\n","      <td>0.353374</td>\n","      <td>0.309309</td>\n","      <td>-0.000203</td>\n","      <td>-0.424043</td>\n","      <td>0.000009</td>\n","      <td>0.033535</td>\n","      <td>-0.396088</td>\n","      <td>-0.093679</td>\n","      <td>-0.380695</td>\n","      <td>-0.134168</td>\n","      <td>0.077002</td>\n","    </tr>\n","    <tr>\n","      <th>74663</th>\n","      <td>-0.649340</td>\n","      <td>-0.474939</td>\n","      <td>-0.015623</td>\n","      <td>0.396978</td>\n","      <td>0.000009</td>\n","      <td>0.169050</td>\n","      <td>-0.817903</td>\n","      <td>-0.018890</td>\n","      <td>0.272005</td>\n","      <td>0.801237</td>\n","      <td>-0.011313</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>73440 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1a254245-e13b-4252-8afa-95bcd58176ab')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1a254245-e13b-4252-8afa-95bcd58176ab button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1a254245-e13b-4252-8afa-95bcd58176ab');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9645a062-aef2-4912-ad63-0fcfd223c274\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9645a062-aef2-4912-ad63-0fcfd223c274')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9645a062-aef2-4912-ad63-0fcfd223c274 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":50}]},{"cell_type":"markdown","source":["## 1) 상한선, 하한선 함수 만들기"],"metadata":{"id":"_3--eTmzUAEl"}},{"cell_type":"code","source":["ucl_list = ['lower_prb', 'upper_prb','lower_bler', 'upper_bler']\n","lcl_list = ['connect_avg', 'connect_max','in_handover_rate',\n","                    'out_handover_rate', 'inter_handover_rate','tot_et']\n","outlier_list = ['reconfig_rate']"],"metadata":{"id":"0OUqOAlddxFp"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- z 값(양측) = 1.56 → 12%\n","- z 값(lcl, ucl) = 1.18 → 12%\n","- z 값 = 2 → 이상치 비율이 12%가 나옴 (이상탐지에서 많이 사용함)"],"metadata":{"id":"Jmdu1MjEUNFc"}},{"cell_type":"code","source":["# z 값(양측) = 1.56 → 12%\n","# z 값(lcl, ucl) = 1.18 → 12%\n","def ucl(series, z=2):\n","    ucl = series.mean() + series.std() * z\n","    return np.where(series > ucl,1, 0)\n","\n","def lcl(series, z=2):\n","    lcl = series.mean() - series.std() * z\n","    return np.where(series < lcl,1, 0)\n","\n","def outlier(series, z=2):\n","    ucl = series.mean() + series.std() * z\n","    lcl = series.mean() - series.std() * z\n","    return np.where((series > ucl) | (series < lcl),1, 0)"],"metadata":{"id":"4igE-ySH-bTN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for col in ucl_list:\n","    test_data[col] = ucl(test_data[col])\n","\n","for col in lcl_list:\n","    test_data[col] = lcl(test_data[col])\n","\n","for col in outlier_list:\n","    test_data[col] = outlier(test_data[col])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W7TtZOl0_14i","executionInfo":{"status":"ok","timestamp":1704246138531,"user_tz":-540,"elapsed":3,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"42a3cbc9-6a0a-4ac9-c7df-739446638aeb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-53-0a36b42e59f5>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  test_data[col] = ucl(test_data[col])\n","<ipython-input-53-0a36b42e59f5>:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  test_data[col] = lcl(test_data[col])\n","<ipython-input-53-0a36b42e59f5>:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  test_data[col] = outlier(test_data[col])\n"]}]},{"cell_type":"code","source":["test_data['total_score'] = test_data.mean(axis=1)\n","test_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"id":"s2-gRiB0__d_","executionInfo":{"status":"ok","timestamp":1704246151298,"user_tz":-540,"elapsed":501,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"31d77ccc-c6ed-4615-afa2-919068ec9ce4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-55-b2d48fb560bb>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  test_data['total_score'] = test_data.mean(axis=1)\n"]},{"output_type":"execute_result","data":{"text/plain":["    connect_avg  connect_max  in_handover_rate  out_handover_rate  \\\n","24            0            0                 0                  0   \n","25            0            0                 0                  0   \n","26            0            0                 0                  0   \n","27            0            0                 0                  0   \n","28            0            0                 0                  0   \n","\n","    inter_handover_rate  lower_prb  upper_prb  reconfig_rate  lower_bler  \\\n","24                    0          0          0              0           0   \n","25                    0          0          0              0           0   \n","26                    0          0          0              0           0   \n","27                    0          0          0              0           0   \n","28                    0          0          0              0           0   \n","\n","    upper_bler  tot_et  total_score  \n","24           0       0          0.0  \n","25           0       0          0.0  \n","26           0       0          0.0  \n","27           0       0          0.0  \n","28           0       0          0.0  "],"text/html":["\n","  <div id=\"df-aa8c6b75-8334-45c4-b242-9513e498efeb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>connect_avg</th>\n","      <th>connect_max</th>\n","      <th>in_handover_rate</th>\n","      <th>out_handover_rate</th>\n","      <th>inter_handover_rate</th>\n","      <th>lower_prb</th>\n","      <th>upper_prb</th>\n","      <th>reconfig_rate</th>\n","      <th>lower_bler</th>\n","      <th>upper_bler</th>\n","      <th>tot_et</th>\n","      <th>total_score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>24</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aa8c6b75-8334-45c4-b242-9513e498efeb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-aa8c6b75-8334-45c4-b242-9513e498efeb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-aa8c6b75-8334-45c4-b242-9513e498efeb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b32fa90f-0d98-4511-b163-54c385d55bf9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b32fa90f-0d98-4511-b163-54c385d55bf9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b32fa90f-0d98-4511-b163-54c385d55bf9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["test_data[test_data['total_score'] != 0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"0-ERtFU8gvKO","executionInfo":{"status":"ok","timestamp":1704174088418,"user_tz":-540,"elapsed":423,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"7d978121-b01f-4268-aef4-87a4e4b28309"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       connect_avg  connect_max  in_handover_rate  out_handover_rate  \\\n","126              0            0                 0                  0   \n","146              0            0                 0                  0   \n","172              0            0                 0                  0   \n","296              0            0                 0                  0   \n","339              0            0                 0                  0   \n","...            ...          ...               ...                ...   \n","74607            0            0                 0                  0   \n","74642            0            0                 0                  0   \n","74643            0            0                 1                  0   \n","74653            0            0                 1                  0   \n","74654            0            0                 1                  0   \n","\n","       inter_handover_rate  lower_prb  upper_prb  reconfig_rate  lower_bler  \\\n","126                      0          0          0              1           0   \n","146                      0          0          1              0           0   \n","172                      0          0          1              0           0   \n","296                      0          0          1              0           0   \n","339                      0          1          1              0           0   \n","...                    ...        ...        ...            ...         ...   \n","74607                    0          0          0              0           0   \n","74642                    0          0          1              0           0   \n","74643                    0          0          0              0           0   \n","74653                    0          0          0              0           1   \n","74654                    0          0          0              0           0   \n","\n","       upper_bler  tot_et  total_score  \n","126             0       0     0.090909  \n","146             0       0     0.090909  \n","172             0       0     0.090909  \n","296             0       0     0.090909  \n","339             0       0     0.181818  \n","...           ...     ...          ...  \n","74607           1       0     0.090909  \n","74642           0       0     0.090909  \n","74643           0       0     0.090909  \n","74653           0       0     0.181818  \n","74654           0       0     0.090909  \n","\n","[9547 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-43dbf7e0-5804-4c49-a4cd-2901b007ecd1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>connect_avg</th>\n","      <th>connect_max</th>\n","      <th>in_handover_rate</th>\n","      <th>out_handover_rate</th>\n","      <th>inter_handover_rate</th>\n","      <th>lower_prb</th>\n","      <th>upper_prb</th>\n","      <th>reconfig_rate</th>\n","      <th>lower_bler</th>\n","      <th>upper_bler</th>\n","      <th>tot_et</th>\n","      <th>total_score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>126</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.090909</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.090909</td>\n","    </tr>\n","    <tr>\n","      <th>172</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.090909</td>\n","    </tr>\n","    <tr>\n","      <th>296</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.090909</td>\n","    </tr>\n","    <tr>\n","      <th>339</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.181818</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>74607</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.090909</td>\n","    </tr>\n","    <tr>\n","      <th>74642</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.090909</td>\n","    </tr>\n","    <tr>\n","      <th>74643</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.090909</td>\n","    </tr>\n","    <tr>\n","      <th>74653</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.181818</td>\n","    </tr>\n","    <tr>\n","      <th>74654</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.090909</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>9547 rows × 12 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-43dbf7e0-5804-4c49-a4cd-2901b007ecd1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-43dbf7e0-5804-4c49-a4cd-2901b007ecd1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-43dbf7e0-5804-4c49-a4cd-2901b007ecd1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d9ffadca-59c1-454f-9b44-37530d2060f5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d9ffadca-59c1-454f-9b44-37530d2060f5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d9ffadca-59c1-454f-9b44-37530d2060f5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":98}]},{"cell_type":"markdown","source":["# 4.Isolation Forest"],"metadata":{"id":"JVCwrTiAvWaI"}},{"cell_type":"markdown","source":["## 1) 기본 모델"],"metadata":{"id":"WxTTusWhUvJO"}},{"cell_type":"code","source":["from sklearn.ensemble import IsolationForest"],"metadata":{"id":"aoanYlWfgzGH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_iso = test[columns_to]"],"metadata":{"id":"vVXzEdcrw_sU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["if_model = IsolationForest(random_state=0, n_estimators=500)\n","if_model.fit(test_iso)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"kE38mhXTwXFd","executionInfo":{"status":"ok","timestamp":1704246681176,"user_tz":-540,"elapsed":1678,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"ecbf37a9-6426-4329-cfb1-e802b74a2970"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["IsolationForest(n_estimators=500, random_state=0)"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>IsolationForest(n_estimators=500, random_state=0)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">IsolationForest</label><div class=\"sk-toggleable__content\"><pre>IsolationForest(n_estimators=500, random_state=0)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["score1 = if_model.decision_function(test_iso)\n","anomaly1 = if_model.predict(test_iso)"],"metadata":{"id":"fHPKLoCexU6u"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["anomaly1 = pd.DataFrame(anomaly1)\n","anomaly1.columns = ['anomaly']\n","anomaly1.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PCkUe7kZydmy","executionInfo":{"status":"ok","timestamp":1704246738382,"user_tz":-540,"elapsed":428,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"9b645023-823c-46ce-8105-6102b073b2d0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["anomaly\n"," 1         70667\n","-1          2773\n","dtype: int64"]},"metadata":{},"execution_count":60}]},{"cell_type":"markdown","source":["## 2) 튜닝 모델"],"metadata":{"id":"8d0L1ftxUyh3"}},{"cell_type":"code","source":["model = IsolationForest(\n","    random_state = 0, n_estimators=500, max_samples=\"auto\", n_jobs=-1, max_features=2, contamination=0.01\n",")\n","model.fit(test_iso)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":111},"id":"080UoMyMv6rF","executionInfo":{"status":"ok","timestamp":1704176482043,"user_tz":-540,"elapsed":2473,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"1ad3956d-d2cb-493c-8d1b-daecbef01371"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but IsolationForest was fitted with feature names\n","  warnings.warn(\n"]},{"output_type":"execute_result","data":{"text/plain":["IsolationForest(contamination=0.01, max_features=2, n_jobs=-1, random_state=0)"],"text/html":["<style>#sk-container-id-7 {color: black;background-color: white;}#sk-container-id-7 pre{padding: 0;}#sk-container-id-7 div.sk-toggleable {background-color: white;}#sk-container-id-7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-7 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-7 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-7 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-7 div.sk-item {position: relative;z-index: 1;}#sk-container-id-7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-7 div.sk-item::before, #sk-container-id-7 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-7 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-7 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-7 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-7 div.sk-label-container {text-align: center;}#sk-container-id-7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-7 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-7\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>IsolationForest(contamination=0.01, max_features=2, n_jobs=-1, random_state=0)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" checked><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">IsolationForest</label><div class=\"sk-toggleable__content\"><pre>IsolationForest(contamination=0.01, max_features=2, n_jobs=-1, random_state=0)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":138}]},{"cell_type":"code","source":["score = model.decision_function(test_iso)\n","anomaly = model.predict(test_iso)"],"metadata":{"id":"EymERifpwxFt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["anomaly = pd.DataFrame(anomaly)\n","anomaly.columns = ['anomaly']\n","anomaly.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sXLBk-9-y_1g","executionInfo":{"status":"ok","timestamp":1704176485653,"user_tz":-540,"elapsed":14,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"df1e94b6-a102-480d-86f6-06a68567bc90"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["anomaly\n"," 1         72705\n","-1           735\n","dtype: int64"]},"metadata":{},"execution_count":140}]},{"cell_type":"code","source":["2773/70667"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K-dJ2PCNzW-_","executionInfo":{"status":"ok","timestamp":1704176614627,"user_tz":-540,"elapsed":324,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"375c88b2-bf1d-4c06-c79b-a386a7aa6d13"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.03924038094159933"]},"metadata":{},"execution_count":146}]},{"cell_type":"code","source":["735/72705"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ejcKzz0czcUe","executionInfo":{"status":"ok","timestamp":1704176409630,"user_tz":-540,"elapsed":316,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"c37bb217-9c5a-4de4-e070-c26e39a095c7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.010109345987208583"]},"metadata":{},"execution_count":137}]},{"cell_type":"code","source":["test_iso[\"isolation_scores\"] = score1\n","# test_iso[\"anomaly\"] = anomaly1\n","# anomaly_data = test_iso.loc[test_iso[\"anomaly\"] == -1]  # 이상값은 -1으로 나타낸다.\n","# anomaly_data\n","test_iso"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":553},"id":"sPHykiGCxQ4u","executionInfo":{"status":"ok","timestamp":1704246776395,"user_tz":-540,"elapsed":456,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"65bd8562-a531-435a-e228-9cc93f3bfb00"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-61-cbaa49eecfff>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  test_iso[\"isolation_scores\"] = score1\n"]},{"output_type":"execute_result","data":{"text/plain":["       connect_avg  connect_max  in_handover_rate  out_handover_rate  \\\n","24       -0.016140     0.058841         -0.003187           0.000000   \n","25       -0.040375    -0.039221         -0.381298           0.004795   \n","26        0.060340    -0.163080         -0.067532           0.005599   \n","27        0.226949    -0.007034          0.003485          -0.000007   \n","28        0.175298     0.090093         -0.077281          -0.000262   \n","...            ...          ...               ...                ...   \n","74659    -0.126192    -0.147636         -0.001250           0.006266   \n","74660    -0.093788     0.133531          0.003230           0.000000   \n","74661     0.408807     0.241162          0.004017           0.000000   \n","74662     0.177838     0.168623          0.003581          -0.004771   \n","74663    -0.331817    -0.265108         -0.000897           0.004490   \n","\n","       inter_handover_rate  lower_prb  upper_prb  reconfig_rate  lower_bler  \\\n","24                0.000000  -0.128298  -0.927531       0.019080    0.055756   \n","25                0.006286   0.081664  -0.919199       0.015582    0.187271   \n","26               -0.001361   0.266548  -0.440348       0.007307    0.115528   \n","27                0.001350   0.012500  -0.453520      -0.016292    0.013146   \n","28               -0.001361  -0.366746  -1.223239      -0.002125    0.030046   \n","...                    ...        ...        ...            ...         ...   \n","74659             0.000000   0.183253   0.281329      -0.000098   -0.114350   \n","74660             0.000000  -0.021939   0.275821      -0.000393   -0.126718   \n","74661             0.000000   0.004103   0.385658       0.001281   -0.235796   \n","74662             0.000000   0.018482  -0.257566      -0.004550   -0.191984   \n","74663             0.000000   0.104266  -0.529039      -0.000395    0.137939   \n","\n","       upper_bler    tot_et  isolation_scores  \n","24      -0.022035  0.212200          0.173112  \n","25       0.518314 -0.047953          0.135776  \n","26       0.425684 -0.287069          0.163965  \n","27      -0.382483  0.114266          0.172960  \n","28      -0.720330  0.138850          0.143815  \n","...           ...       ...               ...  \n","74659   -0.020999 -0.108241          0.178573  \n","74660    0.051505 -0.015961          0.188093  \n","74661    0.113865  0.149389          0.174225  \n","74662   -0.076920  0.143955          0.176747  \n","74663    0.464547 -0.037530          0.168019  \n","\n","[73440 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-7677eddb-ffa4-4451-8ab1-182b04a8276a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>connect_avg</th>\n","      <th>connect_max</th>\n","      <th>in_handover_rate</th>\n","      <th>out_handover_rate</th>\n","      <th>inter_handover_rate</th>\n","      <th>lower_prb</th>\n","      <th>upper_prb</th>\n","      <th>reconfig_rate</th>\n","      <th>lower_bler</th>\n","      <th>upper_bler</th>\n","      <th>tot_et</th>\n","      <th>isolation_scores</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>24</th>\n","      <td>-0.016140</td>\n","      <td>0.058841</td>\n","      <td>-0.003187</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-0.128298</td>\n","      <td>-0.927531</td>\n","      <td>0.019080</td>\n","      <td>0.055756</td>\n","      <td>-0.022035</td>\n","      <td>0.212200</td>\n","      <td>0.173112</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>-0.040375</td>\n","      <td>-0.039221</td>\n","      <td>-0.381298</td>\n","      <td>0.004795</td>\n","      <td>0.006286</td>\n","      <td>0.081664</td>\n","      <td>-0.919199</td>\n","      <td>0.015582</td>\n","      <td>0.187271</td>\n","      <td>0.518314</td>\n","      <td>-0.047953</td>\n","      <td>0.135776</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>0.060340</td>\n","      <td>-0.163080</td>\n","      <td>-0.067532</td>\n","      <td>0.005599</td>\n","      <td>-0.001361</td>\n","      <td>0.266548</td>\n","      <td>-0.440348</td>\n","      <td>0.007307</td>\n","      <td>0.115528</td>\n","      <td>0.425684</td>\n","      <td>-0.287069</td>\n","      <td>0.163965</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>0.226949</td>\n","      <td>-0.007034</td>\n","      <td>0.003485</td>\n","      <td>-0.000007</td>\n","      <td>0.001350</td>\n","      <td>0.012500</td>\n","      <td>-0.453520</td>\n","      <td>-0.016292</td>\n","      <td>0.013146</td>\n","      <td>-0.382483</td>\n","      <td>0.114266</td>\n","      <td>0.172960</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>0.175298</td>\n","      <td>0.090093</td>\n","      <td>-0.077281</td>\n","      <td>-0.000262</td>\n","      <td>-0.001361</td>\n","      <td>-0.366746</td>\n","      <td>-1.223239</td>\n","      <td>-0.002125</td>\n","      <td>0.030046</td>\n","      <td>-0.720330</td>\n","      <td>0.138850</td>\n","      <td>0.143815</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>74659</th>\n","      <td>-0.126192</td>\n","      <td>-0.147636</td>\n","      <td>-0.001250</td>\n","      <td>0.006266</td>\n","      <td>0.000000</td>\n","      <td>0.183253</td>\n","      <td>0.281329</td>\n","      <td>-0.000098</td>\n","      <td>-0.114350</td>\n","      <td>-0.020999</td>\n","      <td>-0.108241</td>\n","      <td>0.178573</td>\n","    </tr>\n","    <tr>\n","      <th>74660</th>\n","      <td>-0.093788</td>\n","      <td>0.133531</td>\n","      <td>0.003230</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-0.021939</td>\n","      <td>0.275821</td>\n","      <td>-0.000393</td>\n","      <td>-0.126718</td>\n","      <td>0.051505</td>\n","      <td>-0.015961</td>\n","      <td>0.188093</td>\n","    </tr>\n","    <tr>\n","      <th>74661</th>\n","      <td>0.408807</td>\n","      <td>0.241162</td>\n","      <td>0.004017</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.004103</td>\n","      <td>0.385658</td>\n","      <td>0.001281</td>\n","      <td>-0.235796</td>\n","      <td>0.113865</td>\n","      <td>0.149389</td>\n","      <td>0.174225</td>\n","    </tr>\n","    <tr>\n","      <th>74662</th>\n","      <td>0.177838</td>\n","      <td>0.168623</td>\n","      <td>0.003581</td>\n","      <td>-0.004771</td>\n","      <td>0.000000</td>\n","      <td>0.018482</td>\n","      <td>-0.257566</td>\n","      <td>-0.004550</td>\n","      <td>-0.191984</td>\n","      <td>-0.076920</td>\n","      <td>0.143955</td>\n","      <td>0.176747</td>\n","    </tr>\n","    <tr>\n","      <th>74663</th>\n","      <td>-0.331817</td>\n","      <td>-0.265108</td>\n","      <td>-0.000897</td>\n","      <td>0.004490</td>\n","      <td>0.000000</td>\n","      <td>0.104266</td>\n","      <td>-0.529039</td>\n","      <td>-0.000395</td>\n","      <td>0.137939</td>\n","      <td>0.464547</td>\n","      <td>-0.037530</td>\n","      <td>0.168019</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>73440 rows × 12 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7677eddb-ffa4-4451-8ab1-182b04a8276a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7677eddb-ffa4-4451-8ab1-182b04a8276a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7677eddb-ffa4-4451-8ab1-182b04a8276a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c00c3fb2-f3f7-4aae-b727-1734b19f9e09\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c00c3fb2-f3f7-4aae-b727-1734b19f9e09')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c00c3fb2-f3f7-4aae-b727-1734b19f9e09 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_57e362d4-694f-4ec5-8c65-a53966a0ca0e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('test_iso')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_57e362d4-694f-4ec5-8c65-a53966a0ca0e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('test_iso');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":61}]},{"cell_type":"markdown","source":["# 5.columns 합치기"],"metadata":{"id":"N00_DKnKCOba"}},{"cell_type":"markdown","source":["## 1) 'zscore' = zscore 값 컬럼 만들기"],"metadata":{"id":"iRwmQc4nVjOA"}},{"cell_type":"code","source":["test['zscore'] = test_data['total_score']"],"metadata":{"id":"DMD_a8FCDqdN"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 2) 'predict_prob' = RandomForest 모델의 확률"],"metadata":{"id":"ToLT6ufnVt-l"}},{"cell_type":"code","source":["x_data = x.drop(['base_station', 'machine_id', 'month'], axis=1)"],"metadata":{"id":"f1OImF5WICvT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#test['predict_prob'] = rf_opt.predict_proba(x_data)\n","test['predict_prob'] = rf_opt.predict_proba(x_data)[:, 1]"],"metadata":{"id":"1Pec_8S3Ci4n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test[test['predict_prob']>0.5]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"IunUkZEZHftQ","executionInfo":{"status":"ok","timestamp":1704248738121,"user_tz":-540,"elapsed":759,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"55caeadf-6fea-4ae4-b62f-b84b90055f4c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      base_station machine_id  month  day  hour  dayofweek  weekday  \\\n","231         MA1074   MA1074_4      9   10    15          4        1   \n","232         MA1074   MA1074_4      9   10    16          4        1   \n","500         MA1074   MA1074_4      9   21    20          1        1   \n","693         MA1074   MA1074_4      9   29    21          2        1   \n","717         MA1074   MA1074_4      9   30    21          3        1   \n","...            ...        ...    ...  ...   ...        ...      ...   \n","74541       MA2561  MA2561_18     10   26    21          1        1   \n","74542       MA2561  MA2561_18     10   26    22          1        1   \n","74543       MA2561  MA2561_18     10   26    23          1        1   \n","74564       MA2561  MA2561_18     10   27    20          2        1   \n","74565       MA2561  MA2561_18     10   27    21          2        1   \n","\n","       day_night  commute_time  holiday  ...  machine_id_MA2467_5  \\\n","231            1             0        0  ...                  0.0   \n","232            1             0        0  ...                  0.0   \n","500            1             0        1  ...                  0.0   \n","693            1             0        0  ...                  0.0   \n","717            1             0        0  ...                  0.0   \n","...          ...           ...      ...  ...                  ...   \n","74541          1             0        0  ...                  0.0   \n","74542          1             0        0  ...                  0.0   \n","74543          1             0        0  ...                  0.0   \n","74564          1             0        0  ...                  0.0   \n","74565          1             0        0  ...                  0.0   \n","\n","       machine_id_MA2488_4  machine_id_MA2490_7  machine_id_MA2523_8  \\\n","231                    0.0                  0.0                  0.0   \n","232                    0.0                  0.0                  0.0   \n","500                    0.0                  0.0                  0.0   \n","693                    0.0                  0.0                  0.0   \n","717                    0.0                  0.0                  0.0   \n","...                    ...                  ...                  ...   \n","74541                  0.0                  0.0                  0.0   \n","74542                  0.0                  0.0                  0.0   \n","74543                  0.0                  0.0                  0.0   \n","74564                  0.0                  0.0                  0.0   \n","74565                  0.0                  0.0                  0.0   \n","\n","       machine_id_MA2559_37  machine_id_MA2561_18  month_9  month_10  \\\n","231                     0.0                   0.0      1.0       0.0   \n","232                     0.0                   0.0      1.0       0.0   \n","500                     0.0                   0.0      1.0       0.0   \n","693                     0.0                   0.0      1.0       0.0   \n","717                     0.0                   0.0      1.0       0.0   \n","...                     ...                   ...      ...       ...   \n","74541                   0.0                   1.0      0.0       1.0   \n","74542                   0.0                   1.0      0.0       1.0   \n","74543                   0.0                   1.0      0.0       1.0   \n","74564                   0.0                   1.0      0.0       1.0   \n","74565                   0.0                   1.0      0.0       1.0   \n","\n","         zscore  predict_prob  \n","231    0.000000      0.501886  \n","232    0.000000      0.659462  \n","500    0.000000      0.588440  \n","693    0.000000      0.599754  \n","717    0.000000      0.588880  \n","...         ...           ...  \n","74541  0.181818      0.840940  \n","74542  0.272727      0.533871  \n","74543  0.454545      0.614503  \n","74564  0.000000      0.671069  \n","74565  0.000000      0.721257  \n","\n","[9081 rows x 131 columns]"],"text/html":["\n","  <div id=\"df-9d395706-ab32-4fb9-ba08-58722e3d4f53\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>base_station</th>\n","      <th>machine_id</th>\n","      <th>month</th>\n","      <th>day</th>\n","      <th>hour</th>\n","      <th>dayofweek</th>\n","      <th>weekday</th>\n","      <th>day_night</th>\n","      <th>commute_time</th>\n","      <th>holiday</th>\n","      <th>...</th>\n","      <th>machine_id_MA2467_5</th>\n","      <th>machine_id_MA2488_4</th>\n","      <th>machine_id_MA2490_7</th>\n","      <th>machine_id_MA2523_8</th>\n","      <th>machine_id_MA2559_37</th>\n","      <th>machine_id_MA2561_18</th>\n","      <th>month_9</th>\n","      <th>month_10</th>\n","      <th>zscore</th>\n","      <th>predict_prob</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>231</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>15</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.501886</td>\n","    </tr>\n","    <tr>\n","      <th>232</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>16</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.659462</td>\n","    </tr>\n","    <tr>\n","      <th>500</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>9</td>\n","      <td>21</td>\n","      <td>20</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.588440</td>\n","    </tr>\n","    <tr>\n","      <th>693</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>9</td>\n","      <td>29</td>\n","      <td>21</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.599754</td>\n","    </tr>\n","    <tr>\n","      <th>717</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>9</td>\n","      <td>30</td>\n","      <td>21</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.588880</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>74541</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>10</td>\n","      <td>26</td>\n","      <td>21</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.181818</td>\n","      <td>0.840940</td>\n","    </tr>\n","    <tr>\n","      <th>74542</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>10</td>\n","      <td>26</td>\n","      <td>22</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.272727</td>\n","      <td>0.533871</td>\n","    </tr>\n","    <tr>\n","      <th>74543</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>10</td>\n","      <td>26</td>\n","      <td>23</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.454545</td>\n","      <td>0.614503</td>\n","    </tr>\n","    <tr>\n","      <th>74564</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>10</td>\n","      <td>27</td>\n","      <td>20</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>0.671069</td>\n","    </tr>\n","    <tr>\n","      <th>74565</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>10</td>\n","      <td>27</td>\n","      <td>21</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>0.721257</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>9081 rows × 131 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d395706-ab32-4fb9-ba08-58722e3d4f53')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9d395706-ab32-4fb9-ba08-58722e3d4f53 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9d395706-ab32-4fb9-ba08-58722e3d4f53');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-84f7936a-c36a-4744-b479-47128a0f8924\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-84f7936a-c36a-4744-b479-47128a0f8924')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-84f7936a-c36a-4744-b479-47128a0f8924 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":83}]},{"cell_type":"markdown","source":["## 3) 'isolation_scores' = IsolationForest 모델의 score값"],"metadata":{"id":"7oaoewZGWMXu"}},{"cell_type":"code","source":["test['isolation_scores'] = test_iso[\"isolation_scores\"]"],"metadata":{"id":"5VxoldG00JRV"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 4) 데이터 프레임 Join\n","\n","- 원본 데이터(대시보드에 필요한 데이터) + 3가지 score값 ('zscore',\t'predict_prob',\t'isolation_scores')"],"metadata":{"id":"7iK2VY0PWWfs"}},{"cell_type":"code","source":["need_col = ['zscore',\t'predict_prob',\t'isolation_scores']\n","final_score = pd.DataFrame(test[need_col])\n","final_score"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"kFQVNH9MUbWQ","executionInfo":{"status":"ok","timestamp":1704253085991,"user_tz":-540,"elapsed":549,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"e67a401f-6e75-48b8-9a22-0bfaecd14358"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       zscore  predict_prob  isolation_scores\n","24        0.0      0.000154          0.173112\n","25        0.0      0.000000          0.135776\n","26        0.0      0.000000          0.163965\n","27        0.0      0.000000          0.172960\n","28        0.0      0.010000          0.143815\n","...       ...           ...               ...\n","74659     0.0      0.048298          0.178573\n","74660     0.0      0.023417          0.188093\n","74661     0.0      0.028169          0.174225\n","74662     0.0      0.023837          0.176747\n","74663     0.0      0.047646          0.168019\n","\n","[73440 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-43e57db0-caf7-47fa-b206-0f0d5ccc5c68\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>zscore</th>\n","      <th>predict_prob</th>\n","      <th>isolation_scores</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>24</th>\n","      <td>0.0</td>\n","      <td>0.000154</td>\n","      <td>0.173112</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.135776</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.163965</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.172960</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>0.0</td>\n","      <td>0.010000</td>\n","      <td>0.143815</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>74659</th>\n","      <td>0.0</td>\n","      <td>0.048298</td>\n","      <td>0.178573</td>\n","    </tr>\n","    <tr>\n","      <th>74660</th>\n","      <td>0.0</td>\n","      <td>0.023417</td>\n","      <td>0.188093</td>\n","    </tr>\n","    <tr>\n","      <th>74661</th>\n","      <td>0.0</td>\n","      <td>0.028169</td>\n","      <td>0.174225</td>\n","    </tr>\n","    <tr>\n","      <th>74662</th>\n","      <td>0.0</td>\n","      <td>0.023837</td>\n","      <td>0.176747</td>\n","    </tr>\n","    <tr>\n","      <th>74663</th>\n","      <td>0.0</td>\n","      <td>0.047646</td>\n","      <td>0.168019</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>73440 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-43e57db0-caf7-47fa-b206-0f0d5ccc5c68')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-43e57db0-caf7-47fa-b206-0f0d5ccc5c68 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-43e57db0-caf7-47fa-b206-0f0d5ccc5c68');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-66a0f222-e2a5-4025-a6e0-429dfa642dbc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-66a0f222-e2a5-4025-a6e0-429dfa642dbc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-66a0f222-e2a5-4025-a6e0-429dfa642dbc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_62a55c36-05dc-41b0-bc2f-26f94de71c21\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('final_score')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_62a55c36-05dc-41b0-bc2f-26f94de71c21 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('final_score');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":90}]},{"cell_type":"code","source":["data_50 = pd.read_csv('/content/drive/MyDrive/ASAC_데이터분석/ASAC_최종프로젝트(예지보전)/data_50.csv')\n","data_50"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"11uVfYsHa-lh","executionInfo":{"status":"ok","timestamp":1704253506000,"user_tz":-540,"elapsed":1667,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"a1016e8d-a786-4d94-a660-a1f7b7878276"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      base_station machine_id        data  hour  connect_avg  connect_max  \\\n","0           MA1074   MA1074_4  2021-09-01     0    17.598889    32.000000   \n","1           MA1074   MA1074_4  2021-09-01     1    13.039444    25.000000   \n","2           MA1074   MA1074_4  2021-09-01     2    10.153889    23.000000   \n","3           MA1074   MA1074_4  2021-09-01     3     8.117240    19.141172   \n","4           MA1074   MA1074_4  2021-09-01     4     9.346667    21.000000   \n","...            ...        ...         ...   ...          ...          ...   \n","74659       MA2561  MA2561_18  2021-10-31    19    29.702220    43.000000   \n","74660       MA2561  MA2561_18  2021-10-31    20    36.030560    63.000000   \n","74661       MA2561  MA2561_18  2021-10-31    21    50.123890    69.000000   \n","74662       MA2561  MA2561_18  2021-10-31    22    39.547780    57.000000   \n","74663       MA2561  MA2561_18  2021-10-31    23    37.228330    55.000000   \n","\n","       in_handover_rate  out_handover_rate  inter_handover_rate  lower_prb  \\\n","0             99.763033         100.000000           100.000000  30.361451   \n","1             99.661017          99.516908            99.367089  22.009545   \n","2             99.583333          99.411765           100.000000  16.333186   \n","3             99.648623         100.000707            99.863755  19.401709   \n","4            100.000000         100.000000           100.000000  24.041863   \n","...                 ...                ...                  ...        ...   \n","74659         99.312710         100.000000           100.000000  27.742690   \n","74660        100.000000         100.000000           100.000000  29.958410   \n","74661        100.000000         100.000000           100.000000  38.585600   \n","74662        100.000000          99.519230           100.000000  41.989620   \n","74663         99.509800         100.000000           100.000000  34.838730   \n","\n","       upper_prb  reconfig_rate  lower_bler  upper_bler       tot_et    y  \n","0      35.072902     101.157849    7.873696   11.028859  27753.51401  0.0  \n","1      30.845568     101.483722    6.947635   10.664447  19952.83154  0.0  \n","2      11.431835     101.656051    8.057850    9.488755  16330.00997  0.0  \n","3       9.749610     104.190781    8.775205   11.593777  13779.67478  0.0  \n","4      16.660100     106.972789    8.878345   12.315908  15947.12178  0.0  \n","...          ...            ...         ...         ...          ...  ...  \n","74659  10.711980     100.263800    7.586300    9.831098  60634.85000  0.0  \n","74660  16.532760     100.412600    6.234337    9.195488  72844.89000  0.0  \n","74661  17.819100     100.494700    6.015570    9.389188  88259.65000  0.0  \n","74662  11.855160     100.000000    6.886077   10.370870  81633.56000  0.0  \n","74663  14.345950     100.183800    7.051001   19.837020  65160.39000  0.0  \n","\n","[74664 rows x 16 columns]"],"text/html":["\n","  <div id=\"df-64670783-6e40-4921-adb8-3f379670c5af\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>base_station</th>\n","      <th>machine_id</th>\n","      <th>data</th>\n","      <th>hour</th>\n","      <th>connect_avg</th>\n","      <th>connect_max</th>\n","      <th>in_handover_rate</th>\n","      <th>out_handover_rate</th>\n","      <th>inter_handover_rate</th>\n","      <th>lower_prb</th>\n","      <th>upper_prb</th>\n","      <th>reconfig_rate</th>\n","      <th>lower_bler</th>\n","      <th>upper_bler</th>\n","      <th>tot_et</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-01</td>\n","      <td>0</td>\n","      <td>17.598889</td>\n","      <td>32.000000</td>\n","      <td>99.763033</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>30.361451</td>\n","      <td>35.072902</td>\n","      <td>101.157849</td>\n","      <td>7.873696</td>\n","      <td>11.028859</td>\n","      <td>27753.51401</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-01</td>\n","      <td>1</td>\n","      <td>13.039444</td>\n","      <td>25.000000</td>\n","      <td>99.661017</td>\n","      <td>99.516908</td>\n","      <td>99.367089</td>\n","      <td>22.009545</td>\n","      <td>30.845568</td>\n","      <td>101.483722</td>\n","      <td>6.947635</td>\n","      <td>10.664447</td>\n","      <td>19952.83154</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-01</td>\n","      <td>2</td>\n","      <td>10.153889</td>\n","      <td>23.000000</td>\n","      <td>99.583333</td>\n","      <td>99.411765</td>\n","      <td>100.000000</td>\n","      <td>16.333186</td>\n","      <td>11.431835</td>\n","      <td>101.656051</td>\n","      <td>8.057850</td>\n","      <td>9.488755</td>\n","      <td>16330.00997</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-01</td>\n","      <td>3</td>\n","      <td>8.117240</td>\n","      <td>19.141172</td>\n","      <td>99.648623</td>\n","      <td>100.000707</td>\n","      <td>99.863755</td>\n","      <td>19.401709</td>\n","      <td>9.749610</td>\n","      <td>104.190781</td>\n","      <td>8.775205</td>\n","      <td>11.593777</td>\n","      <td>13779.67478</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-01</td>\n","      <td>4</td>\n","      <td>9.346667</td>\n","      <td>21.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>24.041863</td>\n","      <td>16.660100</td>\n","      <td>106.972789</td>\n","      <td>8.878345</td>\n","      <td>12.315908</td>\n","      <td>15947.12178</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>74659</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>19</td>\n","      <td>29.702220</td>\n","      <td>43.000000</td>\n","      <td>99.312710</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>27.742690</td>\n","      <td>10.711980</td>\n","      <td>100.263800</td>\n","      <td>7.586300</td>\n","      <td>9.831098</td>\n","      <td>60634.85000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>74660</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>20</td>\n","      <td>36.030560</td>\n","      <td>63.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>29.958410</td>\n","      <td>16.532760</td>\n","      <td>100.412600</td>\n","      <td>6.234337</td>\n","      <td>9.195488</td>\n","      <td>72844.89000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>74661</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>21</td>\n","      <td>50.123890</td>\n","      <td>69.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>38.585600</td>\n","      <td>17.819100</td>\n","      <td>100.494700</td>\n","      <td>6.015570</td>\n","      <td>9.389188</td>\n","      <td>88259.65000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>74662</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>22</td>\n","      <td>39.547780</td>\n","      <td>57.000000</td>\n","      <td>100.000000</td>\n","      <td>99.519230</td>\n","      <td>100.000000</td>\n","      <td>41.989620</td>\n","      <td>11.855160</td>\n","      <td>100.000000</td>\n","      <td>6.886077</td>\n","      <td>10.370870</td>\n","      <td>81633.56000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>74663</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>23</td>\n","      <td>37.228330</td>\n","      <td>55.000000</td>\n","      <td>99.509800</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>34.838730</td>\n","      <td>14.345950</td>\n","      <td>100.183800</td>\n","      <td>7.051001</td>\n","      <td>19.837020</td>\n","      <td>65160.39000</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>74664 rows × 16 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-64670783-6e40-4921-adb8-3f379670c5af')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-64670783-6e40-4921-adb8-3f379670c5af button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-64670783-6e40-4921-adb8-3f379670c5af');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a00f5f5c-2891-46ce-a1e6-694988f723b8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a00f5f5c-2891-46ce-a1e6-694988f723b8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a00f5f5c-2891-46ce-a1e6-694988f723b8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_6cd8366a-3727-44e1-8141-ecf9492ec511\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data_50')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6cd8366a-3727-44e1-8141-ecf9492ec511 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data_50');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":91}]},{"cell_type":"code","source":["final_data_50 = data_50.join(final_score, how='left')\n","final_data_50"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"TbKAi1kBJXTo","executionInfo":{"status":"ok","timestamp":1704254037660,"user_tz":-540,"elapsed":453,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"da40a279-2eaa-4e22-c7b3-67da02c46b09"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      base_station machine_id        data  hour  connect_avg  connect_max  \\\n","0           MA1074   MA1074_4  2021-09-01     0    17.598889    32.000000   \n","1           MA1074   MA1074_4  2021-09-01     1    13.039444    25.000000   \n","2           MA1074   MA1074_4  2021-09-01     2    10.153889    23.000000   \n","3           MA1074   MA1074_4  2021-09-01     3     8.117240    19.141172   \n","4           MA1074   MA1074_4  2021-09-01     4     9.346667    21.000000   \n","...            ...        ...         ...   ...          ...          ...   \n","74659       MA2561  MA2561_18  2021-10-31    19    29.702220    43.000000   \n","74660       MA2561  MA2561_18  2021-10-31    20    36.030560    63.000000   \n","74661       MA2561  MA2561_18  2021-10-31    21    50.123890    69.000000   \n","74662       MA2561  MA2561_18  2021-10-31    22    39.547780    57.000000   \n","74663       MA2561  MA2561_18  2021-10-31    23    37.228330    55.000000   \n","\n","       in_handover_rate  out_handover_rate  inter_handover_rate  lower_prb  \\\n","0             99.763033         100.000000           100.000000  30.361451   \n","1             99.661017          99.516908            99.367089  22.009545   \n","2             99.583333          99.411765           100.000000  16.333186   \n","3             99.648623         100.000707            99.863755  19.401709   \n","4            100.000000         100.000000           100.000000  24.041863   \n","...                 ...                ...                  ...        ...   \n","74659         99.312710         100.000000           100.000000  27.742690   \n","74660        100.000000         100.000000           100.000000  29.958410   \n","74661        100.000000         100.000000           100.000000  38.585600   \n","74662        100.000000          99.519230           100.000000  41.989620   \n","74663         99.509800         100.000000           100.000000  34.838730   \n","\n","       upper_prb  reconfig_rate  lower_bler  upper_bler       tot_et    y  \\\n","0      35.072902     101.157849    7.873696   11.028859  27753.51401  0.0   \n","1      30.845568     101.483722    6.947635   10.664447  19952.83154  0.0   \n","2      11.431835     101.656051    8.057850    9.488755  16330.00997  0.0   \n","3       9.749610     104.190781    8.775205   11.593777  13779.67478  0.0   \n","4      16.660100     106.972789    8.878345   12.315908  15947.12178  0.0   \n","...          ...            ...         ...         ...          ...  ...   \n","74659  10.711980     100.263800    7.586300    9.831098  60634.85000  0.0   \n","74660  16.532760     100.412600    6.234337    9.195488  72844.89000  0.0   \n","74661  17.819100     100.494700    6.015570    9.389188  88259.65000  0.0   \n","74662  11.855160     100.000000    6.886077   10.370870  81633.56000  0.0   \n","74663  14.345950     100.183800    7.051001   19.837020  65160.39000  0.0   \n","\n","       zscore  predict_prob  isolation_scores  \n","0         NaN           NaN               NaN  \n","1         NaN           NaN               NaN  \n","2         NaN           NaN               NaN  \n","3         NaN           NaN               NaN  \n","4         NaN           NaN               NaN  \n","...       ...           ...               ...  \n","74659     0.0      0.048298          0.178573  \n","74660     0.0      0.023417          0.188093  \n","74661     0.0      0.028169          0.174225  \n","74662     0.0      0.023837          0.176747  \n","74663     0.0      0.047646          0.168019  \n","\n","[74664 rows x 19 columns]"],"text/html":["\n","  <div id=\"df-b4ee2b10-6068-4c59-bf75-a6329e6d1ecc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>base_station</th>\n","      <th>machine_id</th>\n","      <th>data</th>\n","      <th>hour</th>\n","      <th>connect_avg</th>\n","      <th>connect_max</th>\n","      <th>in_handover_rate</th>\n","      <th>out_handover_rate</th>\n","      <th>inter_handover_rate</th>\n","      <th>lower_prb</th>\n","      <th>upper_prb</th>\n","      <th>reconfig_rate</th>\n","      <th>lower_bler</th>\n","      <th>upper_bler</th>\n","      <th>tot_et</th>\n","      <th>y</th>\n","      <th>zscore</th>\n","      <th>predict_prob</th>\n","      <th>isolation_scores</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-01</td>\n","      <td>0</td>\n","      <td>17.598889</td>\n","      <td>32.000000</td>\n","      <td>99.763033</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>30.361451</td>\n","      <td>35.072902</td>\n","      <td>101.157849</td>\n","      <td>7.873696</td>\n","      <td>11.028859</td>\n","      <td>27753.51401</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-01</td>\n","      <td>1</td>\n","      <td>13.039444</td>\n","      <td>25.000000</td>\n","      <td>99.661017</td>\n","      <td>99.516908</td>\n","      <td>99.367089</td>\n","      <td>22.009545</td>\n","      <td>30.845568</td>\n","      <td>101.483722</td>\n","      <td>6.947635</td>\n","      <td>10.664447</td>\n","      <td>19952.83154</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-01</td>\n","      <td>2</td>\n","      <td>10.153889</td>\n","      <td>23.000000</td>\n","      <td>99.583333</td>\n","      <td>99.411765</td>\n","      <td>100.000000</td>\n","      <td>16.333186</td>\n","      <td>11.431835</td>\n","      <td>101.656051</td>\n","      <td>8.057850</td>\n","      <td>9.488755</td>\n","      <td>16330.00997</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-01</td>\n","      <td>3</td>\n","      <td>8.117240</td>\n","      <td>19.141172</td>\n","      <td>99.648623</td>\n","      <td>100.000707</td>\n","      <td>99.863755</td>\n","      <td>19.401709</td>\n","      <td>9.749610</td>\n","      <td>104.190781</td>\n","      <td>8.775205</td>\n","      <td>11.593777</td>\n","      <td>13779.67478</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-01</td>\n","      <td>4</td>\n","      <td>9.346667</td>\n","      <td>21.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>24.041863</td>\n","      <td>16.660100</td>\n","      <td>106.972789</td>\n","      <td>8.878345</td>\n","      <td>12.315908</td>\n","      <td>15947.12178</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>74659</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>19</td>\n","      <td>29.702220</td>\n","      <td>43.000000</td>\n","      <td>99.312710</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>27.742690</td>\n","      <td>10.711980</td>\n","      <td>100.263800</td>\n","      <td>7.586300</td>\n","      <td>9.831098</td>\n","      <td>60634.85000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.048298</td>\n","      <td>0.178573</td>\n","    </tr>\n","    <tr>\n","      <th>74660</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>20</td>\n","      <td>36.030560</td>\n","      <td>63.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>29.958410</td>\n","      <td>16.532760</td>\n","      <td>100.412600</td>\n","      <td>6.234337</td>\n","      <td>9.195488</td>\n","      <td>72844.89000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.023417</td>\n","      <td>0.188093</td>\n","    </tr>\n","    <tr>\n","      <th>74661</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>21</td>\n","      <td>50.123890</td>\n","      <td>69.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>38.585600</td>\n","      <td>17.819100</td>\n","      <td>100.494700</td>\n","      <td>6.015570</td>\n","      <td>9.389188</td>\n","      <td>88259.65000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.028169</td>\n","      <td>0.174225</td>\n","    </tr>\n","    <tr>\n","      <th>74662</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>22</td>\n","      <td>39.547780</td>\n","      <td>57.000000</td>\n","      <td>100.000000</td>\n","      <td>99.519230</td>\n","      <td>100.000000</td>\n","      <td>41.989620</td>\n","      <td>11.855160</td>\n","      <td>100.000000</td>\n","      <td>6.886077</td>\n","      <td>10.370870</td>\n","      <td>81633.56000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.023837</td>\n","      <td>0.176747</td>\n","    </tr>\n","    <tr>\n","      <th>74663</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>23</td>\n","      <td>37.228330</td>\n","      <td>55.000000</td>\n","      <td>99.509800</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>34.838730</td>\n","      <td>14.345950</td>\n","      <td>100.183800</td>\n","      <td>7.051001</td>\n","      <td>19.837020</td>\n","      <td>65160.39000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.047646</td>\n","      <td>0.168019</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>74664 rows × 19 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b4ee2b10-6068-4c59-bf75-a6329e6d1ecc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b4ee2b10-6068-4c59-bf75-a6329e6d1ecc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b4ee2b10-6068-4c59-bf75-a6329e6d1ecc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-312f4f7a-3806-4ee9-bead-de2303f43a9e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-312f4f7a-3806-4ee9-bead-de2303f43a9e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-312f4f7a-3806-4ee9-bead-de2303f43a9e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_916be97e-28ff-4282-89fd-45d1284312d4\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('final_data_50')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_916be97e-28ff-4282-89fd-45d1284312d4 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('final_data_50');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":92}]},{"cell_type":"code","source":["final_data_50 = final_data_50.dropna()\n","final_data_50"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"8zwTWaRpdNq3","executionInfo":{"status":"ok","timestamp":1704254234957,"user_tz":-540,"elapsed":440,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"27040736-bd4e-4cf3-cca8-845013a76424"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      base_station machine_id        data  hour  connect_avg  connect_max  \\\n","24          MA1074   MA1074_4  2021-09-02     0    17.301111    34.000000   \n","25          MA1074   MA1074_4  2021-09-02     1    12.483889    24.000000   \n","26          MA1074   MA1074_4  2021-09-02     2    10.847636    19.388567   \n","27          MA1074   MA1074_4  2021-09-02     3    10.440000    19.000000   \n","28          MA1074   MA1074_4  2021-09-02     4    11.329098    23.074076   \n","...            ...        ...         ...   ...          ...          ...   \n","74659       MA2561  MA2561_18  2021-10-31    19    29.702220    43.000000   \n","74660       MA2561  MA2561_18  2021-10-31    20    36.030560    63.000000   \n","74661       MA2561  MA2561_18  2021-10-31    21    50.123890    69.000000   \n","74662       MA2561  MA2561_18  2021-10-31    22    39.547780    57.000000   \n","74663       MA2561  MA2561_18  2021-10-31    23    37.228330    55.000000   \n","\n","       in_handover_rate  out_handover_rate  inter_handover_rate  lower_prb  \\\n","24            99.442379         100.000000           100.000000  26.585263   \n","25            67.748918         100.000000           100.000000  23.967457   \n","26            93.015051          99.975567            99.862681  21.627610   \n","27           100.000000         100.000000           100.000000  19.658336   \n","28            92.488575          99.973506            99.862602  16.353646   \n","...                 ...                ...                  ...        ...   \n","74659         99.312710         100.000000           100.000000  27.742690   \n","74660        100.000000         100.000000           100.000000  29.958410   \n","74661        100.000000         100.000000           100.000000  38.585600   \n","74662        100.000000          99.519230           100.000000  41.989620   \n","74663         99.509800         100.000000           100.000000  34.838730   \n","\n","       upper_prb  reconfig_rate  lower_bler  upper_bler        tot_et    y  \\\n","24     13.267881     103.125751    8.382509   10.766707  34314.538040  0.0   \n","25     11.701236     103.093084    8.584479   18.586867  19018.563680  0.0   \n","26      7.003767     102.408908    9.167132   15.054471  12254.762819  0.0   \n","27      5.830171     102.490867    8.904559    7.591039  15447.828170  0.0   \n","28      4.196933     106.743578    9.179658    5.479409  18322.623033  0.0   \n","...          ...            ...         ...         ...           ...  ...   \n","74659  10.711980     100.263800    7.586300    9.831098  60634.850000  0.0   \n","74660  16.532760     100.412600    6.234337    9.195488  72844.890000  0.0   \n","74661  17.819100     100.494700    6.015570    9.389188  88259.650000  0.0   \n","74662  11.855160     100.000000    6.886077   10.370870  81633.560000  0.0   \n","74663  14.345950     100.183800    7.051001   19.837020  65160.390000  0.0   \n","\n","       zscore  predict_prob  isolation_scores  \n","24        0.0      0.000154          0.173112  \n","25        0.0      0.000000          0.135776  \n","26        0.0      0.000000          0.163965  \n","27        0.0      0.000000          0.172960  \n","28        0.0      0.010000          0.143815  \n","...       ...           ...               ...  \n","74659     0.0      0.048298          0.178573  \n","74660     0.0      0.023417          0.188093  \n","74661     0.0      0.028169          0.174225  \n","74662     0.0      0.023837          0.176747  \n","74663     0.0      0.047646          0.168019  \n","\n","[73440 rows x 19 columns]"],"text/html":["\n","  <div id=\"df-ac71cc50-96e7-4d8d-a69d-dbe7f4440e87\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>base_station</th>\n","      <th>machine_id</th>\n","      <th>data</th>\n","      <th>hour</th>\n","      <th>connect_avg</th>\n","      <th>connect_max</th>\n","      <th>in_handover_rate</th>\n","      <th>out_handover_rate</th>\n","      <th>inter_handover_rate</th>\n","      <th>lower_prb</th>\n","      <th>upper_prb</th>\n","      <th>reconfig_rate</th>\n","      <th>lower_bler</th>\n","      <th>upper_bler</th>\n","      <th>tot_et</th>\n","      <th>y</th>\n","      <th>zscore</th>\n","      <th>predict_prob</th>\n","      <th>isolation_scores</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>24</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-02</td>\n","      <td>0</td>\n","      <td>17.301111</td>\n","      <td>34.000000</td>\n","      <td>99.442379</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>26.585263</td>\n","      <td>13.267881</td>\n","      <td>103.125751</td>\n","      <td>8.382509</td>\n","      <td>10.766707</td>\n","      <td>34314.538040</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000154</td>\n","      <td>0.173112</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-02</td>\n","      <td>1</td>\n","      <td>12.483889</td>\n","      <td>24.000000</td>\n","      <td>67.748918</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>23.967457</td>\n","      <td>11.701236</td>\n","      <td>103.093084</td>\n","      <td>8.584479</td>\n","      <td>18.586867</td>\n","      <td>19018.563680</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.135776</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-02</td>\n","      <td>2</td>\n","      <td>10.847636</td>\n","      <td>19.388567</td>\n","      <td>93.015051</td>\n","      <td>99.975567</td>\n","      <td>99.862681</td>\n","      <td>21.627610</td>\n","      <td>7.003767</td>\n","      <td>102.408908</td>\n","      <td>9.167132</td>\n","      <td>15.054471</td>\n","      <td>12254.762819</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.163965</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-02</td>\n","      <td>3</td>\n","      <td>10.440000</td>\n","      <td>19.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>19.658336</td>\n","      <td>5.830171</td>\n","      <td>102.490867</td>\n","      <td>8.904559</td>\n","      <td>7.591039</td>\n","      <td>15447.828170</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.172960</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-02</td>\n","      <td>4</td>\n","      <td>11.329098</td>\n","      <td>23.074076</td>\n","      <td>92.488575</td>\n","      <td>99.973506</td>\n","      <td>99.862602</td>\n","      <td>16.353646</td>\n","      <td>4.196933</td>\n","      <td>106.743578</td>\n","      <td>9.179658</td>\n","      <td>5.479409</td>\n","      <td>18322.623033</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.010000</td>\n","      <td>0.143815</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>74659</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>19</td>\n","      <td>29.702220</td>\n","      <td>43.000000</td>\n","      <td>99.312710</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>27.742690</td>\n","      <td>10.711980</td>\n","      <td>100.263800</td>\n","      <td>7.586300</td>\n","      <td>9.831098</td>\n","      <td>60634.850000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.048298</td>\n","      <td>0.178573</td>\n","    </tr>\n","    <tr>\n","      <th>74660</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>20</td>\n","      <td>36.030560</td>\n","      <td>63.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>29.958410</td>\n","      <td>16.532760</td>\n","      <td>100.412600</td>\n","      <td>6.234337</td>\n","      <td>9.195488</td>\n","      <td>72844.890000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.023417</td>\n","      <td>0.188093</td>\n","    </tr>\n","    <tr>\n","      <th>74661</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>21</td>\n","      <td>50.123890</td>\n","      <td>69.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>38.585600</td>\n","      <td>17.819100</td>\n","      <td>100.494700</td>\n","      <td>6.015570</td>\n","      <td>9.389188</td>\n","      <td>88259.650000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.028169</td>\n","      <td>0.174225</td>\n","    </tr>\n","    <tr>\n","      <th>74662</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>22</td>\n","      <td>39.547780</td>\n","      <td>57.000000</td>\n","      <td>100.000000</td>\n","      <td>99.519230</td>\n","      <td>100.000000</td>\n","      <td>41.989620</td>\n","      <td>11.855160</td>\n","      <td>100.000000</td>\n","      <td>6.886077</td>\n","      <td>10.370870</td>\n","      <td>81633.560000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.023837</td>\n","      <td>0.176747</td>\n","    </tr>\n","    <tr>\n","      <th>74663</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>23</td>\n","      <td>37.228330</td>\n","      <td>55.000000</td>\n","      <td>99.509800</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>34.838730</td>\n","      <td>14.345950</td>\n","      <td>100.183800</td>\n","      <td>7.051001</td>\n","      <td>19.837020</td>\n","      <td>65160.390000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.047646</td>\n","      <td>0.168019</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>73440 rows × 19 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ac71cc50-96e7-4d8d-a69d-dbe7f4440e87')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ac71cc50-96e7-4d8d-a69d-dbe7f4440e87 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ac71cc50-96e7-4d8d-a69d-dbe7f4440e87');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e2014708-c0d2-42d8-a9ec-b59635573a34\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e2014708-c0d2-42d8-a9ec-b59635573a34')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e2014708-c0d2-42d8-a9ec-b59635573a34 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2b606b30-35a0-4d75-8dd6-d1c63f6d829c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('final_data_50')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2b606b30-35a0-4d75-8dd6-d1c63f6d829c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('final_data_50');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":96}]},{"cell_type":"markdown","source":["## 5) score_avg 컬럼 생성\n","\n","- 'zscore', 'predict_prob', 'isolation_scores'의 평균 도출\n","- 문제: 0.5보다 큰 값이 존재하지않음"],"metadata":{"id":"YX2m5IfVXIrd"}},{"cell_type":"code","source":["final_data_50['score_avg'] = final_data_50[need_col].mean(axis=1)\n","final_data_50"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":726},"id":"zaeb3uycdjTd","executionInfo":{"status":"ok","timestamp":1704254624795,"user_tz":-540,"elapsed":437,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"932e3388-9e5a-4802-8162-3d88f2ffd74d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-97-613911da66fa>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  final_data_50['score_avg'] = final_data_50[need_col].mean(axis=1)\n"]},{"output_type":"execute_result","data":{"text/plain":["      base_station machine_id        data  hour  connect_avg  connect_max  \\\n","24          MA1074   MA1074_4  2021-09-02     0    17.301111    34.000000   \n","25          MA1074   MA1074_4  2021-09-02     1    12.483889    24.000000   \n","26          MA1074   MA1074_4  2021-09-02     2    10.847636    19.388567   \n","27          MA1074   MA1074_4  2021-09-02     3    10.440000    19.000000   \n","28          MA1074   MA1074_4  2021-09-02     4    11.329098    23.074076   \n","...            ...        ...         ...   ...          ...          ...   \n","74659       MA2561  MA2561_18  2021-10-31    19    29.702220    43.000000   \n","74660       MA2561  MA2561_18  2021-10-31    20    36.030560    63.000000   \n","74661       MA2561  MA2561_18  2021-10-31    21    50.123890    69.000000   \n","74662       MA2561  MA2561_18  2021-10-31    22    39.547780    57.000000   \n","74663       MA2561  MA2561_18  2021-10-31    23    37.228330    55.000000   \n","\n","       in_handover_rate  out_handover_rate  inter_handover_rate  lower_prb  \\\n","24            99.442379         100.000000           100.000000  26.585263   \n","25            67.748918         100.000000           100.000000  23.967457   \n","26            93.015051          99.975567            99.862681  21.627610   \n","27           100.000000         100.000000           100.000000  19.658336   \n","28            92.488575          99.973506            99.862602  16.353646   \n","...                 ...                ...                  ...        ...   \n","74659         99.312710         100.000000           100.000000  27.742690   \n","74660        100.000000         100.000000           100.000000  29.958410   \n","74661        100.000000         100.000000           100.000000  38.585600   \n","74662        100.000000          99.519230           100.000000  41.989620   \n","74663         99.509800         100.000000           100.000000  34.838730   \n","\n","       upper_prb  reconfig_rate  lower_bler  upper_bler        tot_et    y  \\\n","24     13.267881     103.125751    8.382509   10.766707  34314.538040  0.0   \n","25     11.701236     103.093084    8.584479   18.586867  19018.563680  0.0   \n","26      7.003767     102.408908    9.167132   15.054471  12254.762819  0.0   \n","27      5.830171     102.490867    8.904559    7.591039  15447.828170  0.0   \n","28      4.196933     106.743578    9.179658    5.479409  18322.623033  0.0   \n","...          ...            ...         ...         ...           ...  ...   \n","74659  10.711980     100.263800    7.586300    9.831098  60634.850000  0.0   \n","74660  16.532760     100.412600    6.234337    9.195488  72844.890000  0.0   \n","74661  17.819100     100.494700    6.015570    9.389188  88259.650000  0.0   \n","74662  11.855160     100.000000    6.886077   10.370870  81633.560000  0.0   \n","74663  14.345950     100.183800    7.051001   19.837020  65160.390000  0.0   \n","\n","       zscore  predict_prob  isolation_scores  score_avg  \n","24        0.0      0.000154          0.173112   0.057755  \n","25        0.0      0.000000          0.135776   0.045259  \n","26        0.0      0.000000          0.163965   0.054655  \n","27        0.0      0.000000          0.172960   0.057653  \n","28        0.0      0.010000          0.143815   0.051272  \n","...       ...           ...               ...        ...  \n","74659     0.0      0.048298          0.178573   0.075624  \n","74660     0.0      0.023417          0.188093   0.070503  \n","74661     0.0      0.028169          0.174225   0.067465  \n","74662     0.0      0.023837          0.176747   0.066861  \n","74663     0.0      0.047646          0.168019   0.071888  \n","\n","[73440 rows x 20 columns]"],"text/html":["\n","  <div id=\"df-52a4d5a4-ff45-4433-8bfd-3a095a2c3462\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>base_station</th>\n","      <th>machine_id</th>\n","      <th>data</th>\n","      <th>hour</th>\n","      <th>connect_avg</th>\n","      <th>connect_max</th>\n","      <th>in_handover_rate</th>\n","      <th>out_handover_rate</th>\n","      <th>inter_handover_rate</th>\n","      <th>lower_prb</th>\n","      <th>upper_prb</th>\n","      <th>reconfig_rate</th>\n","      <th>lower_bler</th>\n","      <th>upper_bler</th>\n","      <th>tot_et</th>\n","      <th>y</th>\n","      <th>zscore</th>\n","      <th>predict_prob</th>\n","      <th>isolation_scores</th>\n","      <th>score_avg</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>24</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-02</td>\n","      <td>0</td>\n","      <td>17.301111</td>\n","      <td>34.000000</td>\n","      <td>99.442379</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>26.585263</td>\n","      <td>13.267881</td>\n","      <td>103.125751</td>\n","      <td>8.382509</td>\n","      <td>10.766707</td>\n","      <td>34314.538040</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000154</td>\n","      <td>0.173112</td>\n","      <td>0.057755</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-02</td>\n","      <td>1</td>\n","      <td>12.483889</td>\n","      <td>24.000000</td>\n","      <td>67.748918</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>23.967457</td>\n","      <td>11.701236</td>\n","      <td>103.093084</td>\n","      <td>8.584479</td>\n","      <td>18.586867</td>\n","      <td>19018.563680</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.135776</td>\n","      <td>0.045259</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-02</td>\n","      <td>2</td>\n","      <td>10.847636</td>\n","      <td>19.388567</td>\n","      <td>93.015051</td>\n","      <td>99.975567</td>\n","      <td>99.862681</td>\n","      <td>21.627610</td>\n","      <td>7.003767</td>\n","      <td>102.408908</td>\n","      <td>9.167132</td>\n","      <td>15.054471</td>\n","      <td>12254.762819</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.163965</td>\n","      <td>0.054655</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-02</td>\n","      <td>3</td>\n","      <td>10.440000</td>\n","      <td>19.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>19.658336</td>\n","      <td>5.830171</td>\n","      <td>102.490867</td>\n","      <td>8.904559</td>\n","      <td>7.591039</td>\n","      <td>15447.828170</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.172960</td>\n","      <td>0.057653</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-02</td>\n","      <td>4</td>\n","      <td>11.329098</td>\n","      <td>23.074076</td>\n","      <td>92.488575</td>\n","      <td>99.973506</td>\n","      <td>99.862602</td>\n","      <td>16.353646</td>\n","      <td>4.196933</td>\n","      <td>106.743578</td>\n","      <td>9.179658</td>\n","      <td>5.479409</td>\n","      <td>18322.623033</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.010000</td>\n","      <td>0.143815</td>\n","      <td>0.051272</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>74659</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>19</td>\n","      <td>29.702220</td>\n","      <td>43.000000</td>\n","      <td>99.312710</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>27.742690</td>\n","      <td>10.711980</td>\n","      <td>100.263800</td>\n","      <td>7.586300</td>\n","      <td>9.831098</td>\n","      <td>60634.850000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.048298</td>\n","      <td>0.178573</td>\n","      <td>0.075624</td>\n","    </tr>\n","    <tr>\n","      <th>74660</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>20</td>\n","      <td>36.030560</td>\n","      <td>63.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>29.958410</td>\n","      <td>16.532760</td>\n","      <td>100.412600</td>\n","      <td>6.234337</td>\n","      <td>9.195488</td>\n","      <td>72844.890000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.023417</td>\n","      <td>0.188093</td>\n","      <td>0.070503</td>\n","    </tr>\n","    <tr>\n","      <th>74661</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>21</td>\n","      <td>50.123890</td>\n","      <td>69.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>38.585600</td>\n","      <td>17.819100</td>\n","      <td>100.494700</td>\n","      <td>6.015570</td>\n","      <td>9.389188</td>\n","      <td>88259.650000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.028169</td>\n","      <td>0.174225</td>\n","      <td>0.067465</td>\n","    </tr>\n","    <tr>\n","      <th>74662</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>22</td>\n","      <td>39.547780</td>\n","      <td>57.000000</td>\n","      <td>100.000000</td>\n","      <td>99.519230</td>\n","      <td>100.000000</td>\n","      <td>41.989620</td>\n","      <td>11.855160</td>\n","      <td>100.000000</td>\n","      <td>6.886077</td>\n","      <td>10.370870</td>\n","      <td>81633.560000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.023837</td>\n","      <td>0.176747</td>\n","      <td>0.066861</td>\n","    </tr>\n","    <tr>\n","      <th>74663</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>23</td>\n","      <td>37.228330</td>\n","      <td>55.000000</td>\n","      <td>99.509800</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>34.838730</td>\n","      <td>14.345950</td>\n","      <td>100.183800</td>\n","      <td>7.051001</td>\n","      <td>19.837020</td>\n","      <td>65160.390000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.047646</td>\n","      <td>0.168019</td>\n","      <td>0.071888</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>73440 rows × 20 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-52a4d5a4-ff45-4433-8bfd-3a095a2c3462')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-52a4d5a4-ff45-4433-8bfd-3a095a2c3462 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-52a4d5a4-ff45-4433-8bfd-3a095a2c3462');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1e049a8a-a8f9-476d-9b2e-e8c57d00f726\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1e049a8a-a8f9-476d-9b2e-e8c57d00f726')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1e049a8a-a8f9-476d-9b2e-e8c57d00f726 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_edb04c1c-b51c-4793-8c79-7cd295edc6a5\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('final_data_50')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_edb04c1c-b51c-4793-8c79-7cd295edc6a5 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('final_data_50');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":["final_data_50[final_data_50['score_avg'] > 0.5]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":73},"id":"CTHYMmEtfdBF","executionInfo":{"status":"ok","timestamp":1704254812866,"user_tz":-540,"elapsed":10,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"cb32b328-11cf-483d-fcda-07a15f1d4c8f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [base_station, machine_id, data, hour, connect_avg, connect_max, in_handover_rate, out_handover_rate, inter_handover_rate, lower_prb, upper_prb, reconfig_rate, lower_bler, upper_bler, tot_et, y, zscore, predict_prob, isolation_scores, score_avg]\n","Index: []"],"text/html":["\n","  <div id=\"df-5ed102e6-f941-4ee5-bed4-759ce03df651\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>base_station</th>\n","      <th>machine_id</th>\n","      <th>data</th>\n","      <th>hour</th>\n","      <th>connect_avg</th>\n","      <th>connect_max</th>\n","      <th>in_handover_rate</th>\n","      <th>out_handover_rate</th>\n","      <th>inter_handover_rate</th>\n","      <th>lower_prb</th>\n","      <th>upper_prb</th>\n","      <th>reconfig_rate</th>\n","      <th>lower_bler</th>\n","      <th>upper_bler</th>\n","      <th>tot_et</th>\n","      <th>y</th>\n","      <th>zscore</th>\n","      <th>predict_prob</th>\n","      <th>isolation_scores</th>\n","      <th>score_avg</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5ed102e6-f941-4ee5-bed4-759ce03df651')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5ed102e6-f941-4ee5-bed4-759ce03df651 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5ed102e6-f941-4ee5-bed4-759ce03df651');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":103}]},{"cell_type":"code","source":["final_data_50['score_avg'].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wpsMyF_ff4yA","executionInfo":{"status":"ok","timestamp":1704254910768,"user_tz":-540,"elapsed":431,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"e70e05d9-e354-41ec-d842-7ea6bfd692b5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    73440.000000\n","mean         0.111183\n","std          0.087007\n","min         -0.027454\n","25%          0.060543\n","50%          0.074854\n","75%          0.121036\n","max          0.434438\n","Name: score_avg, dtype: float64"]},"metadata":{},"execution_count":106}]},{"cell_type":"code","source":["final_data_50['score_avg'].plot(kind='hist',bins=100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"qOUHOXBEggRa","executionInfo":{"status":"ok","timestamp":1704254983399,"user_tz":-540,"elapsed":1064,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"8fc005b8-1877-4476-8abf-393981d93efc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='Frequency'>"]},"metadata":{},"execution_count":108},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["- 원본 데이터의 이상치 비율인 12%로 이상치 기준을 잡음\n","- 88%를 기준으로 더 크면 1(이상치) 작으면 0(정상)인 컬럼('anomaly_fin') 생성"],"metadata":{"id":"Mry5p2SjYH_b"}},{"cell_type":"code","source":["val = np.percentile(final_data_50['score_avg'], 88)"],"metadata":{"id":"-1lF8ltIgurA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["final_data_50['anomaly_fin'] = final_data_50['score_avg'].apply(lambda x: 1 if x > val else 0)\n","final_data_50"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":726},"id":"qrBL5z5Hmnsr","executionInfo":{"status":"ok","timestamp":1704256599058,"user_tz":-540,"elapsed":445,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"e6f2f80a-96e8-41c0-ce76-46f23eaadec8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-116-b5cab3035f1b>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  final_data_50['anomaly_fin'] = final_data_50['score_avg'].apply(lambda x: 1 if x > val else 0)\n"]},{"output_type":"execute_result","data":{"text/plain":["      base_station machine_id        data  hour  connect_avg  connect_max  \\\n","24          MA1074   MA1074_4  2021-09-02     0    17.301111    34.000000   \n","25          MA1074   MA1074_4  2021-09-02     1    12.483889    24.000000   \n","26          MA1074   MA1074_4  2021-09-02     2    10.847636    19.388567   \n","27          MA1074   MA1074_4  2021-09-02     3    10.440000    19.000000   \n","28          MA1074   MA1074_4  2021-09-02     4    11.329098    23.074076   \n","...            ...        ...         ...   ...          ...          ...   \n","74659       MA2561  MA2561_18  2021-10-31    19    29.702220    43.000000   \n","74660       MA2561  MA2561_18  2021-10-31    20    36.030560    63.000000   \n","74661       MA2561  MA2561_18  2021-10-31    21    50.123890    69.000000   \n","74662       MA2561  MA2561_18  2021-10-31    22    39.547780    57.000000   \n","74663       MA2561  MA2561_18  2021-10-31    23    37.228330    55.000000   \n","\n","       in_handover_rate  out_handover_rate  inter_handover_rate  lower_prb  \\\n","24            99.442379         100.000000           100.000000  26.585263   \n","25            67.748918         100.000000           100.000000  23.967457   \n","26            93.015051          99.975567            99.862681  21.627610   \n","27           100.000000         100.000000           100.000000  19.658336   \n","28            92.488575          99.973506            99.862602  16.353646   \n","...                 ...                ...                  ...        ...   \n","74659         99.312710         100.000000           100.000000  27.742690   \n","74660        100.000000         100.000000           100.000000  29.958410   \n","74661        100.000000         100.000000           100.000000  38.585600   \n","74662        100.000000          99.519230           100.000000  41.989620   \n","74663         99.509800         100.000000           100.000000  34.838730   \n","\n","       ...  reconfig_rate  lower_bler  upper_bler        tot_et    y  zscore  \\\n","24     ...     103.125751    8.382509   10.766707  34314.538040  0.0     0.0   \n","25     ...     103.093084    8.584479   18.586867  19018.563680  0.0     0.0   \n","26     ...     102.408908    9.167132   15.054471  12254.762819  0.0     0.0   \n","27     ...     102.490867    8.904559    7.591039  15447.828170  0.0     0.0   \n","28     ...     106.743578    9.179658    5.479409  18322.623033  0.0     0.0   \n","...    ...            ...         ...         ...           ...  ...     ...   \n","74659  ...     100.263800    7.586300    9.831098  60634.850000  0.0     0.0   \n","74660  ...     100.412600    6.234337    9.195488  72844.890000  0.0     0.0   \n","74661  ...     100.494700    6.015570    9.389188  88259.650000  0.0     0.0   \n","74662  ...     100.000000    6.886077   10.370870  81633.560000  0.0     0.0   \n","74663  ...     100.183800    7.051001   19.837020  65160.390000  0.0     0.0   \n","\n","       predict_prob  isolation_scores  score_avg  anomaly_fin  \n","24         0.000154          0.173112   0.057755            0  \n","25         0.000000          0.135776   0.045259            0  \n","26         0.000000          0.163965   0.054655            0  \n","27         0.000000          0.172960   0.057653            0  \n","28         0.010000          0.143815   0.051272            0  \n","...             ...               ...        ...          ...  \n","74659      0.048298          0.178573   0.075624            0  \n","74660      0.023417          0.188093   0.070503            0  \n","74661      0.028169          0.174225   0.067465            0  \n","74662      0.023837          0.176747   0.066861            0  \n","74663      0.047646          0.168019   0.071888            0  \n","\n","[73440 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-c6a5eddb-4c9e-4be6-bf89-832d93f063c6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>base_station</th>\n","      <th>machine_id</th>\n","      <th>data</th>\n","      <th>hour</th>\n","      <th>connect_avg</th>\n","      <th>connect_max</th>\n","      <th>in_handover_rate</th>\n","      <th>out_handover_rate</th>\n","      <th>inter_handover_rate</th>\n","      <th>lower_prb</th>\n","      <th>...</th>\n","      <th>reconfig_rate</th>\n","      <th>lower_bler</th>\n","      <th>upper_bler</th>\n","      <th>tot_et</th>\n","      <th>y</th>\n","      <th>zscore</th>\n","      <th>predict_prob</th>\n","      <th>isolation_scores</th>\n","      <th>score_avg</th>\n","      <th>anomaly_fin</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>24</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-02</td>\n","      <td>0</td>\n","      <td>17.301111</td>\n","      <td>34.000000</td>\n","      <td>99.442379</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>26.585263</td>\n","      <td>...</td>\n","      <td>103.125751</td>\n","      <td>8.382509</td>\n","      <td>10.766707</td>\n","      <td>34314.538040</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000154</td>\n","      <td>0.173112</td>\n","      <td>0.057755</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-02</td>\n","      <td>1</td>\n","      <td>12.483889</td>\n","      <td>24.000000</td>\n","      <td>67.748918</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>23.967457</td>\n","      <td>...</td>\n","      <td>103.093084</td>\n","      <td>8.584479</td>\n","      <td>18.586867</td>\n","      <td>19018.563680</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.135776</td>\n","      <td>0.045259</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-02</td>\n","      <td>2</td>\n","      <td>10.847636</td>\n","      <td>19.388567</td>\n","      <td>93.015051</td>\n","      <td>99.975567</td>\n","      <td>99.862681</td>\n","      <td>21.627610</td>\n","      <td>...</td>\n","      <td>102.408908</td>\n","      <td>9.167132</td>\n","      <td>15.054471</td>\n","      <td>12254.762819</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.163965</td>\n","      <td>0.054655</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-02</td>\n","      <td>3</td>\n","      <td>10.440000</td>\n","      <td>19.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>19.658336</td>\n","      <td>...</td>\n","      <td>102.490867</td>\n","      <td>8.904559</td>\n","      <td>7.591039</td>\n","      <td>15447.828170</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.172960</td>\n","      <td>0.057653</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-02</td>\n","      <td>4</td>\n","      <td>11.329098</td>\n","      <td>23.074076</td>\n","      <td>92.488575</td>\n","      <td>99.973506</td>\n","      <td>99.862602</td>\n","      <td>16.353646</td>\n","      <td>...</td>\n","      <td>106.743578</td>\n","      <td>9.179658</td>\n","      <td>5.479409</td>\n","      <td>18322.623033</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.010000</td>\n","      <td>0.143815</td>\n","      <td>0.051272</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>74659</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>19</td>\n","      <td>29.702220</td>\n","      <td>43.000000</td>\n","      <td>99.312710</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>27.742690</td>\n","      <td>...</td>\n","      <td>100.263800</td>\n","      <td>7.586300</td>\n","      <td>9.831098</td>\n","      <td>60634.850000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.048298</td>\n","      <td>0.178573</td>\n","      <td>0.075624</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>74660</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>20</td>\n","      <td>36.030560</td>\n","      <td>63.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>29.958410</td>\n","      <td>...</td>\n","      <td>100.412600</td>\n","      <td>6.234337</td>\n","      <td>9.195488</td>\n","      <td>72844.890000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.023417</td>\n","      <td>0.188093</td>\n","      <td>0.070503</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>74661</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>21</td>\n","      <td>50.123890</td>\n","      <td>69.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>38.585600</td>\n","      <td>...</td>\n","      <td>100.494700</td>\n","      <td>6.015570</td>\n","      <td>9.389188</td>\n","      <td>88259.650000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.028169</td>\n","      <td>0.174225</td>\n","      <td>0.067465</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>74662</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>22</td>\n","      <td>39.547780</td>\n","      <td>57.000000</td>\n","      <td>100.000000</td>\n","      <td>99.519230</td>\n","      <td>100.000000</td>\n","      <td>41.989620</td>\n","      <td>...</td>\n","      <td>100.000000</td>\n","      <td>6.886077</td>\n","      <td>10.370870</td>\n","      <td>81633.560000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.023837</td>\n","      <td>0.176747</td>\n","      <td>0.066861</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>74663</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-31</td>\n","      <td>23</td>\n","      <td>37.228330</td>\n","      <td>55.000000</td>\n","      <td>99.509800</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>34.838730</td>\n","      <td>...</td>\n","      <td>100.183800</td>\n","      <td>7.051001</td>\n","      <td>19.837020</td>\n","      <td>65160.390000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.047646</td>\n","      <td>0.168019</td>\n","      <td>0.071888</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>73440 rows × 21 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c6a5eddb-4c9e-4be6-bf89-832d93f063c6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c6a5eddb-4c9e-4be6-bf89-832d93f063c6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c6a5eddb-4c9e-4be6-bf89-832d93f063c6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-37ad82d1-c968-4016-b128-f5277f066283\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-37ad82d1-c968-4016-b128-f5277f066283')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-37ad82d1-c968-4016-b128-f5277f066283 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a41f5cd1-ba17-4da6-9700-0136f5396faa\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('final_data_50')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a41f5cd1-ba17-4da6-9700-0136f5396faa button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('final_data_50');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":116}]},{"cell_type":"code","source":["final_data_50[final_data_50['anomaly_fin']==1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"sZbpaiPemDL3","executionInfo":{"status":"ok","timestamp":1704256631299,"user_tz":-540,"elapsed":6,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"534bacf8-affa-4634-e778-d9cb838c6517"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      base_station machine_id        data  hour  connect_avg  connect_max  \\\n","232         MA1074   MA1074_4  2021-09-10    16    19.827778         35.0   \n","500         MA1074   MA1074_4  2021-09-21    20    15.280556         25.0   \n","693         MA1074   MA1074_4  2021-09-29    21    17.642778         35.0   \n","717         MA1074   MA1074_4  2021-09-30    21    24.922778         38.0   \n","934         MA1074   MA1074_4  2021-10-09    22    15.248889         32.0   \n","...            ...        ...         ...   ...          ...          ...   \n","74541       MA2561  MA2561_18  2021-10-26    21    26.029440         42.0   \n","74542       MA2561  MA2561_18  2021-10-26    22    30.500560         48.0   \n","74543       MA2561  MA2561_18  2021-10-26    23    13.999440         41.0   \n","74564       MA2561  MA2561_18  2021-10-27    20    42.609440         70.0   \n","74565       MA2561  MA2561_18  2021-10-27    21    28.915560         64.0   \n","\n","       in_handover_rate  out_handover_rate  inter_handover_rate  lower_prb  \\\n","232           99.389313          100.00000           100.000000  20.947824   \n","500           97.900763          100.00000           100.000000  20.422347   \n","693           99.253731          100.00000           100.000000  25.710512   \n","717           99.175258          100.00000           100.000000  40.193642   \n","934           99.161426          100.00000            99.504951  24.987710   \n","...                 ...                ...                  ...        ...   \n","74541         56.473210           99.53917           100.000000  32.022120   \n","74542         99.512200          100.00000           100.000000  36.691170   \n","74543          5.202629          100.00000           100.000000  25.964510   \n","74564         98.392280          100.00000           100.000000  39.578120   \n","74565         50.880280          100.00000           100.000000  35.557400   \n","\n","       ...  reconfig_rate  lower_bler  upper_bler       tot_et    y    zscore  \\\n","232    ...     100.162791    9.142950   24.261156  36965.12896  1.0  0.000000   \n","500    ...      99.896104   10.126370   12.007116  29379.17221  1.0  0.000000   \n","693    ...      97.872982    9.182275    7.982744  31741.44690  1.0  0.000000   \n","717    ...      98.441408    8.476217    8.133014  32326.40364  1.0  0.000000   \n","934    ...      97.192180    8.200913   12.223587  22826.25088  1.0  0.000000   \n","...    ...            ...         ...         ...          ...  ...       ...   \n","74541  ...     100.723400   21.934250   45.533220  53788.29000  1.0  0.181818   \n","74542  ...     100.102000   25.030030   53.631420  51302.41000  1.0  0.272727   \n","74543  ...     100.804500   46.494010   56.498210  27011.95000  1.0  0.454545   \n","74564  ...     100.372500   17.562480   46.985570  91206.66000  1.0  0.000000   \n","74565  ...     100.470600   28.368430   50.625460  51693.13000  1.0  0.000000   \n","\n","       predict_prob  isolation_scores  score_avg  anomaly_fin  \n","232        0.659462          0.177678   0.279047            1  \n","500        0.588440          0.168311   0.252250            1  \n","693        0.599754          0.183670   0.261141            1  \n","717        0.588880          0.172943   0.253941            1  \n","934        0.526941          0.177978   0.234973            1  \n","...             ...               ...        ...          ...  \n","74541      0.840940          0.046503   0.356420            1  \n","74542      0.533871         -0.032368   0.258077            1  \n","74543      0.614503         -0.136115   0.310978            1  \n","74564      0.671069          0.117990   0.263020            1  \n","74565      0.721257          0.169233   0.296830            1  \n","\n","[8813 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-8a94366d-074a-4667-9eea-aa67da935874\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>base_station</th>\n","      <th>machine_id</th>\n","      <th>data</th>\n","      <th>hour</th>\n","      <th>connect_avg</th>\n","      <th>connect_max</th>\n","      <th>in_handover_rate</th>\n","      <th>out_handover_rate</th>\n","      <th>inter_handover_rate</th>\n","      <th>lower_prb</th>\n","      <th>...</th>\n","      <th>reconfig_rate</th>\n","      <th>lower_bler</th>\n","      <th>upper_bler</th>\n","      <th>tot_et</th>\n","      <th>y</th>\n","      <th>zscore</th>\n","      <th>predict_prob</th>\n","      <th>isolation_scores</th>\n","      <th>score_avg</th>\n","      <th>anomaly_fin</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>232</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-10</td>\n","      <td>16</td>\n","      <td>19.827778</td>\n","      <td>35.0</td>\n","      <td>99.389313</td>\n","      <td>100.00000</td>\n","      <td>100.000000</td>\n","      <td>20.947824</td>\n","      <td>...</td>\n","      <td>100.162791</td>\n","      <td>9.142950</td>\n","      <td>24.261156</td>\n","      <td>36965.12896</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>0.659462</td>\n","      <td>0.177678</td>\n","      <td>0.279047</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>500</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-21</td>\n","      <td>20</td>\n","      <td>15.280556</td>\n","      <td>25.0</td>\n","      <td>97.900763</td>\n","      <td>100.00000</td>\n","      <td>100.000000</td>\n","      <td>20.422347</td>\n","      <td>...</td>\n","      <td>99.896104</td>\n","      <td>10.126370</td>\n","      <td>12.007116</td>\n","      <td>29379.17221</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>0.588440</td>\n","      <td>0.168311</td>\n","      <td>0.252250</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>693</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-29</td>\n","      <td>21</td>\n","      <td>17.642778</td>\n","      <td>35.0</td>\n","      <td>99.253731</td>\n","      <td>100.00000</td>\n","      <td>100.000000</td>\n","      <td>25.710512</td>\n","      <td>...</td>\n","      <td>97.872982</td>\n","      <td>9.182275</td>\n","      <td>7.982744</td>\n","      <td>31741.44690</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>0.599754</td>\n","      <td>0.183670</td>\n","      <td>0.261141</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>717</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-09-30</td>\n","      <td>21</td>\n","      <td>24.922778</td>\n","      <td>38.0</td>\n","      <td>99.175258</td>\n","      <td>100.00000</td>\n","      <td>100.000000</td>\n","      <td>40.193642</td>\n","      <td>...</td>\n","      <td>98.441408</td>\n","      <td>8.476217</td>\n","      <td>8.133014</td>\n","      <td>32326.40364</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>0.588880</td>\n","      <td>0.172943</td>\n","      <td>0.253941</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>934</th>\n","      <td>MA1074</td>\n","      <td>MA1074_4</td>\n","      <td>2021-10-09</td>\n","      <td>22</td>\n","      <td>15.248889</td>\n","      <td>32.0</td>\n","      <td>99.161426</td>\n","      <td>100.00000</td>\n","      <td>99.504951</td>\n","      <td>24.987710</td>\n","      <td>...</td>\n","      <td>97.192180</td>\n","      <td>8.200913</td>\n","      <td>12.223587</td>\n","      <td>22826.25088</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>0.526941</td>\n","      <td>0.177978</td>\n","      <td>0.234973</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>74541</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-26</td>\n","      <td>21</td>\n","      <td>26.029440</td>\n","      <td>42.0</td>\n","      <td>56.473210</td>\n","      <td>99.53917</td>\n","      <td>100.000000</td>\n","      <td>32.022120</td>\n","      <td>...</td>\n","      <td>100.723400</td>\n","      <td>21.934250</td>\n","      <td>45.533220</td>\n","      <td>53788.29000</td>\n","      <td>1.0</td>\n","      <td>0.181818</td>\n","      <td>0.840940</td>\n","      <td>0.046503</td>\n","      <td>0.356420</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>74542</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-26</td>\n","      <td>22</td>\n","      <td>30.500560</td>\n","      <td>48.0</td>\n","      <td>99.512200</td>\n","      <td>100.00000</td>\n","      <td>100.000000</td>\n","      <td>36.691170</td>\n","      <td>...</td>\n","      <td>100.102000</td>\n","      <td>25.030030</td>\n","      <td>53.631420</td>\n","      <td>51302.41000</td>\n","      <td>1.0</td>\n","      <td>0.272727</td>\n","      <td>0.533871</td>\n","      <td>-0.032368</td>\n","      <td>0.258077</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>74543</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-26</td>\n","      <td>23</td>\n","      <td>13.999440</td>\n","      <td>41.0</td>\n","      <td>5.202629</td>\n","      <td>100.00000</td>\n","      <td>100.000000</td>\n","      <td>25.964510</td>\n","      <td>...</td>\n","      <td>100.804500</td>\n","      <td>46.494010</td>\n","      <td>56.498210</td>\n","      <td>27011.95000</td>\n","      <td>1.0</td>\n","      <td>0.454545</td>\n","      <td>0.614503</td>\n","      <td>-0.136115</td>\n","      <td>0.310978</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>74564</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-27</td>\n","      <td>20</td>\n","      <td>42.609440</td>\n","      <td>70.0</td>\n","      <td>98.392280</td>\n","      <td>100.00000</td>\n","      <td>100.000000</td>\n","      <td>39.578120</td>\n","      <td>...</td>\n","      <td>100.372500</td>\n","      <td>17.562480</td>\n","      <td>46.985570</td>\n","      <td>91206.66000</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>0.671069</td>\n","      <td>0.117990</td>\n","      <td>0.263020</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>74565</th>\n","      <td>MA2561</td>\n","      <td>MA2561_18</td>\n","      <td>2021-10-27</td>\n","      <td>21</td>\n","      <td>28.915560</td>\n","      <td>64.0</td>\n","      <td>50.880280</td>\n","      <td>100.00000</td>\n","      <td>100.000000</td>\n","      <td>35.557400</td>\n","      <td>...</td>\n","      <td>100.470600</td>\n","      <td>28.368430</td>\n","      <td>50.625460</td>\n","      <td>51693.13000</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>0.721257</td>\n","      <td>0.169233</td>\n","      <td>0.296830</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8813 rows × 21 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8a94366d-074a-4667-9eea-aa67da935874')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8a94366d-074a-4667-9eea-aa67da935874 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8a94366d-074a-4667-9eea-aa67da935874');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-be69b6ae-ed44-474b-b8d7-a071fe0f3628\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-be69b6ae-ed44-474b-b8d7-a071fe0f3628')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-be69b6ae-ed44-474b-b8d7-a071fe0f3628 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":117}]},{"cell_type":"code","source":["final_data_50.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aBEsGSLDmDXM","executionInfo":{"status":"ok","timestamp":1704256709413,"user_tz":-540,"elapsed":463,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"57381488-ffa2-4ef1-8c37-118e3ccbf21b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['base_station', 'machine_id', 'data', 'hour', 'connect_avg',\n","       'connect_max', 'in_handover_rate', 'out_handover_rate',\n","       'inter_handover_rate', 'lower_prb', 'upper_prb', 'reconfig_rate',\n","       'lower_bler', 'upper_bler', 'tot_et', 'y', 'zscore', 'predict_prob',\n","       'isolation_scores', 'score_avg', 'anomaly_fin'],\n","      dtype='object')"]},"metadata":{},"execution_count":119}]},{"cell_type":"markdown","source":["- csv파일로 저장하고 대시보드 팀에게 전달"],"metadata":{"id":"WiqSuAzRYkV-"}},{"cell_type":"code","source":["final_data_50.to_csv('/content/drive/MyDrive/ASAC_데이터분석/ASAC_최종프로젝트(예지보전)/final_data_50.csv', index=False)"],"metadata":{"id":"1pEVysronS4J"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 6.설명가능한 ai(XAI)"],"metadata":{"id":"wthvh-rk_3AS"}},{"cell_type":"code","source":["!pip install lime"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3ZsozZKiny4w","executionInfo":{"status":"ok","timestamp":1704263153884,"user_tz":-540,"elapsed":9153,"user":{"displayName":"김설진","userId":"10368705742613591488"}},"outputId":"7b977215-6338-4a46-f8a0-b71684d2a9ba"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting lime\n","  Downloading lime-0.2.0.1.tar.gz (275 kB)\n","\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/275.7 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[91m━━━━━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m\u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m81.9/275.7 kB\u001b[0m \u001b[31m2.5 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m275.7/275.7 kB\u001b[0m \u001b[31m4.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from lime) (3.7.1)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from lime) (1.23.5)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from lime) (1.11.4)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from lime) (4.66.1)\n","Requirement already satisfied: scikit-learn>=0.18 in /usr/local/lib/python3.10/dist-packages (from lime) (1.2.2)\n","Requirement already satisfied: scikit-image>=0.12 in /usr/local/lib/python3.10/dist-packages (from lime) (0.19.3)\n","Requirement already satisfied: networkx>=2.2 in /usr/local/lib/python3.10/dist-packages (from scikit-image>=0.12->lime) (3.2.1)\n","Requirement already satisfied: pillow!=7.1.0,!=7.1.1,!=8.3.0,>=6.1.0 in /usr/local/lib/python3.10/dist-packages (from scikit-image>=0.12->lime) (9.4.0)\n","Requirement already satisfied: imageio>=2.4.1 in /usr/local/lib/python3.10/dist-packages (from scikit-image>=0.12->lime) (2.31.6)\n","Requirement already satisfied: tifffile>=2019.7.26 in /usr/local/lib/python3.10/dist-packages (from scikit-image>=0.12->lime) (2023.12.9)\n","Requirement already satisfied: PyWavelets>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-image>=0.12->lime) (1.5.0)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from scikit-image>=0.12->lime) (23.2)\n","Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.18->lime) (1.3.2)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.18->lime) (3.2.0)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->lime) (1.2.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->lime) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->lime) (4.47.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->lime) (1.4.5)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->lime) (3.1.1)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->lime) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib->lime) (1.16.0)\n","Building wheels for collected packages: lime\n","  Building wheel for lime (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for lime: filename=lime-0.2.0.1-py3-none-any.whl size=283835 sha256=07a473f43cd9e4393105d26dcf4ed40071599622e168b7764e6bfe3f454153be\n","  Stored in directory: /root/.cache/pip/wheels/fd/a2/af/9ac0a1a85a27f314a06b39e1f492bee1547d52549a4606ed89\n","Successfully built lime\n","Installing collected packages: lime\n","Successfully installed lime-0.2.0.1\n"]}]},{"cell_type":"code","source":["import lime\n","import lime.lime_tabular"],"metadata":{"id":"k8bIXOi3_9Lt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from lime import lime_tabular\n","import random\n","\n","explainer = lime_tabular.LimeTabularExplainer(X_res.values, mode=\"classification\", feature_names= X_test.columns, class_names=['0', '1'], verbose=True)\n","\n","idx = random.randint(1, len(X_test))\n","\n","print(\"Prediction : \", rf.predict(X_test.values[[0]]))\n","print(\"Actual :     \", y_test.values[0])\n","\n","explanation = explainer.explain_instance(X_test.values[0], rf.predict_proba, num_features=len(X_test.columns), labels=(0,1) ,num_samples=5000)"],"metadata":{"id":"W39lAkqqcyIu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["explanation.show_in_notebook()"],"metadata":{"id":"OvYazjCoc0xN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 모델 불러오기\n","model = rf_opt  # LIME을 적용할 모델을 불러옵니다.\n","\n","# LIME 설명 객체 생성\n","explainer = lime.lime_tabular.LimeTabularExplainer(X_res, mode=\"classification\")\n","\n","# 설명할 데이터 선택\n","data_instance = y_pred  # 설명하고자 하는 데이터를 선택합니다.\n","\n","# LIME을 통한 설명 생성\n","explanation = explainer.explain_instance(data_instance, model.predict_proba)\n","\n","# 설명 결과 출력\n","explanation.show_in_notebook()  # Jupyter Notebook에서 설명 결과를 출력합니다."],"metadata":{"id":"OovELc6_Addt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"NyAkC6hvBq-D"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 질문\n","1. z스코어값을 고민하다가 이상탐지에 많이 사용된다는 2로 두고 진행(딱 12%의 이상치가 나오기때문)\n","2. 3개 컬럼의 평균으로 해도 될지? z스코어 값때문에 아무래도 많이 편차가 생김 (0.5값을 넘지않음)\n","3. 최종 결과 뽑을 때 88%를 기준으로 이상치를 뽑아도 되는지?\n","4. XAI : one-hot인코딩 vs target 인코딩\n","5. 대시보드 팀이 원하는 피처중요도가 어떤 것인지? (전체 중요도 or 포인트 하나마다의 중요도)\n","\n","- 성능높이기 위해서 해볼 것\n","  + n_estimate를 더 크게해서 성능 높이기(트리모델)\n","  + 롤링통계량"],"metadata":{"id":"RO41adTohCt5"}}]}